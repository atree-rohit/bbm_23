import{_ as $,o as r,c as d,b as i,j as w,t as m,F as p,l as y,d as C,p as P,k as S,g as L,m as B,B as N,n as j,C as O,D as k,E as T,G as q,H as x,h as A,f as W,s as V}from"./_plugin-vue_export-helper-a40c10a7.js";import{z as F,m as I,i as H,s as v}from"./viridis-f479ff60.js";const G={name:"ModalEditObservation",props:{show:{type:Boolean,default:!1},data:{type:Object,required:!0},geojson:{type:Object,required:!0}},emits:["close"],data(){return{levels:["countries","states","districts"]}},mounted(){},computed:{validate_data(){const{latitude:t,longitude:e,state:s,district:o,observed_on:a,date:n,taxa_id:l}=this.data;return{latitude:t,longitude:e,state:s,district:o,observed_on:a,date:n,taxa_id:l}},show_map(){return this.data.latitude&&this.data.longitude&&(this.data.state==null||this.data.district==null)}},watch:{show(t){this.current_district_coordinator_id=0;let e=document.querySelector("body");t==!0?e.classList.add("modal-open"):e.classList.remove("modal-open")}},methods:{valueFromLabel(t){return t.replace(/\s/g,"_").toLowerCase()},closeModal(){this.$emit("close")},check(t){let e=null;for(const s of this.geojson[t].features)for(let o of s.geometry.coordinates){t=="districts"&&(o=[o]);for(const a of o)if(console.log(a),this.pointInPolygon(this.data.longitude,this.data.latitude,a)){switch(t){case"countries":e=s.properties.ADMIN;break;case"states":e=s.properties.state;break;case"districts":e=s.properties.districts;break}break}}console.log(e)},pointInPolygon(t,e,s){let o=0;const a=s.length;for(let n=0;n<a;n++){const l=(n+1)%a,[h,_]=s[n],[b,g]=s[l];if(_===g||e<Math.min(_,g)||e>=Math.max(_,g))continue;(e-_)*(b-h)/(g-_)+h>t&&o++}return o%2===1}}},Y=t=>(P("data-v-5210b2e2"),t=t(),S(),t),Z={key:0,class:"modal fade show","aria-modal":"true",role:"dialog"},J={class:"modal-dialog modal-lg"},R={class:"modal-content"},U={class:"modal-header"},X=Y(()=>i("h3",{class:"modal-title",id:"exampleModalLiveLabel"},"View Observation Details",-1)),K={class:"modal-body d-flex"},Q={class:"btn-continer"},tt=["onClick","textContent"],et={class:"modal-footer"},st={key:1,class:"modal-backdrop fade show"};function ot(t,e,s,o,a,n){return r(),d(p,null,[s.show?(r(),d("div",Z,[i("div",J,[i("div",R,[i("div",U,[X,i("button",{type:"button",class:"btn-close",onClick:e[0]||(e[0]=(...l)=>n.closeModal&&n.closeModal(...l))})]),i("div",K,[i("div",null,[w(" Validate Data "),i("pre",null,"                            "+m(n.validate_data)+`
                        `,1)]),i("div",null,[w(" Location "),i("div",Q,[(r(!0),d(p,null,y(a.levels,l=>(r(),d("button",{class:"btn btn-success mx-1",key:l,onClick:h=>n.check(l),textContent:m(l)},null,8,tt))),128))])])]),i("div",et,[i("button",{type:"button",class:"btn btn-secondary",onClick:e[1]||(e[1]=(...l)=>n.closeModal&&n.closeModal(...l))},"Close")])])])])):C("",!0),s.show?(r(),d("div",st)):C("",!0)],64)}const at=$(G,[["render",ot],["__scopeId","data-v-5210b2e2"]]);const nt=L({name:"MapCleanData",props:{data:{type:Array,required:!0},modes:{type:Array,required:!0},tooltip_third_row_label:{type:String,default:""}},emits:["mode-change","polygon-clicked"],data(){return{mode:this.modes[0],polygons:null,path:null,svg:null,projection:null,colors:null,max:null,height:500,width:500,zoomTransform:0,tooltip:null}},watch:{mode(t){this.$emit("mode-change",t)},data(t){console.log("data changed"),this.init()}},computed:{...B({geojson:t=>t.data.geojson}),current_geojson(){return this.geojson[this.mode]},zoom(){return F().scaleExtent([.5,250]).translateExtent([[-.5*this.width,-.75*this.height],[2.5*this.width,2.5*this.height]]).on("zoom",this.handleZoom)},mode_key(){return{countries:"country",states:"state",districts:"district"}[this.mode]}},mounted(){},updated(){console.log("updated: re-initializing"),this.init()},methods:{init(){console.log("init"),this.current_geojson.features?(this.init_variables(),this.init_svg(),this.render_map()):console.log("No geojson")},init_variables(){this.polygons=null,this.path=null,this.svg={},this.height=window.innerHeight*.8,this.width=window.innerWidth,window.innerWidth<800?(this.height=window.innerHeight*.6,this.projection=I().scale(600).center([110,20])):this.projection=I().scale(1e3).center([80,27.5]),this.path=H().projection(this.projection),this.tooltip=this.init_tooltip()},init_tooltip(){return v("body .d3-tooltip").empty()||v("body .d3-tooltip").remove(),v("body").append("div").attr("class","d3-tooltip").style("position","absolute").style("top","0").style("z-index","10").style("visibility","hidden").style("padding","10px").style("background","rgba(0,0,0,0.75)").style("border-radius","4px").style("color","#fff").text("a simple tooltip")},init_svg(){v("#map-container svg.svg-content").empty()||v("#map-container svg.svg-content").remove(),this.svg=v("#map-container").append("svg").attr("preserveAspectRatio","xMinYMin meet").attr("width",this.width).attr("height",this.height).classed("svg-content",!0),this.zoomTransform||(this.zoomTransform=N(this.svg.node())),this.height>this.width&&this.legend.shapeWidth(35).cells(4)},render_map(){let t=this.svg.append("g").classed("map-boundary",!0).selectAll("path").append("g");this.svg.append("g").classed("map-labels",!0).selectAll("text").append("g"),this.polygons=t.append("g").classed("polygons",!0),this.current_geojson.features.forEach(e=>{this.drawPolygon(e)}),this.drawPoints(),this.svg.call(this.zoom),this.svg.call(this.zoom.transform,this.zoomTransform)},drawPoints(){const t=this.svg.append("g").classed("points",!0);this.data.forEach(e=>{const{longitude:s,latitude:o}=e,[a,n]=this.projection([s,o]);t.append("circle").attr("cx",a).attr("cy",n).attr("r","0.15rem").classed("point",!0)})},drawPolygon(t){this.polygons.append("g").data([t]).enter().append("path").attr("d",this.path).on("click",(e,s)=>this.clicked(s))},getPolygonId(t){let e=t.region,s=[" ","&","(",")","."];return t.state!=null&&(e=t.state),t.district!=null&&(e=t.district),s.forEach(o=>{e=e.replaceAll(o,"_")}),e},clicked(t){console.log(t);let e={name:t.properties[this.mode_key],mode:this.mode};console.log(e),this.$emit("polygon-clicked",e)},drawPolygonBoundary(t){this.polygons.append("g").data([t]).enter().append("path").classed("state-boundary",!0).classed("selected-polygon",e=>this.selected.state&&e.properties.state==this.selected.state||this.selected.region&&e.properties.region==this.selected.region).attr("properties",e=>JSON.stringify(e.properties)).attr("d",this.path).attr("id",this.getPolygonId(t.properties))},drawPolygonLabel(t,e){const s=this.regional_data[this.polygon_mode].find(a=>a[this.polygon_key]==e.properties[this.polygon_key]);let o="";s&&(o=this.format_number(s[this.data_mode])),t.append("g").data([e]).enter().append("text").classed("poly_text",!0).attr("x",a=>this.path.centroid(a)[0]).attr("y",a=>this.path.centroid(a)[1]).classed("small-text",!0).attr("text-anchor","middle").text(o).on("mouseover",()=>{this.tooltip.html(this.hover_text(e.properties)).style("visibility","visible")}).on("mousemove",(a,n)=>{this.tooltip.style("top",a.pageY-10+"px").style("left",a.pageX+10+"px")}).on("mouseout",()=>this.tooltip.html("").style("visibility","hidden")).on("click",(a,n)=>this.clicked(n))},color_polygon(t){let e=this.mapData.find(s=>s.name==t[this.mode_key]);return e?this.colors(e.value):this.colors(0)},handleZoom(t){this.zoomTransform=t.transform;let e=1/t.transform.k*.8;this.svg.selectAll(".poly_text").attr("transform",t.transform).style("font-size",`${e}rem`),this.svg.selectAll("path").attr("transform",t.transform),this.svg.selectAll("circle").attr("transform",t.transform)},hover_text(t){var s;let e=["state","district"].map(o=>`<tr><td>${this.capitalizeWords(o)}</td><td>${t[o]?t[o]:"-"}</td></tr>`);return e.push(`<tr><td>${this.tooltip_third_row_label}</td><td>${((s=this.mapData.find(o=>o.name==t[this.mode_key]))==null?void 0:s.value)||0}</td></tr>`),`<table border='1' class='d3-tooltip'>${e.join(`
`)}</table>`},format_number(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},capitalizeWords(t){return t?t.charAt(0).toUpperCase()+t.slice(1):""}}}),it={class:"switcher switcher-sm text-center py-2 bg-dark"},lt=["onClick","textContent"],rt=i("div",{id:"map"},[i("div",{id:"map-container"})],-1);function dt(t,e,s,o,a,n){return r(),d(p,null,[i("div",it,[(r(!0),d(p,null,y(t.modes,l=>(r(),d("button",{class:j(["btn mx-1",l===t.mode?"btn-success":"btn-outline-success bg-light"]),key:l,onClick:h=>t.mode=l,textContent:m(l)},null,10,lt))),128))]),rt],64)}const ct=$(nt,[["render",dt]]);const ht={class:"btn-group border border-secondary w-100 p-3"},ut=["textContent","onClick"],pt={key:0,class:"table-container border border-danger"},_t={class:"table table-sm table-hover"},mt={class:"bg-dark text-light"},gt=["textContent"],vt=["onClick"],yt=["textContent"],bt={__name:"CleanData",setup(t){const e=O(),s=["counts","inat","ibp","ifb"],o=k(""),a=k(!1),n=k({});T(()=>{e.dispatch("data/getMaps")}),q(o,(u,D)=>{u!==D&&e.dispatch("clean_data/getData",u)});const l=x(()=>e.state.data.geojson),h=x(()=>e.state.clean_data.data),_=x(()=>h&&h.value&&h.value[0]?["id","user","observed_on","place","country","state","district","latitude","longitude","taxa_id","validated"]:[]),b=x(()=>h.value.filter(u=>u.validated==!1)),g=u=>{n.value=u,a.value=!0},z=()=>{n.value={},a.value=!1},E=u=>u.validated?"table-success":"table-danger";return(u,D)=>(r(),d(p,null,[i("div",ht,[(r(),d(p,null,y(s,c=>i("button",{class:j(["btn mx-2 rounded",{"btn-success":c===o.value,"btn-outline-secondary":c!==o.value}]),key:c,textContent:m(c),onClick:f=>o.value=c},null,10,ut)),64))]),w(" "+m(h.value.length)+" ",1),o.value?(r(),d("div",pt,[i("table",_t,[i("thead",mt,[i("tr",null,[(r(!0),d(p,null,y(_.value,c=>(r(),d("th",{key:c,textContent:m(c)},null,8,gt))),128))])]),i("tbody",null,[(r(!0),d(p,null,y(b.value,c=>(r(),d("tr",{key:c.id,onClick:f=>g(c),class:j(E(c))},[(r(!0),d(p,null,y(_.value,f=>(r(),d("td",{key:f,textContent:m(c[f])},null,8,yt))),128))],10,vt))),128))])])])):C("",!0),A(ct,{data:b.value,modes:["countries","states","districts"],tooltip_third_row_label:""},null,8,["data"]),A(at,{show:a.value,data:n.value,geojson:l.value,onClose:z},null,8,["show","data","geojson"])],64))}},ft=$(bt,[["__scopeId","data-v-05b500cc"]]),M=W({});M.component("clean-data",ft);M.use(V);M.mount("#app");
