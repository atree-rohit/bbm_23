import{_ as k,B as j,L as z,c as d,o as n,b as l,m as B,z as $,s as y,r as b,F as _,l as g,h as w,n as m,t as p,d as M,p as P,k as S,x as v,f as T}from"./_plugin-vue_export-helper-97672bd7.js";import{z as A,m as D,i as F,s as f}from"./viridis-f5b5d56a.js";import{m as O,l as L,c as I,f as W}from"./indexRollupNext-af0673f2.js";import{L as E}from"./LoadingData-6e9b5fcb.js";import"./ButterflyAnimation-b692e281.js";const q={name:"MapData",props:{geojson:{type:Object,required:!0},data:{type:Object,required:!0},mode:{type:String,required:!0},tooltip_third_row_label:{type:String,default:""}},emits:["mode-change","polygon-clicked"],data(){return{polygons:null,path:null,svg:null,projection:null,colors:null,max:null,height:500,width:500,zoomTransform:0,tooltip:null,selected:null}},watch:{mode(t){this.$emit("mode-change",t)},data(){this.init()}},computed:{mapData(){return this.data[this.mode]},zoom(){return A().scaleExtent([.5,250]).translateExtent([[-.5*this.width,-.75*this.height],[2.5*this.width,2.5*this.height]]).on("zoom",this.handleZoom)},mode_key(){return this.mode.slice(0,-1)}},created(){console.log("Map mounted: initializing"),this.geojson&&this.mapData&&this.init()},updated(){console.log("Map updated: re-initializing"),this.init()},methods:{init(){this.mapData&&this.geojson[this.mode].features?(this.init_variables(),this.init_legend(),this.init_svg(),this.render_map()):console.log("No geojson")},init_variables(){this.polygons=null,this.path=null,this.svg={},window.innerWidth<800?(this.width=window.innerWidth*.95,this.height=window.innerHeight*.45,this.projection=D().scale(550).center([112.5,17.5])):(this.height=window.innerHeight*.9,this.width=window.innerWidth*.55,this.projection=D().scale(1e3).center([95,27.5])),this.path=F().projection(this.projection),this.tooltip=this.init_tooltip()},init_tooltip(){return f("body .d3-tooltip").empty()||f("body .d3-tooltip").remove(),f("body").append("div").attr("class","d3-tooltip").style("position","absolute").style("top","0").style("z-index","10").style("visibility","hidden").style("padding","10px").style("background","rgba(0,0,0,0.75)").style("border-radius","4px").style("color","#fff").text("a simple tooltip")},init_legend(){this.colors={},this.legend={};let t=this.mapData;this.selected!=null&&(t=this.data.districts),this.max=O(t,e=>e.value),this.colors=L().domain([0,1,this.max/3,this.max]).range(["#c33","#488","#fd0","#24ff00"]).clamp(!0),this.legend=I().shapeHeight(20).shapeWidth(60).scale(this.colors).labelFormat(W(",.0f")).orient("horizontal").labelOffset(-10).labelAlign("middle").cells(6)},init_svg(){f("#map-container svg.svg-content").empty()||f("#map-container svg.svg-content").remove(),this.svg=f("#map-container").append("svg").attr("preserveAspectRatio","xMinYMin meet").attr("width",this.width).attr("height",this.height).classed("svg-content",!0),this.zoomTransform||(this.zoomTransform=j(this.svg.node())),this.height>this.width&&this.legend.shapeWidth(35).cells(4)},render_map(){let t=this.svg.append("g").classed("map-boundary",!0).selectAll("path").append("g");this.svg.append("g").classed("map-labels",!0).selectAll("text").append("g"),this.polygons=t.append("g").classed("polygons",!0),this.selected!=null?this.geojson.districts.features.filter(s=>s.properties.state==this.selected).map(s=>this.drawPolygon(s)):this.geojson[this.mode].features.forEach(e=>{this.drawPolygon(e)}),this.svg.append("g").attr("class","legend").attr("transform","translate("+this.width*.55+", 25)").call(this.legend),this.svg.call(this.zoom),this.svg.call(this.zoom.transform,this.zoomTransform)},drawPolygon(t){this.polygons.append("g").data([t]).enter().append("path").attr("d",this.path).attr("id",this.getPolygonId(t.properties)).attr("fill",e=>this.color_polygon(t.properties)).on("mouseover",(e,s)=>{this.tooltip.html(this.hover_text(t.properties)).style("visibility","visible")}).on("mousemove",(e,s)=>{this.tooltip.style("top",e.pageY-10+"px").style("left",e.pageX+10+"px")}).on("mouseout",()=>this.tooltip.html("").style("visibility","hidden")).on("click",(e,s)=>this.clicked(s))},getPolygonId(t){let e=t.region,s=[" ","&","(",")","."];return t.state!=null&&(e=t.state),t.district!=null&&(e=t.district),s.forEach(i=>{e=e.replaceAll(i,"_")}),e},async clicked(t){let e={name:t.properties[this.mode_key],value:0,mode:this.mode_key},s=this.mapData.find(i=>i.name==e.name);e.value=s?s.value:0,this.$emit("polygon-clicked",e),this.zoomToPolygon(t)},zoomToPolygon(t){let e=null;this.selected==null||this.selected!=t.properties[this.mode_key]?(e=t,this.selected=t.properties[this.mode_key]):(e=this.geojson[this.mode],this.selected=null);let[[s,i],[a,o]]=this.path.bounds(e);this.svg.transition().duration(1500).call(this.zoom.transform,z.translate(this.width/2,this.height/2).scale(Math.min(8,.9/Math.max((a-s)/this.width,(o-i)/this.height))).translate(-(s+a)/2,-(i+o)/2))},drawPolygonBoundary(t){this.polygons.append("g").data([t]).enter().append("path").classed("state-boundary",!0).classed("selected-polygon",e=>this.selected.state&&e.properties.state==this.selected.state||this.selected.region&&e.properties.region==this.selected.region).attr("properties",e=>JSON.stringify(e.properties)).attr("d",this.path).attr("id",this.getPolygonId(t.properties))},drawPolygonLabel(t,e){const s=this.regional_data[this.polygon_mode].find(a=>a[this.polygon_key]==e.properties[this.polygon_key]);let i="";s&&(i=this.format_number(s[this.data_mode])),t.append("g").data([e]).enter().append("text").classed("poly_text",!0).attr("x",a=>this.path.centroid(a)[0]).attr("y",a=>this.path.centroid(a)[1]).classed("small-text",!0).attr("text-anchor","middle").text(i).on("mouseover",()=>{this.tooltip.html(this.hover_text(e.properties)).style("visibility","visible")}).on("mousemove",(a,o)=>{this.tooltip.style("top",a.pageY-10+"px").style("left",a.pageX+10+"px")}).on("mouseout",()=>this.tooltip.html("").style("visibility","hidden")).on("click",(a,o)=>this.clicked(o))},color_polygon(t){let e="states";t.district!=null&&(e="districts");let s=e=="states"?"state":"district",i=this.data[e].find(a=>a.name==t[s]);return i?this.colors(i.value):this.colors(0)},handleZoom(t){this.zoomTransform=t.transform;let e=1/t.transform.k*.8;this.svg.selectAll(".poly_text").attr("transform",t.transform).style("font-size",`${e}rem`),this.svg.selectAll("path").attr("transform",t.transform),this.svg.selectAll("circle").attr("transform",t.transform).attr("r",e)},hover_text(t){var s,i;let e=[];if(t.district!=null)e.push(`<tr><td>District</td><td>${t.district?t.district:"-"}</td></tr>`),e.push(`<tr><td>${this.tooltip_third_row_label}</td><td>${((s=this.data.districts.find(a=>a.name==t.district))==null?void 0:s.value)||0}</td></tr>`);else{let a=this.geojson.districts.features.filter(o=>o.properties.state==t.state).length;e.push(`<tr><td>State</td><td>${t.state?t.state:"-"}</td></tr>`),e.push(`<tr><td>Districts</td><td>${a}</td></tr>`),e.push(`<tr><td>${this.tooltip_third_row_label}</td><td>${((i=this.data.states.find(o=>o.name==t.state))==null?void 0:i.value)||0}</td></tr>`)}return`<table border='1' class='d3-tooltip'>${e.join(`
`)}</table>`},format_number(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}}},N={id:"map"},Y=l("div",{id:"map-container"},null,-1),H=[Y];function R(t,e,s,i,a,o){return n(),d("div",N,H)}const U=k(q,[["render",R]]);const V={name:"MapBBMData",components:{MapData:U},emits:["state-selected"],data(){return{mode:"states",years:[2020,2021,2022,2023],selected_year:2023,selected:{states:null,districts:null}}},computed:{...B({district_coordinators:t=>t.district_coordinators.all_data,geojson:t=>t.data.geojson}),...$({filtered_map_data:"data/filtered_map_data"})},methods:{valueFromLabel(t){return t.replace(/\s/g,"_").toLowerCase()},polygonClick(t){this.selected[t.mode]=this.selected[t.mode]===t.name?null:t.name,this.selected[t.mode==="state"?"district":"state"]=null,this.$emit("state-selected",this.selected)},selectYear(t){this.selected_year==t?this.selected_year=null:this.selected_year=t,y.dispatch("data/setFilter",{field:"year",value:this.selected_year})}}},G={class:"map-container"},X={class:"border border-danger d-flex justify-content-center py-1"},Z=["onClick","textContent"];function J(t,e,s,i,a,o){const c=b("map-data");return n(),d("div",G,[l("div",X,[(n(!0),d(_,null,g(a.years,r=>(n(),d("button",{class:m(["btn btn-sm mx-1",{"btn-success":r===a.selected_year||a.selected_year==null,"btn-outline-light":r!==a.selected_year}]),key:r,onClick:h=>o.selectYear(r),textContent:p(r)},null,10,Z))),128))]),w(c,{geojson:t.geojson,data:t.filtered_map_data,mode:a.mode,tooltip_third_row_label:"Observations",onModeChange:e[0]||(e[0]=r=>a.mode=r),onPolygonClicked:o.polygonClick},null,8,["geojson","data","mode","onPolygonClicked"])])}const K=k(V,[["render",J]]);const Q={name:"DataTable",props:{content:{type:Object,required:!0}},data(){return{sort_key:null,sort_order:"desc"}},computed:{sorted_data(){let t=[];if(this.data&&this.data.length)if(!this.total_row)t=this.sort_data(this.data);else{let e=this.data.pop();t=this.sort_data(this.data),t.push(e)}return t},headers(){return this.content?this.content.headers:[]},data(){return this.content?(this.sort_key==null&&(this.sort_key=this.headers[this.content.sort_col].name),this.content.rows):[]},total_row(){return this.content.total_row},hue(){return this.content.hue}},methods:{sort_data(t){return t.sort((e,s)=>{let i=e[this.sort_key],a=s[this.sort_key];return this.sort_order==="asc"?i<a?-1:i>a?1:0:i>a?-1:i<a?1:0})},cellText(t,e){let s=t[e.name];return typeof s=="number"&&(s=this.numberWithCommas(s)),s},numberWithCommas(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},headerSortClass(t){let e="";return t.sortable&&(e="sortable",t.name===this.sort_key&&(e+=" sort-"+this.sort_order)),e},headerClick(t){t.sortable&&(this.sort_key=t.name,this.sort_order=this.sort_order==="asc"?"desc":"asc")},totalRowClass(t,e){if(this.total_row&&e===this.sorted_data.length-1)return"total-row";if(Object.values(t).filter(s=>typeof s=="number").reduce((s,i)=>s+i,0)==0)return"empty-row"},rowClick(t,e){if(this.content.click!=null&&(this.content.total_row==!1||e<this.content.rows.length-1))if(["state","district"].indexOf(this.content.click)!=-1){let s=null;this.content.click=="state"&&(s=t[this.content.click]),y.dispatch("data/setFilter",{field:"state",value:s})}else{let s={field:this.content.click,value:t[this.content.click]};y.dispatch("data/setFilter",s)}else console.log(this.content.click,this.content.total_row,e,this.content.rows.length)}}},tt={class:"table-wrapper"},et={class:"table-container"},st={class:"table table-sm table-hover"},at=["textContent","onClick"],ot=["row_id","onClick"],it=["textContent"];function lt(t,e,s,i,a,o){return n(),d("div",tt,[l("div",et,[l("table",st,[l("thead",{class:m(`bg-${o.hue} text-light`)},[l("tr",null,[(n(!0),d(_,null,g(o.headers,(c,r)=>(n(),d("th",{key:r,textContent:p(c.label),class:m(o.headerSortClass(c)),onClick:h=>o.headerClick(c)},null,10,at))),128))])],2),l("tbody",{class:m(`table-${o.hue}`)},[(n(!0),d(_,null,g(o.sorted_data,(c,r)=>(n(),d("tr",{key:r,row_id:r,class:m(o.totalRowClass(c,r)),onClick:h=>o.rowClick(c,r)},[(n(!0),d(_,null,g(o.headers,(h,x)=>(n(),d("td",{key:x,class:m(h==null?void 0:h.class),textContent:p(o.cellText(c,h))},null,10,it))),128))],10,ot))),128))],2)])])])}const nt=k(Q,[["render",lt],["__scopeId","data-v-971224e4"]]);const rt={name:"DataPolicy",props:{show:{type:Boolean,default:!1}},emits:["close"],data(){return{points:[["🦋","Open Access","Big Butterfly Month emphasizes Open Access to compiled data, both from BBM and other sources."],["🌐","Credible Data Portals","While BBM doesn't endorse a specific platform, it provides a list of credible data portals which would lead to Open Access and ethical use."],["📜","Data Alignment","All data shared on these platforms align with the policies of each respective data portal."],["👩‍🔬","Citizen Scientist Focus","BBM actively encourages and oversees butterfly count data collection, focusing on structured counts by citizen scientists."],["🗺️","Future Plants","Future plans include publishing BBM count data on GBIF, until then exclusively use it for display on the BBM data page."]]}},methods:{closeModal(){this.$emit("close")}}},dt=t=>(P("data-v-bf6a210c"),t=t(),S(),t),ct={key:0,class:"modal fade show","aria-modal":"true",role:"dialog"},ht={class:"modal-dialog modal-lg"},pt={class:"modal-content"},_t={class:"modal-header"},ut=dt(()=>l("h3",{class:"modal-title",id:"exampleModalLiveLabel"},"🦋 Big Butterfly Month: Data Policy 🦋",-1)),mt={class:"modal-body"},ft={class:"px-2 fw-bold"},gt={class:"px-2"},yt={class:"modal-footer"},vt={key:1,class:"modal-backdrop fade show"};function bt(t,e,s,i,a,o){return n(),d(_,null,[s.show?(n(),d("div",ct,[l("div",ht,[l("div",pt,[l("div",_t,[ut,l("button",{type:"button",class:"btn-close",onClick:e[0]||(e[0]=(...c)=>o.closeModal&&o.closeModal(...c))})]),l("div",mt,[(n(!0),d(_,null,g(a.points,(c,r)=>(n(),d("div",{key:r,class:"py-2"},[l("span",null,p(c[0]),1),l("span",ft,p(c[1]),1),l("span",gt,p(c[2]),1)]))),128))]),l("div",yt,[l("button",{type:"button",class:"btn btn-secondary",onClick:e[1]||(e[1]=(...c)=>o.closeModal&&o.closeModal(...c))},"Close")])])])])):M("",!0),s.show?(n(),d("div",vt)):M("",!0)],64)}const kt=k(rt,[["render",bt],["__scopeId","data-v-bf6a210c"]]);const wt={name:"DataComponent",components:{MapBBMData:K,DataTable:nt,LoadingData:E,ModalDataPolicy:kt},data(){return{filters:[{id:1,name:"Portals",active:!0,disabled:!1},{id:2,name:"Location",active:!1,disabled:!1},{id:3,name:"Taxa",active:!1,disabled:!1},{id:4,name:"Date",active:!1,disabled:!1},{id:5,name:"Users",active:!1,disabled:!1}],show_modal:!1,selected:null}},computed:{...B({geojson:t=>t.data.geojson}),...$({table_data:"data/table_data"}),active_filter(){return this.filters.filter(t=>t.active)[0]}},created(){y.dispatch("data/getAllData")},methods:{getObservationsCount(t){let e=0;return t.map(s=>{Object.keys(this.filtered_observations).forEach(i=>{e+=this.filtered_observations[i].filter(a=>a[1]==s.id).length})}),e},countUnique(t){return[...new Set(t)].length},selectFilterTab(t){this.filters.map(e=>{e.active=!1}),t.active=!0},async stateSelected(t){this.selected=t.state,y.dispatch("data/setFilter",{field:"state",value:this.selected})}}},xt={class:"data-container"},Ct={class:"canvas"},Mt={class:"map"},Dt={class:"tables-container"},Bt={class:"nav nav-pills bg-light justify-content-center rounded"},$t=["textContent","onClick"],jt={class:"nav-item"},zt={class:"tables"},Pt={class:"bg-warning text-center py-0"},St={key:5};function Tt(t,e,s,i,a,o){const c=b("MapBBMData"),r=b("data-table"),h=b("loading-data"),x=b("ModalDataPolicy");return n(),d(_,null,[l("div",xt,[l("div",Ct,[l("div",Mt,[w(c,{onStateSelected:o.stateSelected},null,8,["onStateSelected"])]),l("div",Dt,[l("ul",Bt,[(n(!0),d(_,null,g(a.filters,u=>(n(),d("li",{class:"nav-item",key:u.id},[l("a",{class:m(["nav-link",{active:u.active,disabled:u.disabled}]),"aria-current":"page",href:"#",textContent:p(u.name),onClick:Ft=>o.selectFilterTab(u)},null,10,$t)]))),128)),l("li",jt,[l("a",{href:"#",class:"nav-link",onClick:e[0]||(e[0]=u=>a.show_modal=!0)},"Data Policy")])]),l("div",zt,[l("h1",Pt,p(a.selected),1),o.active_filter.name=="Portals"?(n(),v(r,{key:0,content:t.table_data.portals},null,8,["content"])):o.active_filter.name=="Location"?(n(),v(r,{key:1,content:t.table_data.locations},null,8,["content"])):o.active_filter.name=="Taxa"?(n(),v(r,{key:2,content:t.table_data.taxa},null,8,["content"])):o.active_filter.name=="Date"?(n(),v(r,{key:3,content:t.table_data.date},null,8,["content"])):o.active_filter.name=="Users"?(n(),v(r,{key:4,content:t.table_data.users},null,8,["content"])):(n(),d("div",St,p(o.active_filter),1))])])])]),w(h),w(x,{show:a.show_modal,onClose:e[1]||(e[1]=u=>a.show_modal=!1)},null,8,["show"])],64)}const At=k(wt,[["render",Tt],["__scopeId","data-v-8b0db119"]]),C=T({});C.component("DataComponent",At);C.use(y);C.mount("#app");
