import{_ as k,B as z,C as $,c as r,o as l,b as d,m as j,z as D,s as f,r as b,F as u,l as v,e as x,n as _,t as g,x as y,h as M}from"./_plugin-vue_export-helper-bd7be5eb.js";import{z as B,m as C,i as S,s as m,a as T,l as P,c as A,f as F}from"./indexRollupNext-5dd4820d.js";import{L as O}from"./LoadingData-b0c9cb5e.js";import"./ButterflyAnimation-a482c4c9.js";const L={name:"MapData",props:{geojson:{type:Object,required:!0},data:{type:Object,required:!0},mode:{type:String,required:!0},tooltip_third_row_label:{type:String,default:""}},emits:["mode-change","polygon-clicked"],data(){return{polygons:null,path:null,svg:null,projection:null,colors:null,max:null,height:500,width:500,zoomTransform:0,tooltip:null,selected:null}},watch:{mode(t){this.$emit("mode-change",t)},data(){this.init()}},computed:{mapData(){return this.data[this.mode]},zoom(){return B().scaleExtent([.5,250]).translateExtent([[-.5*this.width,-.75*this.height],[2.5*this.width,2.5*this.height]]).on("zoom",this.handleZoom)},mode_key(){return this.mode.slice(0,-1)}},mounted(){console.log("Map mounted: initializing"),this.geojson&&this.mapData&&this.init()},updated(){console.log("Map updated: re-initializing"),this.init()},methods:{init(){this.mapData&&this.geojson[this.mode].features?(this.init_variables(),this.init_legend(),this.init_svg(),this.render_map()):console.log("No geojson")},init_variables(){this.polygons=null,this.path=null,this.svg={},window.innerWidth<800?(this.width=window.innerWidth*.95,this.height=window.innerHeight*.45,this.projection=C().scale(550).center([112.5,17.5])):(this.height=window.innerHeight*.9,this.width=window.innerWidth*.55,this.projection=C().scale(1e3).center([95,27.5])),this.path=S().projection(this.projection),this.tooltip=this.init_tooltip()},init_tooltip(){return m("body .d3-tooltip").empty()||m("body .d3-tooltip").remove(),m("body").append("div").attr("class","d3-tooltip").style("position","absolute").style("top","0").style("z-index","10").style("visibility","hidden").style("padding","10px").style("background","rgba(0,0,0,0.75)").style("border-radius","4px").style("color","#fff").text("a simple tooltip")},init_legend(){this.colors={},this.legend={};let t=this.mapData;this.selected!=null&&(t=this.data.districts),this.max=T(t,e=>e.value),this.colors=P().domain([0,1,this.max/3,this.max]).range(["#c33","#488","#fd0","#24ff00"]).clamp(!0),this.legend=A().shapeHeight(20).shapeWidth(60).scale(this.colors).labelFormat(F(",.0f")).orient("horizontal").labelOffset(-10).labelAlign("middle").cells(6)},init_svg(){m("#map-container svg.svg-content").empty()||m("#map-container svg.svg-content").remove(),this.svg=m("#map-container").append("svg").attr("preserveAspectRatio","xMinYMin meet").attr("width",this.width).attr("height",this.height).classed("svg-content",!0),this.zoomTransform||(this.zoomTransform=z(this.svg.node())),this.height>this.width&&this.legend.shapeWidth(35).cells(4)},render_map(){let t=this.svg.append("g").classed("map-boundary",!0).selectAll("path").append("g");this.svg.append("g").classed("map-labels",!0).selectAll("text").append("g"),this.polygons=t.append("g").classed("polygons",!0),this.selected!=null?this.geojson.districts.features.filter(s=>s.properties.state==this.selected).map(s=>this.drawPolygon(s)):this.geojson[this.mode].features.forEach(e=>{this.drawPolygon(e)}),this.svg.append("g").attr("class","legend").attr("transform","translate("+this.width*.55+", 25)").call(this.legend),this.svg.call(this.zoom),this.svg.call(this.zoom.transform,this.zoomTransform)},drawPolygon(t){this.polygons.append("g").data([t]).enter().append("path").attr("d",this.path).attr("id",this.getPolygonId(t.properties)).attr("fill",e=>this.color_polygon(t.properties)).on("mouseover",(e,s)=>{this.tooltip.html(this.hover_text(t.properties)).style("visibility","visible")}).on("mousemove",(e,s)=>{this.tooltip.style("top",e.pageY-10+"px").style("left",e.pageX+10+"px")}).on("mouseout",()=>this.tooltip.html("").style("visibility","hidden")).on("click",(e,s)=>this.clicked(s))},getPolygonId(t){let e=t.region,s=[" ","&","(",")","."];return t.state!=null&&(e=t.state),t.district!=null&&(e=t.district),s.forEach(o=>{e=e.replaceAll(o,"_")}),e},async clicked(t){let e={name:t.properties[this.mode_key],value:0,mode:this.mode_key},s=this.mapData.find(o=>o.name==e.name);e.value=s?s.value:0,this.$emit("polygon-clicked",e),this.zoomToPolygon(t)},zoomToPolygon(t){let e=null;this.selected==null||this.selected!=t.properties[this.mode_key]?(e=t,this.selected=t.properties[this.mode_key]):(e=this.geojson[this.mode],this.selected=null);let[[s,o],[a,i]]=this.path.bounds(e);this.svg.transition().duration(1500).call(this.zoom.transform,$.translate(this.width/2,this.height/2).scale(Math.min(8,.9/Math.max((a-s)/this.width,(i-o)/this.height))).translate(-(s+a)/2,-(o+i)/2))},drawPolygonBoundary(t){this.polygons.append("g").data([t]).enter().append("path").classed("state-boundary",!0).classed("selected-polygon",e=>this.selected.state&&e.properties.state==this.selected.state||this.selected.region&&e.properties.region==this.selected.region).attr("properties",e=>JSON.stringify(e.properties)).attr("d",this.path).attr("id",this.getPolygonId(t.properties))},drawPolygonLabel(t,e){const s=this.regional_data[this.polygon_mode].find(a=>a[this.polygon_key]==e.properties[this.polygon_key]);let o="";s&&(o=this.format_number(s[this.data_mode])),t.append("g").data([e]).enter().append("text").classed("poly_text",!0).attr("x",a=>this.path.centroid(a)[0]).attr("y",a=>this.path.centroid(a)[1]).classed("small-text",!0).attr("text-anchor","middle").text(o).on("mouseover",()=>{this.tooltip.html(this.hover_text(e.properties)).style("visibility","visible")}).on("mousemove",(a,i)=>{this.tooltip.style("top",a.pageY-10+"px").style("left",a.pageX+10+"px")}).on("mouseout",()=>this.tooltip.html("").style("visibility","hidden")).on("click",(a,i)=>this.clicked(i))},color_polygon(t){let e="states";t.district!=null&&(e="districts");let s=e=="states"?"state":"district",o=this.data[e].find(a=>a.name==t[s]);return o?this.colors(o.value):this.colors(0)},handleZoom(t){this.zoomTransform=t.transform;let e=1/t.transform.k*.8;this.svg.selectAll(".poly_text").attr("transform",t.transform).style("font-size",`${e}rem`),this.svg.selectAll("path").attr("transform",t.transform),this.svg.selectAll("circle").attr("transform",t.transform).attr("r",e)},hover_text(t){var s,o;let e=[];if(t.district!=null)e.push(`<tr><td>District</td><td>${t.district?t.district:"-"}</td></tr>`),e.push(`<tr><td>${this.tooltip_third_row_label}</td><td>${((s=this.data.districts.find(a=>a.name==t.district))==null?void 0:s.value)||0}</td></tr>`);else{let a=this.geojson.districts.features.filter(i=>i.properties.state==t.state).length;e.push(`<tr><td>State</td><td>${t.state?t.state:"-"}</td></tr>`),e.push(`<tr><td>Districts</td><td>${a}</td></tr>`),e.push(`<tr><td>${this.tooltip_third_row_label}</td><td>${((o=this.data.states.find(i=>i.name==t.state))==null?void 0:o.value)||0}</td></tr>`)}return`<table border='1' class='d3-tooltip'>${e.join(`
`)}</table>`},format_number(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},capitalizeWords(t){return t?t.charAt(0).toUpperCase()+t.slice(1):""}}},W={id:"map"},E=d("div",{id:"map-container"},null,-1),q=[E];function I(t,e,s,o,a,i){return l(),r("div",W,q)}const Y=k(L,[["render",I]]);const N={name:"MapBBMData",components:{MapData:Y},emits:["state-selected"],data(){return{mode:"states",years:[2020,2021,2022,2023],selected_year:2023,selected:{states:null,districts:null}}},computed:{...j({district_coordinators:t=>t.district_coordinators.all_data,geojson:t=>t.data.geojson}),...D({filtered_map_data:"data/filtered_map_data"})},methods:{valueFromLabel(t){return t.replace(/\s/g,"_").toLowerCase()},polygonClick(t){this.selected[t.mode]=this.selected[t.mode]===t.name?null:t.name,this.selected[t.mode==="state"?"district":"state"]=null,this.$emit("state-selected",this.selected)},selectYear(t){this.selected_year==t?this.selected_year=null:this.selected_year=t,f.dispatch("data/setFilter",{field:"year",value:this.selected_year})}}},U={class:"map-container"},H={class:"border border-danger d-flex justify-content-center py-1"},R=["onClick","textContent"];function V(t,e,s,o,a,i){const c=b("map-data");return l(),r("div",U,[d("div",H,[(l(!0),r(u,null,v(a.years,n=>(l(),r("button",{class:_(["btn btn-sm mx-1",{"btn-success":n===a.selected_year||a.selected_year==null,"btn-outline-light":n!==a.selected_year}]),key:n,onClick:h=>i.selectYear(n),textContent:g(n)},null,10,R))),128))]),x(c,{geojson:t.geojson,data:t.filtered_map_data,mode:a.mode,tooltip_third_row_label:"Observations",onModeChange:e[0]||(e[0]=n=>a.mode=n),onPolygonClicked:i.polygonClick},null,8,["geojson","data","mode","onPolygonClicked"])])}const X=k(N,[["render",V]]);const Z={name:"DataTable",props:{content:{type:Object,required:!0}},data(){return{sort_key:null,sort_order:"desc"}},computed:{sorted_data(){let t=[];if(this.data&&this.data.length)if(!this.total_row)t=this.sort_data(this.data);else{let e=this.data.pop();t=this.sort_data(this.data),t.push(e)}return t},headers(){return this.content?this.content.headers:[]},data(){return this.content?(this.sort_key==null&&(this.sort_key=this.headers[this.content.sort_col].name),this.content.rows):[]},total_row(){return this.content.total_row},hue(){return this.content.hue}},methods:{sort_data(t){return t.sort((e,s)=>{let o=e[this.sort_key],a=s[this.sort_key];return this.sort_order==="asc"?o<a?-1:o>a?1:0:o>a?-1:o<a?1:0})},cellText(t,e){let s=t[e.name];return typeof s=="number"&&(s=this.numberWithCommas(s)),s},numberWithCommas(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},headerSortClass(t){let e="";return t.sortable&&(e="sortable",t.name===this.sort_key&&(e+=" sort-"+this.sort_order)),e},headerClick(t){t.sortable&&(this.sort_key=t.name,this.sort_order=this.sort_order==="asc"?"desc":"asc")},totalRowClass(t,e){if(this.total_row&&e===this.sorted_data.length-1)return"total-row";if(Object.values(t).filter(s=>typeof s=="number").reduce((s,o)=>s+o,0)==0)return"empty-row"},rowClick(t,e){if(this.content.click!=null&&(this.content.total_row==!1||e<this.content.rows.length-1))if(["state","district"].indexOf(this.content.click)!=-1){let s=null;this.content.click=="state"&&(s=t[this.content.click]),f.dispatch("data/setFilter",{field:"state",value:s})}else{let s={field:this.content.click,value:t[this.content.click]};f.dispatch("data/setFilter",s)}else console.log(this.content.click,this.content.total_row,e,this.content.rows.length)}}},G={class:"table-container"},J={class:"table table-sm table-hover"},K=["textContent","onClick"],Q=["row_id","onClick"],tt=["textContent"];function et(t,e,s,o,a,i){return l(),r("div",G,[d("table",J,[d("thead",{class:_(`bg-${i.hue} text-light`)},[d("tr",null,[(l(!0),r(u,null,v(i.headers,(c,n)=>(l(),r("th",{key:n,textContent:g(c.label),class:_(i.headerSortClass(c)),onClick:h=>i.headerClick(c)},null,10,K))),128))])],2),d("tbody",{class:_(`table-${i.hue}`)},[(l(!0),r(u,null,v(i.sorted_data,(c,n)=>(l(),r("tr",{key:n,row_id:n,class:_(i.totalRowClass(c,n)),onClick:h=>i.rowClick(c,n)},[(l(!0),r(u,null,v(i.headers,(h,p)=>(l(),r("td",{key:p,class:_(h==null?void 0:h.class),textContent:g(i.cellText(c,h))},null,10,tt))),128))],10,Q))),128))],2)])])}const st=k(Z,[["render",et],["__scopeId","data-v-ccad0476"]]);const at={name:"DataComponent",components:{MapBBMData:X,DataTable:st,LoadingData:O},data(){return{filters:[{id:1,name:"Portals",active:!0,disabled:!1},{id:2,name:"Location",active:!1,disabled:!1},{id:3,name:"Taxa",active:!1,disabled:!1},{id:4,name:"Date",active:!1,disabled:!1},{id:5,name:"Users",active:!1,disabled:!1}],selected:null}},computed:{...j({geojson:t=>t.data.geojson}),...D({table_data:"data/table_data"}),active_filter(){return this.filters.filter(t=>t.active)[0]}},created(){f.dispatch("data/getAllData")},methods:{getObservationsCount(t){let e=0;return t.map(s=>{Object.keys(this.filtered_observations).forEach(o=>{e+=this.filtered_observations[o].filter(a=>a[1]==s.id).length})}),e},countUnique(t){return[...new Set(t)].length},selectFilterTab(t){this.filters.map(e=>{e.active=!1}),t.active=!0},async stateSelected(t){this.selected=t.state,f.dispatch("data/setFilter",{field:"state",value:this.selected})}}},it={class:"data-container"},ot={class:"canvas"},nt={class:"map"},lt={class:"tables-container"},rt={class:"nav nav-pills bg-light justify-content-center rounded"},dt=["textContent","onClick"],ct={class:"tables"},ht={class:"bg-warning text-center py-0"},pt={key:5};function _t(t,e,s,o,a,i){const c=b("MapBBMData"),n=b("data-table"),h=b("loading-data");return l(),r(u,null,[d("div",it,[d("div",ot,[d("div",nt,[x(c,{onStateSelected:i.stateSelected},null,8,["onStateSelected"])]),d("div",lt,[d("ul",rt,[(l(!0),r(u,null,v(a.filters,p=>(l(),r("li",{class:"nav-item",key:p.id},[d("a",{class:_(["nav-link",{active:p.active,disabled:p.disabled}]),"aria-current":"page",href:"#",textContent:g(p.name),onClick:ut=>i.selectFilterTab(p)},null,10,dt)]))),128))]),d("div",ct,[d("h1",ht,g(a.selected),1),i.active_filter.name=="Portals"?(l(),y(n,{key:0,content:t.table_data.portals},null,8,["content"])):i.active_filter.name=="Location"?(l(),y(n,{key:1,content:t.table_data.locations},null,8,["content"])):i.active_filter.name=="Taxa"?(l(),y(n,{key:2,content:t.table_data.taxa},null,8,["content"])):i.active_filter.name=="Date"?(l(),y(n,{key:3,content:t.table_data.date},null,8,["content"])):i.active_filter.name=="Users"?(l(),y(n,{key:4,content:t.table_data.users},null,8,["content"])):(l(),r("div",pt,g(i.active_filter),1))])])])]),x(h)],64)}const mt=k(at,[["render",_t],["__scopeId","data-v-63dca46d"]]),w=M({});w.component("DataComponent",mt);w.use(f);w.mount("#app");
