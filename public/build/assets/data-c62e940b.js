import{_ as y,A as j,C as z,c as d,o as l,b as r,m as w,l as g,q as b,x as B,d as M,t as p,D,s as x,F as m,r as f,n as _,u as v,f as S}from"./_plugin-vue_export-helper-eea6eb1e.js";import{z as A,m as $,i as T,s as u,a as P,l as q,c as L,f as F}from"./indexRollupNext-2e5e6e35.js";import{B as O}from"./ButterflyAnimation-be3f8d9d.js";const W={name:"MapData",props:{geojson:{type:Object,required:!0},data:{type:Object,required:!0},mode:{type:String,required:!0},tooltip_third_row_label:{type:String,default:""}},emits:["mode-change","polygon-clicked"],data(){return{polygons:null,path:null,svg:null,projection:null,colors:null,max:null,height:500,width:500,zoomTransform:0,tooltip:null,selected:null}},watch:{mode(t){this.$emit("mode-change",t)},data(){this.init()}},computed:{mapData(){return this.data[this.mode]},zoom(){return A().scaleExtent([.5,250]).translateExtent([[-.5*this.width,-.75*this.height],[2.5*this.width,2.5*this.height]]).on("zoom",this.handleZoom)},mode_key(){return this.mode.slice(0,-1)}},mounted(){console.log("Map mounted: initializing"),this.geojson&&this.mapData&&this.init()},updated(){console.log("Map updated: re-initializing"),this.init()},methods:{init(){this.mapData&&this.geojson[this.mode].features?(this.init_variables(),this.init_legend(),this.init_svg(),this.render_map()):console.log("No geojson")},init_variables(){this.polygons=null,this.path=null,this.svg={},window.innerWidth<800?(this.width=window.innerWidth*.95,this.height=window.innerHeight*.45,this.projection=$().scale(550).center([112.5,17.5])):(this.height=window.innerHeight*.9,this.width=window.innerWidth*.55,this.projection=$().scale(1e3).center([95,27.5])),this.path=T().projection(this.projection),this.tooltip=this.init_tooltip()},init_tooltip(){return u("body .d3-tooltip").empty()||u("body .d3-tooltip").remove(),u("body").append("div").attr("class","d3-tooltip").style("position","absolute").style("top","0").style("z-index","10").style("visibility","hidden").style("padding","10px").style("background","rgba(0,0,0,0.75)").style("border-radius","4px").style("color","#fff").text("a simple tooltip")},init_legend(){this.colors={},this.legend={};let t=this.mapData;this.selected!=null&&(t=this.data.districts),this.max=P(t,e=>e.value),this.colors=q().domain([0,1,this.max/3,this.max]).range(["#c33","#488","#fd0","#24ff00"]).clamp(!0),this.legend=L().shapeHeight(20).shapeWidth(60).scale(this.colors).labelFormat(F(",.0f")).orient("horizontal").labelOffset(-10).labelAlign("middle").cells(6)},init_svg(){u("#map-container svg.svg-content").empty()||u("#map-container svg.svg-content").remove(),this.svg=u("#map-container").append("svg").attr("preserveAspectRatio","xMinYMin meet").attr("width",this.width).attr("height",this.height).classed("svg-content",!0),this.zoomTransform||(this.zoomTransform=j(this.svg.node())),this.height>this.width&&this.legend.shapeWidth(35).cells(4)},render_map(){let t=this.svg.append("g").classed("map-boundary",!0).selectAll("path").append("g");this.svg.append("g").classed("map-labels",!0).selectAll("text").append("g"),this.polygons=t.append("g").classed("polygons",!0),this.selected!=null?this.geojson.districts.features.filter(s=>s.properties.state==this.selected).map(s=>this.drawPolygon(s)):this.geojson[this.mode].features.forEach(e=>{this.drawPolygon(e)}),this.svg.append("g").attr("class","legend").attr("transform","translate("+this.width*.55+", 25)").call(this.legend),this.svg.call(this.zoom),this.svg.call(this.zoom.transform,this.zoomTransform)},drawPolygon(t){this.polygons.append("g").data([t]).enter().append("path").attr("d",this.path).attr("id",this.getPolygonId(t.properties)).attr("fill",e=>this.color_polygon(t.properties)).on("mouseover",(e,s)=>{this.tooltip.html(this.hover_text(t.properties)).style("visibility","visible")}).on("mousemove",(e,s)=>{this.tooltip.style("top",e.pageY-10+"px").style("left",e.pageX+10+"px")}).on("mouseout",()=>this.tooltip.html("").style("visibility","hidden")).on("click",(e,s)=>this.clicked(s))},getPolygonId(t){let e=t.region,s=[" ","&","(",")","."];return t.state!=null&&(e=t.state),t.district!=null&&(e=t.district),s.forEach(i=>{e=e.replaceAll(i,"_")}),e},async clicked(t){let e={name:t.properties[this.mode_key],value:0,mode:this.mode_key},s=this.mapData.find(i=>i.name==e.name);e.value=s?s.value:0,this.$emit("polygon-clicked",e),this.zoomToPolygon(t)},zoomToPolygon(t){let e=null;this.selected==null||this.selected!=t.properties[this.mode_key]?(e=t,this.selected=t.properties[this.mode_key]):(e=this.geojson[this.mode],this.selected=null);let[[s,i],[a,o]]=this.path.bounds(e);this.svg.transition().duration(1500).call(this.zoom.transform,z.translate(this.width/2,this.height/2).scale(Math.min(8,.9/Math.max((a-s)/this.width,(o-i)/this.height))).translate(-(s+a)/2,-(i+o)/2))},drawPolygonBoundary(t){this.polygons.append("g").data([t]).enter().append("path").classed("state-boundary",!0).classed("selected-polygon",e=>this.selected.state&&e.properties.state==this.selected.state||this.selected.region&&e.properties.region==this.selected.region).attr("properties",e=>JSON.stringify(e.properties)).attr("d",this.path).attr("id",this.getPolygonId(t.properties))},drawPolygonLabel(t,e){const s=this.regional_data[this.polygon_mode].find(a=>a[this.polygon_key]==e.properties[this.polygon_key]);let i="";s&&(i=this.format_number(s[this.data_mode])),t.append("g").data([e]).enter().append("text").classed("poly_text",!0).attr("x",a=>this.path.centroid(a)[0]).attr("y",a=>this.path.centroid(a)[1]).classed("small-text",!0).attr("text-anchor","middle").text(i).on("mouseover",()=>{this.tooltip.html(this.hover_text(e.properties)).style("visibility","visible")}).on("mousemove",(a,o)=>{this.tooltip.style("top",a.pageY-10+"px").style("left",a.pageX+10+"px")}).on("mouseout",()=>this.tooltip.html("").style("visibility","hidden")).on("click",(a,o)=>this.clicked(o))},color_polygon(t){let e="states";t.district!=null&&(e="districts");let s=e=="states"?"state":"district",i=this.data[e].find(a=>a.name==t[s]);return i?this.colors(i.value):this.colors(0)},handleZoom(t){this.zoomTransform=t.transform;let e=1/t.transform.k*.8;this.svg.selectAll(".poly_text").attr("transform",t.transform).style("font-size",`${e}rem`),this.svg.selectAll("path").attr("transform",t.transform),this.svg.selectAll("circle").attr("transform",t.transform).attr("r",e)},hover_text(t){var s,i;let e=[];if(t.district!=null)e.push(`<tr><td>District</td><td>${t.district?t.district:"-"}</td></tr>`),e.push(`<tr><td>${this.tooltip_third_row_label}</td><td>${((s=this.data.districts.find(a=>a.name==t.district))==null?void 0:s.value)||0}</td></tr>`);else{let a=this.geojson.districts.features.filter(o=>o.properties.state==t.state).length;e.push(`<tr><td>State</td><td>${t.state?t.state:"-"}</td></tr>`),e.push(`<tr><td>Districts</td><td>${a}</td></tr>`),e.push(`<tr><td>${this.tooltip_third_row_label}</td><td>${((i=this.data.states.find(o=>o.name==t.state))==null?void 0:i.value)||0}</td></tr>`)}return`<table border='1' class='d3-tooltip'>${e.join(`
`)}</table>`},format_number(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},capitalizeWords(t){return t?t.charAt(0).toUpperCase()+t.slice(1):""}}},E={id:"map"},I=r("div",{id:"map-container"},null,-1),N=[I];function Y(t,e,s,i,a,o){return l(),d("div",E,N)}const H=y(W,[["render",Y]]);const R={name:"LoadingData",components:{ButterflyAnimation:O},computed:{...w({loading:t=>t.data.loading})}},U={key:0,class:"loading-container"},V=r("div",{class:"circle"},null,-1),X=r("div",{class:"circle"},null,-1),Z=r("div",{class:"circle"},null,-1),G=r("div",{class:"circle"},null,-1),J={class:"loading-text"};function K(t,e,s,i,a,o){const c=g("ButterflyAnimation");return t.loading?(l(),d("div",U,[V,X,Z,G,b(c,null,{default:B(()=>[r("div",J,p(t.loading),1)]),_:1})])):M("",!0)}const Q=y(R,[["render",K]]);const tt={name:"MapBBMData",components:{MapData:H,LoadingData:Q},emits:["state-selected"],data(){return{mode:"states",years:[2020,2021,2022,2023],selected_year:2023,selected:{states:null,districts:null}}},computed:{...w({district_coordinators:t=>t.district_coordinators.all_data,geojson:t=>t.data.geojson}),...D({filtered_map_data:"data/filtered_map_data"})},methods:{valueFromLabel(t){return t.replace(/\s/g,"_").toLowerCase()},polygonClick(t){this.selected[t.mode]=this.selected[t.mode]===t.name?null:t.name,this.selected[t.mode==="state"?"district":"state"]=null,this.$emit("state-selected",this.selected)},selectYear(t){this.selected_year==t?this.selected_year=null:this.selected_year=t,x.dispatch("data/setFilter",{field:"year",value:this.selected_year})}}},et={class:"map-container"},st={class:"border border-danger d-flex justify-content-center py-1"},at=["onClick","textContent"];function it(t,e,s,i,a,o){const c=g("loading-data"),h=g("map-data");return l(),d("div",et,[r("div",st,[(l(!0),d(m,null,f(a.years,n=>(l(),d("button",{class:_(["btn btn-sm mx-1",{"btn-success":n===a.selected_year||a.selected_year==null,"btn-outline-light":n!==a.selected_year}]),key:n,onClick:k=>o.selectYear(n),textContent:p(n)},null,10,at))),128))]),b(c),b(h,{geojson:t.geojson,data:t.filtered_map_data,mode:a.mode,tooltip_third_row_label:"Observations",onModeChange:e[0]||(e[0]=n=>a.mode=n),onPolygonClicked:o.polygonClick},null,8,["geojson","data","mode","onPolygonClicked"])])}const ot=y(tt,[["render",it]]);const lt={name:"DataTable",props:{headers:{type:Array,required:!0},data:{type:Array,required:!0},total_row:{type:Boolean,required:!1,default:!1},hue:{type:String,required:!1,default:"success"}},data(){return{sort_key:this.headers.filter(t=>t.sortable)[0].name,sort_order:"desc"}},computed:{sorted_data(){let t=[],e=this.data;if(e.length)if(!this.total_row)t=this.sort_data(e);else{let s=e.pop();t=this.sort_data(e),t.push(s)}return t}},methods:{sort_data(t){return t.sort((e,s)=>{let i=e[this.sort_key],a=s[this.sort_key];return this.sort_order==="asc"?i<a?-1:i>a?1:0:i>a?-1:i<a?1:0})},cellText(t,e){let s=t[e.name];return typeof s=="number"&&(s=this.numberWithCommas(s)),s},numberWithCommas(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},headerSortClass(t){let e="";return t.sortable&&(e="sortable",t.name===this.sort_key&&(e+=" sort-"+this.sort_order)),e},headerClick(t){t.sortable&&(this.sort_key=t.name,this.sort_order=this.sort_order==="asc"?"desc":"asc")},totalRowClass(t,e){if(this.total_row&&e===this.sorted_data.length-1)return"total-row";if(Object.values(t).filter(s=>typeof s=="number").reduce((s,i)=>s+i,0)==0)return"empty-row"}}},nt={class:"table-container"},rt={class:"table table-sm table-hover"},dt=["textContent","onClick"],ct=["row_id"],ht=["textContent"];function _t(t,e,s,i,a,o){return l(),d("div",nt,[r("table",rt,[r("thead",{class:_(`bg-${s.hue} text-light`)},[r("tr",null,[(l(!0),d(m,null,f(s.headers,(c,h)=>(l(),d("th",{key:h,textContent:p(c.label),class:_(o.headerSortClass(c)),onClick:n=>o.headerClick(c)},null,10,dt))),128))])],2),r("tbody",{class:_(`table-${s.hue}`)},[(l(!0),d(m,null,f(o.sorted_data,(c,h)=>(l(),d("tr",{key:h,row_id:h,class:_(o.totalRowClass(c,h))},[(l(!0),d(m,null,f(s.headers,(n,k)=>(l(),d("td",{key:k,class:_(n==null?void 0:n.class),textContent:p(o.cellText(c,n))},null,10,ht))),128))],10,ct))),128))],2)])])}const pt=y(lt,[["render",_t],["__scopeId","data-v-e3f9c5f3"]]);const ut={name:"DataComponent",components:{MapBBMData:ot,DataTable:pt},data(){return{filters:[{id:1,name:"Portals",active:!0,disabled:!1},{id:2,name:"Location",active:!1,disabled:!1},{id:3,name:"Taxa",active:!1,disabled:!1},{id:4,name:"Date",active:!1,disabled:!1},{id:5,name:"Users",active:!1,disabled:!0}],selected:null}},computed:{...w({geojson:t=>t.data.geojson}),...D({table_data:"data/table_data"}),active_filter(){return this.filters.filter(t=>t.active)[0]}},created(){x.dispatch("data/getAllData")},methods:{getObservationsCount(t){let e=0;return t.map(s=>{Object.keys(this.filtered_observations).forEach(i=>{e+=this.filtered_observations[i].filter(a=>a[1]==s.id).length})}),e},countUnique(t){return[...new Set(t)].length},selectFilterTab(t){this.filters.map(e=>{e.active=!1}),t.active=!0},async stateSelected(t){this.selected=t.state,x.dispatch("data/setFilter",{field:"state",value:this.selected})}}},mt={class:"data-container"},ft={class:"canvas"},gt={class:"map"},yt={class:"tables-container"},vt={class:"nav nav-pills bg-light justify-content-center rounded"},bt=["textContent","onClick"],xt={class:"tables"},kt={class:"bg-warning text-center py-0"},wt={key:4};function Ct(t,e,s,i,a,o){const c=g("MapBBMData"),h=g("data-table");return l(),d("div",mt,[r("div",ft,[r("div",gt,[b(c,{onStateSelected:o.stateSelected},null,8,["onStateSelected"])]),r("div",yt,[r("ul",vt,[(l(!0),d(m,null,f(a.filters,n=>(l(),d("li",{class:"nav-item",key:n.id},[r("a",{class:_(["nav-link",{active:n.active,disabled:n.disabled}]),"aria-current":"page",href:"#",textContent:p(n.name),onClick:k=>o.selectFilterTab(n)},null,10,bt)]))),128))]),r("div",xt,[r("h1",kt,p(a.selected),1),o.active_filter.name=="Portals"?(l(),v(h,{key:0,headers:t.table_data.portals.headers,data:t.table_data.portals.rows,total_row:!0,hue:"danger"},null,8,["headers","data"])):o.active_filter.name=="Location"?(l(),v(h,{key:1,headers:t.table_data.locations.headers,data:t.table_data.locations.rows,total_row:!1,hue:"info"},null,8,["headers","data"])):o.active_filter.name=="Taxa"?(l(),v(h,{key:2,headers:t.table_data.taxa.headers,data:t.table_data.taxa.rows,total_row:!1,hue:"info"},null,8,["headers","data"])):o.active_filter.name=="Date"?(l(),v(h,{key:3,headers:t.table_data.date.headers,data:t.table_data.date.rows,total_row:!1,hue:"info"},null,8,["headers","data"])):(l(),d("div",wt,p(o.active_filter),1))])])])])}const $t=y(ut,[["render",Ct],["__scopeId","data-v-e84f904c"]]),C=S({});C.component("DataComponent",$t);C.use(x);C.mount("#app");
