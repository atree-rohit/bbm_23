import{u as Ct,E as xi,G as Ri,H as Oi,s as Li}from"./_plugin-vue_export-helper-c00cf4a5.js";function Ni(){return kt().__VUE_DEVTOOLS_GLOBAL_HOOK__}function kt(){return typeof navigator<"u"&&typeof window<"u"?window:typeof global<"u"?global:{}}const Mi=typeof Proxy=="function",Fi="devtools-plugin:setup",Gi="plugin:settings:set";let q,ue;function Hi(){var a;return q!==void 0||(typeof window<"u"&&window.performance?(q=!0,ue=window.performance):typeof global<"u"&&(!((a=global.perf_hooks)===null||a===void 0)&&a.performance)?(q=!0,ue=global.perf_hooks.performance):q=!1),q}function ji(){return Hi()?ue.now():Date.now()}class Ii{constructor(e,t){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=e,this.hook=t;const i={};if(e.settings)for(const s in e.settings){const o=e.settings[s];i[s]=o.defaultValue}const n=`__vue-devtools-plugin-settings__${e.id}`;let r=Object.assign({},i);try{const s=localStorage.getItem(n),o=JSON.parse(s);Object.assign(r,o)}catch{}this.fallbacks={getSettings(){return r},setSettings(s){try{localStorage.setItem(n,JSON.stringify(s))}catch{}r=s},now(){return ji()}},t&&t.on(Gi,(s,o)=>{s===this.plugin.id&&this.fallbacks.setSettings(o)}),this.proxiedOn=new Proxy({},{get:(s,o)=>this.target?this.target.on[o]:(...u)=>{this.onQueue.push({method:o,args:u})}}),this.proxiedTarget=new Proxy({},{get:(s,o)=>this.target?this.target[o]:o==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(o)?(...u)=>(this.targetQueue.push({method:o,args:u,resolve:()=>{}}),this.fallbacks[o](...u)):(...u)=>new Promise(d=>{this.targetQueue.push({method:o,args:u,resolve:d})})})}async setRealTarget(e){this.target=e;for(const t of this.onQueue)this.target.on[t.method](...t.args);for(const t of this.targetQueue)t.resolve(await this.target[t.method](...t.args))}}function Wi(a,e){const t=a,i=kt(),n=Ni(),r=Mi&&t.enableEarlyProxy;if(n&&(i.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!r))n.emit(Fi,a,e);else{const s=r?new Ii(t,n):null;(i.__VUE_DEVTOOLS_PLUGINS__=i.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:t,setupFn:e,proxy:s}),s&&e(s.proxiedTarget)}}/*!
 * vuex v4.1.0
 * (c) 2022 Evan You
 * @license MIT
 */var Pt="store";function qu(a){return a===void 0&&(a=null),xi(a!==null?a:Pt)}function ra(a,e){Object.keys(a).forEach(function(t){return e(a[t],t)})}function Bt(a){return a!==null&&typeof a=="object"}function zi(a){return a&&typeof a.then=="function"}function Yi(a,e){return function(){return a(e)}}function Tt(a,e,t){return e.indexOf(a)<0&&(t&&t.prepend?e.unshift(a):e.push(a)),function(){var i=e.indexOf(a);i>-1&&e.splice(i,1)}}function Et(a,e){a._actions=Object.create(null),a._mutations=Object.create(null),a._wrappedGetters=Object.create(null),a._modulesNamespaceMap=Object.create(null);var t=a.state;Ya(a,t,[],a._modules.root,!0),Ce(a,t,e)}function Ce(a,e,t){var i=a._state,n=a._scope;a.getters={},a._makeLocalGettersCache=Object.create(null);var r=a._wrappedGetters,s={},o={},u=Ri(!0);u.run(function(){ra(r,function(d,l){s[l]=Yi(d,a),o[l]=Li(function(){return s[l]()}),Object.defineProperty(a.getters,l,{get:function(){return o[l].value},enumerable:!0})})}),a._state=Oi({data:e}),a._scope=u,a.strict&&Ki(a),i&&t&&a._withCommit(function(){i.data=null}),n&&n.stop()}function Ya(a,e,t,i,n){var r=!t.length,s=a._modules.getNamespace(t);if(i.namespaced&&(a._modulesNamespaceMap[s],a._modulesNamespaceMap[s]=i),!r&&!n){var o=ke(e,t.slice(0,-1)),u=t[t.length-1];a._withCommit(function(){o[u]=i.state})}var d=i.context=Ui(a,s,t);i.forEachMutation(function(l,c){var h=s+c;Ji(a,h,l,d)}),i.forEachAction(function(l,c){var h=l.root?c:s+c,p=l.handler||l;$i(a,h,p,d)}),i.forEachGetter(function(l,c){var h=s+c;Vi(a,h,l,d)}),i.forEachChild(function(l,c){Ya(a,e,t.concat(c),l,n)})}function Ui(a,e,t){var i=e==="",n={dispatch:i?a.dispatch:function(r,s,o){var u=Ma(r,s,o),d=u.payload,l=u.options,c=u.type;return(!l||!l.root)&&(c=e+c),a.dispatch(c,d)},commit:i?a.commit:function(r,s,o){var u=Ma(r,s,o),d=u.payload,l=u.options,c=u.type;(!l||!l.root)&&(c=e+c),a.commit(c,d,l)}};return Object.defineProperties(n,{getters:{get:i?function(){return a.getters}:function(){return Dt(a,e)}},state:{get:function(){return ke(a.state,t)}}}),n}function Dt(a,e){if(!a._makeLocalGettersCache[e]){var t={},i=e.length;Object.keys(a.getters).forEach(function(n){if(n.slice(0,i)===e){var r=n.slice(i);Object.defineProperty(t,r,{get:function(){return a.getters[n]},enumerable:!0})}}),a._makeLocalGettersCache[e]=t}return a._makeLocalGettersCache[e]}function Ji(a,e,t,i){var n=a._mutations[e]||(a._mutations[e]=[]);n.push(function(s){t.call(a,i.state,s)})}function $i(a,e,t,i){var n=a._actions[e]||(a._actions[e]=[]);n.push(function(s){var o=t.call(a,{dispatch:i.dispatch,commit:i.commit,getters:i.getters,state:i.state,rootGetters:a.getters,rootState:a.state},s);return zi(o)||(o=Promise.resolve(o)),a._devtoolHook?o.catch(function(u){throw a._devtoolHook.emit("vuex:error",u),u}):o})}function Vi(a,e,t,i){a._wrappedGetters[e]||(a._wrappedGetters[e]=function(r){return t(i.state,i.getters,r.state,r.getters)})}function Ki(a){Ct(function(){return a._state.data},function(){},{deep:!0,flush:"sync"})}function ke(a,e){return e.reduce(function(t,i){return t[i]},a)}function Ma(a,e,t){return Bt(a)&&a.type&&(t=e,e=a,a=a.type),{type:a,payload:e,options:t}}var qi="vuex bindings",Ye="vuex:mutations",ae="vuex:actions",Z="vuex",Zi=0;function Xi(a,e){Wi({id:"org.vuejs.vuex",app:a,label:"Vuex",homepage:"https://next.vuex.vuejs.org/",logo:"https://vuejs.org/images/icons/favicon-96x96.png",packageName:"vuex",componentStateTypes:[qi]},function(t){t.addTimelineLayer({id:Ye,label:"Vuex Mutations",color:Ue}),t.addTimelineLayer({id:ae,label:"Vuex Actions",color:Ue}),t.addInspector({id:Z,label:"Vuex",icon:"storage",treeFilterPlaceholder:"Filter stores..."}),t.on.getInspectorTree(function(i){if(i.app===a&&i.inspectorId===Z)if(i.filter){var n=[];Lt(n,e._modules.root,i.filter,""),i.rootNodes=n}else i.rootNodes=[Ot(e._modules.root,"")]}),t.on.getInspectorState(function(i){if(i.app===a&&i.inspectorId===Z){var n=i.nodeId;Dt(e,n),i.state=en(nn(e._modules,n),n==="root"?e.getters:e._makeLocalGettersCache,n)}}),t.on.editInspectorState(function(i){if(i.app===a&&i.inspectorId===Z){var n=i.nodeId,r=i.path;n!=="root"&&(r=n.split("/").filter(Boolean).concat(r)),e._withCommit(function(){i.set(e._state.data,r,i.state.value)})}}),e.subscribe(function(i,n){var r={};i.payload&&(r.payload=i.payload),r.state=n,t.notifyComponentUpdate(),t.sendInspectorTree(Z),t.sendInspectorState(Z),t.addTimelineEvent({layerId:Ye,event:{time:Date.now(),title:i.type,data:r}})}),e.subscribeAction({before:function(i,n){var r={};i.payload&&(r.payload=i.payload),i._id=Zi++,i._time=Date.now(),r.state=n,t.addTimelineEvent({layerId:ae,event:{time:i._time,title:i.type,groupId:i._id,subtitle:"start",data:r}})},after:function(i,n){var r={},s=Date.now()-i._time;r.duration={_custom:{type:"duration",display:s+"ms",tooltip:"Action duration",value:s}},i.payload&&(r.payload=i.payload),r.state=n,t.addTimelineEvent({layerId:ae,event:{time:Date.now(),title:i.type,groupId:i._id,subtitle:"end",data:r}})}})})}var Ue=8702998,Qi=6710886,an=16777215,xt={label:"namespaced",textColor:an,backgroundColor:Qi};function Rt(a){return a&&a!=="root"?a.split("/").slice(-2,-1)[0]:"Root"}function Ot(a,e){return{id:e||"root",label:Rt(e),tags:a.namespaced?[xt]:[],children:Object.keys(a._children).map(function(t){return Ot(a._children[t],e+t+"/")})}}function Lt(a,e,t,i){i.includes(t)&&a.push({id:i||"root",label:i.endsWith("/")?i.slice(0,i.length-1):i||"Root",tags:e.namespaced?[xt]:[]}),Object.keys(e._children).forEach(function(n){Lt(a,e._children[n],t,i+n+"/")})}function en(a,e,t){e=t==="root"?e:e[t];var i=Object.keys(e),n={state:Object.keys(a.state).map(function(s){return{key:s,editable:!0,value:a.state[s]}})};if(i.length){var r=tn(e);n.getters=Object.keys(r).map(function(s){return{key:s.endsWith("/")?Rt(s):s,editable:!1,value:de(function(){return r[s]})}})}return n}function tn(a){var e={};return Object.keys(a).forEach(function(t){var i=t.split("/");if(i.length>1){var n=e,r=i.pop();i.forEach(function(s){n[s]||(n[s]={_custom:{value:{},display:s,tooltip:"Module",abstract:!0}}),n=n[s]._custom.value}),n[r]=de(function(){return a[t]})}else e[t]=de(function(){return a[t]})}),e}function nn(a,e){var t=e.split("/").filter(function(i){return i});return t.reduce(function(i,n,r){var s=i[n];if(!s)throw new Error('Missing module "'+n+'" for path "'+e+'".');return r===t.length-1?s:s._children},e==="root"?a:a.root._children)}function de(a){try{return a()}catch(e){return e}}var O=function(e,t){this.runtime=t,this._children=Object.create(null),this._rawModule=e;var i=e.state;this.state=(typeof i=="function"?i():i)||{}},Nt={namespaced:{configurable:!0}};Nt.namespaced.get=function(){return!!this._rawModule.namespaced};O.prototype.addChild=function(e,t){this._children[e]=t};O.prototype.removeChild=function(e){delete this._children[e]};O.prototype.getChild=function(e){return this._children[e]};O.prototype.hasChild=function(e){return e in this._children};O.prototype.update=function(e){this._rawModule.namespaced=e.namespaced,e.actions&&(this._rawModule.actions=e.actions),e.mutations&&(this._rawModule.mutations=e.mutations),e.getters&&(this._rawModule.getters=e.getters)};O.prototype.forEachChild=function(e){ra(this._children,e)};O.prototype.forEachGetter=function(e){this._rawModule.getters&&ra(this._rawModule.getters,e)};O.prototype.forEachAction=function(e){this._rawModule.actions&&ra(this._rawModule.actions,e)};O.prototype.forEachMutation=function(e){this._rawModule.mutations&&ra(this._rawModule.mutations,e)};Object.defineProperties(O.prototype,Nt);var K=function(e){this.register([],e,!1)};K.prototype.get=function(e){return e.reduce(function(t,i){return t.getChild(i)},this.root)};K.prototype.getNamespace=function(e){var t=this.root;return e.reduce(function(i,n){return t=t.getChild(n),i+(t.namespaced?n+"/":"")},"")};K.prototype.update=function(e){Mt([],this.root,e)};K.prototype.register=function(e,t,i){var n=this;i===void 0&&(i=!0);var r=new O(t,i);if(e.length===0)this.root=r;else{var s=this.get(e.slice(0,-1));s.addChild(e[e.length-1],r)}t.modules&&ra(t.modules,function(o,u){n.register(e.concat(u),o,i)})};K.prototype.unregister=function(e){var t=this.get(e.slice(0,-1)),i=e[e.length-1],n=t.getChild(i);n&&n.runtime&&t.removeChild(i)};K.prototype.isRegistered=function(e){var t=this.get(e.slice(0,-1)),i=e[e.length-1];return t?t.hasChild(i):!1};function Mt(a,e,t){if(e.update(t),t.modules)for(var i in t.modules){if(!e.getChild(i))return;Mt(a.concat(i),e.getChild(i),t.modules[i])}}function rn(a){return new k(a)}var k=function(e){var t=this;e===void 0&&(e={});var i=e.plugins;i===void 0&&(i=[]);var n=e.strict;n===void 0&&(n=!1);var r=e.devtools;this._committing=!1,this._actions=Object.create(null),this._actionSubscribers=[],this._mutations=Object.create(null),this._wrappedGetters=Object.create(null),this._modules=new K(e),this._modulesNamespaceMap=Object.create(null),this._subscribers=[],this._makeLocalGettersCache=Object.create(null),this._scope=null,this._devtools=r;var s=this,o=this,u=o.dispatch,d=o.commit;this.dispatch=function(h,p){return u.call(s,h,p)},this.commit=function(h,p,g){return d.call(s,h,p,g)},this.strict=n;var l=this._modules.root.state;Ya(this,l,[],this._modules.root),Ce(this,l),i.forEach(function(c){return c(t)})},Pe={state:{configurable:!0}};k.prototype.install=function(e,t){e.provide(t||Pt,this),e.config.globalProperties.$store=this;var i=this._devtools!==void 0?this._devtools:!1;i&&Xi(e,this)};Pe.state.get=function(){return this._state.data};Pe.state.set=function(a){};k.prototype.commit=function(e,t,i){var n=this,r=Ma(e,t,i),s=r.type,o=r.payload,u={type:s,payload:o},d=this._mutations[s];d&&(this._withCommit(function(){d.forEach(function(c){c(o)})}),this._subscribers.slice().forEach(function(l){return l(u,n.state)}))};k.prototype.dispatch=function(e,t){var i=this,n=Ma(e,t),r=n.type,s=n.payload,o={type:r,payload:s},u=this._actions[r];if(u){try{this._actionSubscribers.slice().filter(function(l){return l.before}).forEach(function(l){return l.before(o,i.state)})}catch{}var d=u.length>1?Promise.all(u.map(function(l){return l(s)})):u[0](s);return new Promise(function(l,c){d.then(function(h){try{i._actionSubscribers.filter(function(p){return p.after}).forEach(function(p){return p.after(o,i.state)})}catch{}l(h)},function(h){try{i._actionSubscribers.filter(function(p){return p.error}).forEach(function(p){return p.error(o,i.state,h)})}catch{}c(h)})})}};k.prototype.subscribe=function(e,t){return Tt(e,this._subscribers,t)};k.prototype.subscribeAction=function(e,t){var i=typeof e=="function"?{before:e}:e;return Tt(i,this._actionSubscribers,t)};k.prototype.watch=function(e,t,i){var n=this;return Ct(function(){return e(n.state,n.getters)},t,Object.assign({},i))};k.prototype.replaceState=function(e){var t=this;this._withCommit(function(){t._state.data=e})};k.prototype.registerModule=function(e,t,i){i===void 0&&(i={}),typeof e=="string"&&(e=[e]),this._modules.register(e,t),Ya(this,this.state,e,this._modules.get(e),i.preserveState),Ce(this,this.state)};k.prototype.unregisterModule=function(e){var t=this;typeof e=="string"&&(e=[e]),this._modules.unregister(e),this._withCommit(function(){var i=ke(t.state,e.slice(0,-1));delete i[e[e.length-1]]}),Et(this)};k.prototype.hasModule=function(e){return typeof e=="string"&&(e=[e]),this._modules.isRegistered(e)};k.prototype.hotUpdate=function(e){this._modules.update(e),Et(this,!0)};k.prototype._withCommit=function(e){var t=this._committing;this._committing=!0,e(),this._committing=t};Object.defineProperties(k.prototype,Pe);var Zu=Te(function(a,e){var t={};return Be(e).forEach(function(i){var n=i.key,r=i.val;t[n]=function(){var o=this.$store.state,u=this.$store.getters;if(a){var d=Ee(this.$store,"mapState",a);if(!d)return;o=d.context.state,u=d.context.getters}return typeof r=="function"?r.call(this,o,u):o[r]},t[n].vuex=!0}),t}),Xu=Te(function(a,e){var t={};return Be(e).forEach(function(i){var n=i.key,r=i.val;r=a+r,t[n]=function(){if(!(a&&!Ee(this.$store,"mapGetters",a)))return this.$store.getters[r]},t[n].vuex=!0}),t}),Qu=Te(function(a,e){var t={};return Be(e).forEach(function(i){var n=i.key,r=i.val;t[n]=function(){for(var o=[],u=arguments.length;u--;)o[u]=arguments[u];var d=this.$store.dispatch;if(a){var l=Ee(this.$store,"mapActions",a);if(!l)return;d=l.context.dispatch}return typeof r=="function"?r.apply(this,[d].concat(o)):d.apply(this.$store,[r].concat(o))}}),t});function Be(a){return sn(a)?Array.isArray(a)?a.map(function(e){return{key:e,val:e}}):Object.keys(a).map(function(e){return{key:e,val:a[e]}}):[]}function sn(a){return Array.isArray(a)||Bt(a)}function Te(a){return function(e,t){return typeof e!="string"?(t=e,e=""):e.charAt(e.length-1)!=="/"&&(e+="/"),a(e,t)}}function Ee(a,e,t){var i=a._modulesNamespaceMap[t];return i}var on=function(a){return function(e){return!!e&&typeof e=="object"}(a)&&!function(e){var t=Object.prototype.toString.call(e);return t==="[object RegExp]"||t==="[object Date]"||function(i){return i.$$typeof===ln}(e)}(a)},ln=typeof Symbol=="function"&&Symbol.for?Symbol.for("react.element"):60103;function ha(a,e){return e.clone!==!1&&e.isMergeableObject(a)?ea(Array.isArray(a)?[]:{},a,e):a}function un(a,e,t){return a.concat(e).map(function(i){return ha(i,t)})}function Je(a){return Object.keys(a).concat(function(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter(function(t){return e.propertyIsEnumerable(t)}):[]}(a))}function $e(a,e){try{return e in a}catch{return!1}}function ea(a,e,t){(t=t||{}).arrayMerge=t.arrayMerge||un,t.isMergeableObject=t.isMergeableObject||on,t.cloneUnlessOtherwiseSpecified=ha;var i=Array.isArray(e);return i===Array.isArray(a)?i?t.arrayMerge(a,e,t):function(n,r,s){var o={};return s.isMergeableObject(n)&&Je(n).forEach(function(u){o[u]=ha(n[u],s)}),Je(r).forEach(function(u){(function(d,l){return $e(d,l)&&!(Object.hasOwnProperty.call(d,l)&&Object.propertyIsEnumerable.call(d,l))})(n,u)||(o[u]=$e(n,u)&&s.isMergeableObject(r[u])?function(d,l){if(!l.customMerge)return ea;var c=l.customMerge(d);return typeof c=="function"?c:ea}(u,s)(n[u],r[u],s):ha(r[u],s))}),o}(a,e,t):ha(e,t)}ea.all=function(a,e){if(!Array.isArray(a))throw new Error("first argument should be an array");return a.reduce(function(t,i){return ea(t,i,e)},{})};var dn=ea;function cn(a){var e=(a=a||{}).storage||window&&window.localStorage,t=a.key||"vuex";function i(l,c){var h=c.getItem(l);try{return typeof h=="string"?JSON.parse(h):typeof h=="object"?h:void 0}catch{}}function n(){return!0}function r(l,c,h){return h.setItem(l,JSON.stringify(c))}function s(l,c){return Array.isArray(c)?c.reduce(function(h,p){return function(y,_,w,N){return!/^(__proto__|constructor|prototype)$/.test(_)&&((_=_.split?_.split("."):_.slice(0)).slice(0,-1).reduce(function(U,oa){return U[oa]=U[oa]||{}},y)[_.pop()]=w),y}(h,p,(g=l,(g=((f=p).split?f.split("."):f).reduce(function(y,_){return y&&y[_]},g))===void 0?void 0:g));var g,f},{}):l}function o(l){return function(c){return l.subscribe(c)}}(a.assertStorage||function(){e.setItem("@@",1),e.removeItem("@@")})(e);var u,d=function(){return(a.getState||i)(t,e)};return a.fetchBeforeUse&&(u=d()),function(l){a.fetchBeforeUse||(u=d()),typeof u=="object"&&u!==null&&(l.replaceState(a.overwrite?u:dn(l.state,u,{arrayMerge:a.arrayMerger||function(c,h){return h},clone:!1})),(a.rehydrated||function(){})(l)),(a.subscriber||o)(l)(function(c,h){(a.filter||n)(c)&&(a.setState||r)(t,(a.reducer||s)(h,a.paths),e)})}}function Ft(a,e){return function(){return a.apply(e,arguments)}}const{toString:hn}=Object.prototype,{getPrototypeOf:De}=Object,Ua=(a=>e=>{const t=hn.call(e);return a[t]||(a[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),G=a=>(a=a.toLowerCase(),e=>Ua(e)===a),Ja=a=>e=>typeof e===a,{isArray:sa}=Array,ga=Ja("undefined");function mn(a){return a!==null&&!ga(a)&&a.constructor!==null&&!ga(a.constructor)&&E(a.constructor.isBuffer)&&a.constructor.isBuffer(a)}const Gt=G("ArrayBuffer");function pn(a){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(a):e=a&&a.buffer&&Gt(a.buffer),e}const gn=Ja("string"),E=Ja("function"),Ht=Ja("number"),$a=a=>a!==null&&typeof a=="object",fn=a=>a===!0||a===!1,Ea=a=>{if(Ua(a)!=="object")return!1;const e=De(a);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in a)&&!(Symbol.iterator in a)},yn=G("Date"),bn=G("File"),_n=G("Blob"),Sn=G("FileList"),wn=a=>$a(a)&&E(a.pipe),An=a=>{let e;return a&&(typeof FormData=="function"&&a instanceof FormData||E(a.append)&&((e=Ua(a))==="formdata"||e==="object"&&E(a.toString)&&a.toString()==="[object FormData]"))},vn=G("URLSearchParams"),Cn=a=>a.trim?a.trim():a.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function wa(a,e,{allOwnKeys:t=!1}={}){if(a===null||typeof a>"u")return;let i,n;if(typeof a!="object"&&(a=[a]),sa(a))for(i=0,n=a.length;i<n;i++)e.call(null,a[i],i,a);else{const r=t?Object.getOwnPropertyNames(a):Object.keys(a),s=r.length;let o;for(i=0;i<s;i++)o=r[i],e.call(null,a[o],o,a)}}function jt(a,e){e=e.toLowerCase();const t=Object.keys(a);let i=t.length,n;for(;i-- >0;)if(n=t[i],e===n.toLowerCase())return n;return null}const It=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global)(),Wt=a=>!ga(a)&&a!==It;function ce(){const{caseless:a}=Wt(this)&&this||{},e={},t=(i,n)=>{const r=a&&jt(e,n)||n;Ea(e[r])&&Ea(i)?e[r]=ce(e[r],i):Ea(i)?e[r]=ce({},i):sa(i)?e[r]=i.slice():e[r]=i};for(let i=0,n=arguments.length;i<n;i++)arguments[i]&&wa(arguments[i],t);return e}const kn=(a,e,t,{allOwnKeys:i}={})=>(wa(e,(n,r)=>{t&&E(n)?a[r]=Ft(n,t):a[r]=n},{allOwnKeys:i}),a),Pn=a=>(a.charCodeAt(0)===65279&&(a=a.slice(1)),a),Bn=(a,e,t,i)=>{a.prototype=Object.create(e.prototype,i),a.prototype.constructor=a,Object.defineProperty(a,"super",{value:e.prototype}),t&&Object.assign(a.prototype,t)},Tn=(a,e,t,i)=>{let n,r,s;const o={};if(e=e||{},a==null)return e;do{for(n=Object.getOwnPropertyNames(a),r=n.length;r-- >0;)s=n[r],(!i||i(s,a,e))&&!o[s]&&(e[s]=a[s],o[s]=!0);a=t!==!1&&De(a)}while(a&&(!t||t(a,e))&&a!==Object.prototype);return e},En=(a,e,t)=>{a=String(a),(t===void 0||t>a.length)&&(t=a.length),t-=e.length;const i=a.indexOf(e,t);return i!==-1&&i===t},Dn=a=>{if(!a)return null;if(sa(a))return a;let e=a.length;if(!Ht(e))return null;const t=new Array(e);for(;e-- >0;)t[e]=a[e];return t},xn=(a=>e=>a&&e instanceof a)(typeof Uint8Array<"u"&&De(Uint8Array)),Rn=(a,e)=>{const i=(a&&a[Symbol.iterator]).call(a);let n;for(;(n=i.next())&&!n.done;){const r=n.value;e.call(a,r[0],r[1])}},On=(a,e)=>{let t;const i=[];for(;(t=a.exec(e))!==null;)i.push(t);return i},Ln=G("HTMLFormElement"),Nn=a=>a.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,i,n){return i.toUpperCase()+n}),Ve=(({hasOwnProperty:a})=>(e,t)=>a.call(e,t))(Object.prototype),Mn=G("RegExp"),zt=(a,e)=>{const t=Object.getOwnPropertyDescriptors(a),i={};wa(t,(n,r)=>{e(n,r,a)!==!1&&(i[r]=n)}),Object.defineProperties(a,i)},Fn=a=>{zt(a,(e,t)=>{if(E(a)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;const i=a[t];if(E(i)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},Gn=(a,e)=>{const t={},i=n=>{n.forEach(r=>{t[r]=!0})};return sa(a)?i(a):i(String(a).split(e)),t},Hn=()=>{},jn=(a,e)=>(a=+a,Number.isFinite(a)?a:e),ee="abcdefghijklmnopqrstuvwxyz",Ke="0123456789",Yt={DIGIT:Ke,ALPHA:ee,ALPHA_DIGIT:ee+ee.toUpperCase()+Ke},In=(a=16,e=Yt.ALPHA_DIGIT)=>{let t="";const{length:i}=e;for(;a--;)t+=e[Math.random()*i|0];return t};function Wn(a){return!!(a&&E(a.append)&&a[Symbol.toStringTag]==="FormData"&&a[Symbol.iterator])}const zn=a=>{const e=new Array(10),t=(i,n)=>{if($a(i)){if(e.indexOf(i)>=0)return;if(!("toJSON"in i)){e[n]=i;const r=sa(i)?[]:{};return wa(i,(s,o)=>{const u=t(s,n+1);!ga(u)&&(r[o]=u)}),e[n]=void 0,r}}return i};return t(a,0)},Yn=G("AsyncFunction"),Un=a=>a&&($a(a)||E(a))&&E(a.then)&&E(a.catch),m={isArray:sa,isArrayBuffer:Gt,isBuffer:mn,isFormData:An,isArrayBufferView:pn,isString:gn,isNumber:Ht,isBoolean:fn,isObject:$a,isPlainObject:Ea,isUndefined:ga,isDate:yn,isFile:bn,isBlob:_n,isRegExp:Mn,isFunction:E,isStream:wn,isURLSearchParams:vn,isTypedArray:xn,isFileList:Sn,forEach:wa,merge:ce,extend:kn,trim:Cn,stripBOM:Pn,inherits:Bn,toFlatObject:Tn,kindOf:Ua,kindOfTest:G,endsWith:En,toArray:Dn,forEachEntry:Rn,matchAll:On,isHTMLForm:Ln,hasOwnProperty:Ve,hasOwnProp:Ve,reduceDescriptors:zt,freezeMethods:Fn,toObjectSet:Gn,toCamelCase:Nn,noop:Hn,toFiniteNumber:jn,findKey:jt,global:It,isContextDefined:Wt,ALPHABET:Yt,generateString:In,isSpecCompliantForm:Wn,toJSONObject:zn,isAsyncFn:Yn,isThenable:Un};function S(a,e,t,i,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=a,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),i&&(this.request=i),n&&(this.response=n)}m.inherits(S,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:m.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const Ut=S.prototype,Jt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(a=>{Jt[a]={value:a}});Object.defineProperties(S,Jt);Object.defineProperty(Ut,"isAxiosError",{value:!0});S.from=(a,e,t,i,n,r)=>{const s=Object.create(Ut);return m.toFlatObject(a,s,function(u){return u!==Error.prototype},o=>o!=="isAxiosError"),S.call(s,a.message,e,t,i,n),s.cause=a,s.name=a.name,r&&Object.assign(s,r),s};const Jn=null;function he(a){return m.isPlainObject(a)||m.isArray(a)}function $t(a){return m.endsWith(a,"[]")?a.slice(0,-2):a}function qe(a,e,t){return a?a.concat(e).map(function(n,r){return n=$t(n),!t&&r?"["+n+"]":n}).join(t?".":""):e}function $n(a){return m.isArray(a)&&!a.some(he)}const Vn=m.toFlatObject(m,{},null,function(e){return/^is[A-Z]/.test(e)});function Va(a,e,t){if(!m.isObject(a))throw new TypeError("target must be an object");e=e||new FormData,t=m.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(f,y){return!m.isUndefined(y[f])});const i=t.metaTokens,n=t.visitor||l,r=t.dots,s=t.indexes,u=(t.Blob||typeof Blob<"u"&&Blob)&&m.isSpecCompliantForm(e);if(!m.isFunction(n))throw new TypeError("visitor must be a function");function d(g){if(g===null)return"";if(m.isDate(g))return g.toISOString();if(!u&&m.isBlob(g))throw new S("Blob is not supported. Use a Buffer instead.");return m.isArrayBuffer(g)||m.isTypedArray(g)?u&&typeof Blob=="function"?new Blob([g]):Buffer.from(g):g}function l(g,f,y){let _=g;if(g&&!y&&typeof g=="object"){if(m.endsWith(f,"{}"))f=i?f:f.slice(0,-2),g=JSON.stringify(g);else if(m.isArray(g)&&$n(g)||(m.isFileList(g)||m.endsWith(f,"[]"))&&(_=m.toArray(g)))return f=$t(f),_.forEach(function(N,U){!(m.isUndefined(N)||N===null)&&e.append(s===!0?qe([f],U,r):s===null?f:f+"[]",d(N))}),!1}return he(g)?!0:(e.append(qe(y,f,r),d(g)),!1)}const c=[],h=Object.assign(Vn,{defaultVisitor:l,convertValue:d,isVisitable:he});function p(g,f){if(!m.isUndefined(g)){if(c.indexOf(g)!==-1)throw Error("Circular reference detected in "+f.join("."));c.push(g),m.forEach(g,function(_,w){(!(m.isUndefined(_)||_===null)&&n.call(e,_,m.isString(w)?w.trim():w,f,h))===!0&&p(_,f?f.concat(w):[w])}),c.pop()}}if(!m.isObject(a))throw new TypeError("data must be an object");return p(a),e}function Ze(a){const e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(a).replace(/[!'()~]|%20|%00/g,function(i){return e[i]})}function xe(a,e){this._pairs=[],a&&Va(a,this,e)}const Vt=xe.prototype;Vt.append=function(e,t){this._pairs.push([e,t])};Vt.toString=function(e){const t=e?function(i){return e.call(this,i,Ze)}:Ze;return this._pairs.map(function(n){return t(n[0])+"="+t(n[1])},"").join("&")};function Kn(a){return encodeURIComponent(a).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Kt(a,e,t){if(!e)return a;const i=t&&t.encode||Kn,n=t&&t.serialize;let r;if(n?r=n(e,t):r=m.isURLSearchParams(e)?e.toString():new xe(e,t).toString(i),r){const s=a.indexOf("#");s!==-1&&(a=a.slice(0,s)),a+=(a.indexOf("?")===-1?"?":"&")+r}return a}class qn{constructor(){this.handlers=[]}use(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:i?i.synchronous:!1,runWhen:i?i.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){m.forEach(this.handlers,function(i){i!==null&&e(i)})}}const Xe=qn,qt={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Zn=typeof URLSearchParams<"u"?URLSearchParams:xe,Xn=typeof FormData<"u"?FormData:null,Qn=typeof Blob<"u"?Blob:null,ar=(()=>{let a;return typeof navigator<"u"&&((a=navigator.product)==="ReactNative"||a==="NativeScript"||a==="NS")?!1:typeof window<"u"&&typeof document<"u"})(),er=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")(),M={isBrowser:!0,classes:{URLSearchParams:Zn,FormData:Xn,Blob:Qn},isStandardBrowserEnv:ar,isStandardBrowserWebWorkerEnv:er,protocols:["http","https","file","blob","url","data"]};function tr(a,e){return Va(a,new M.classes.URLSearchParams,Object.assign({visitor:function(t,i,n,r){return M.isNode&&m.isBuffer(t)?(this.append(i,t.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},e))}function ir(a){return m.matchAll(/\w+|\[(\w*)]/g,a).map(e=>e[0]==="[]"?"":e[1]||e[0])}function nr(a){const e={},t=Object.keys(a);let i;const n=t.length;let r;for(i=0;i<n;i++)r=t[i],e[r]=a[r];return e}function Zt(a){function e(t,i,n,r){let s=t[r++];const o=Number.isFinite(+s),u=r>=t.length;return s=!s&&m.isArray(n)?n.length:s,u?(m.hasOwnProp(n,s)?n[s]=[n[s],i]:n[s]=i,!o):((!n[s]||!m.isObject(n[s]))&&(n[s]=[]),e(t,i,n[s],r)&&m.isArray(n[s])&&(n[s]=nr(n[s])),!o)}if(m.isFormData(a)&&m.isFunction(a.entries)){const t={};return m.forEachEntry(a,(i,n)=>{e(ir(i),n,t,0)}),t}return null}const rr={"Content-Type":void 0};function sr(a,e,t){if(m.isString(a))try{return(e||JSON.parse)(a),m.trim(a)}catch(i){if(i.name!=="SyntaxError")throw i}return(t||JSON.stringify)(a)}const Ka={transitional:qt,adapter:["xhr","http"],transformRequest:[function(e,t){const i=t.getContentType()||"",n=i.indexOf("application/json")>-1,r=m.isObject(e);if(r&&m.isHTMLForm(e)&&(e=new FormData(e)),m.isFormData(e))return n&&n?JSON.stringify(Zt(e)):e;if(m.isArrayBuffer(e)||m.isBuffer(e)||m.isStream(e)||m.isFile(e)||m.isBlob(e))return e;if(m.isArrayBufferView(e))return e.buffer;if(m.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let o;if(r){if(i.indexOf("application/x-www-form-urlencoded")>-1)return tr(e,this.formSerializer).toString();if((o=m.isFileList(e))||i.indexOf("multipart/form-data")>-1){const u=this.env&&this.env.FormData;return Va(o?{"files[]":e}:e,u&&new u,this.formSerializer)}}return r||n?(t.setContentType("application/json",!1),sr(e)):e}],transformResponse:[function(e){const t=this.transitional||Ka.transitional,i=t&&t.forcedJSONParsing,n=this.responseType==="json";if(e&&m.isString(e)&&(i&&!this.responseType||n)){const s=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(o){if(s)throw o.name==="SyntaxError"?S.from(o,S.ERR_BAD_RESPONSE,this,null,this.response):o}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:M.classes.FormData,Blob:M.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};m.forEach(["delete","get","head"],function(e){Ka.headers[e]={}});m.forEach(["post","put","patch"],function(e){Ka.headers[e]=m.merge(rr)});const Re=Ka,or=m.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),lr=a=>{const e={};let t,i,n;return a&&a.split(`
`).forEach(function(s){n=s.indexOf(":"),t=s.substring(0,n).trim().toLowerCase(),i=s.substring(n+1).trim(),!(!t||e[t]&&or[t])&&(t==="set-cookie"?e[t]?e[t].push(i):e[t]=[i]:e[t]=e[t]?e[t]+", "+i:i)}),e},Qe=Symbol("internals");function la(a){return a&&String(a).trim().toLowerCase()}function Da(a){return a===!1||a==null?a:m.isArray(a)?a.map(Da):String(a)}function ur(a){const e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let i;for(;i=t.exec(a);)e[i[1]]=i[2];return e}const dr=a=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(a.trim());function te(a,e,t,i,n){if(m.isFunction(i))return i.call(this,e,t);if(n&&(e=t),!!m.isString(e)){if(m.isString(i))return e.indexOf(i)!==-1;if(m.isRegExp(i))return i.test(e)}}function cr(a){return a.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,i)=>t.toUpperCase()+i)}function hr(a,e){const t=m.toCamelCase(" "+e);["get","set","has"].forEach(i=>{Object.defineProperty(a,i+t,{value:function(n,r,s){return this[i].call(this,e,n,r,s)},configurable:!0})})}class qa{constructor(e){e&&this.set(e)}set(e,t,i){const n=this;function r(o,u,d){const l=la(u);if(!l)throw new Error("header name must be a non-empty string");const c=m.findKey(n,l);(!c||n[c]===void 0||d===!0||d===void 0&&n[c]!==!1)&&(n[c||u]=Da(o))}const s=(o,u)=>m.forEach(o,(d,l)=>r(d,l,u));return m.isPlainObject(e)||e instanceof this.constructor?s(e,t):m.isString(e)&&(e=e.trim())&&!dr(e)?s(lr(e),t):e!=null&&r(t,e,i),this}get(e,t){if(e=la(e),e){const i=m.findKey(this,e);if(i){const n=this[i];if(!t)return n;if(t===!0)return ur(n);if(m.isFunction(t))return t.call(this,n,i);if(m.isRegExp(t))return t.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=la(e),e){const i=m.findKey(this,e);return!!(i&&this[i]!==void 0&&(!t||te(this,this[i],i,t)))}return!1}delete(e,t){const i=this;let n=!1;function r(s){if(s=la(s),s){const o=m.findKey(i,s);o&&(!t||te(i,i[o],o,t))&&(delete i[o],n=!0)}}return m.isArray(e)?e.forEach(r):r(e),n}clear(e){const t=Object.keys(this);let i=t.length,n=!1;for(;i--;){const r=t[i];(!e||te(this,this[r],r,e,!0))&&(delete this[r],n=!0)}return n}normalize(e){const t=this,i={};return m.forEach(this,(n,r)=>{const s=m.findKey(i,r);if(s){t[s]=Da(n),delete t[r];return}const o=e?cr(r):String(r).trim();o!==r&&delete t[r],t[o]=Da(n),i[o]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return m.forEach(this,(i,n)=>{i!=null&&i!==!1&&(t[n]=e&&m.isArray(i)?i.join(", "):i)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const i=new this(e);return t.forEach(n=>i.set(n)),i}static accessor(e){const i=(this[Qe]=this[Qe]={accessors:{}}).accessors,n=this.prototype;function r(s){const o=la(s);i[o]||(hr(n,s),i[o]=!0)}return m.isArray(e)?e.forEach(r):r(e),this}}qa.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);m.freezeMethods(qa.prototype);m.freezeMethods(qa);const I=qa;function ie(a,e){const t=this||Re,i=e||t,n=I.from(i.headers);let r=i.data;return m.forEach(a,function(o){r=o.call(t,r,n.normalize(),e?e.status:void 0)}),n.normalize(),r}function Xt(a){return!!(a&&a.__CANCEL__)}function Aa(a,e,t){S.call(this,a??"canceled",S.ERR_CANCELED,e,t),this.name="CanceledError"}m.inherits(Aa,S,{__CANCEL__:!0});function mr(a,e,t){const i=t.config.validateStatus;!t.status||!i||i(t.status)?a(t):e(new S("Request failed with status code "+t.status,[S.ERR_BAD_REQUEST,S.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}const pr=M.isStandardBrowserEnv?function(){return{write:function(t,i,n,r,s,o){const u=[];u.push(t+"="+encodeURIComponent(i)),m.isNumber(n)&&u.push("expires="+new Date(n).toGMTString()),m.isString(r)&&u.push("path="+r),m.isString(s)&&u.push("domain="+s),o===!0&&u.push("secure"),document.cookie=u.join("; ")},read:function(t){const i=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return i?decodeURIComponent(i[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function gr(a){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(a)}function fr(a,e){return e?a.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):a}function Qt(a,e){return a&&!gr(e)?fr(a,e):e}const yr=M.isStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let i;function n(r){let s=r;return e&&(t.setAttribute("href",s),s=t.href),t.setAttribute("href",s),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return i=n(window.location.href),function(s){const o=m.isString(s)?n(s):s;return o.protocol===i.protocol&&o.host===i.host}}():function(){return function(){return!0}}();function br(a){const e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(a);return e&&e[1]||""}function _r(a,e){a=a||10;const t=new Array(a),i=new Array(a);let n=0,r=0,s;return e=e!==void 0?e:1e3,function(u){const d=Date.now(),l=i[r];s||(s=d),t[n]=u,i[n]=d;let c=r,h=0;for(;c!==n;)h+=t[c++],c=c%a;if(n=(n+1)%a,n===r&&(r=(r+1)%a),d-s<e)return;const p=l&&d-l;return p?Math.round(h*1e3/p):void 0}}function at(a,e){let t=0;const i=_r(50,250);return n=>{const r=n.loaded,s=n.lengthComputable?n.total:void 0,o=r-t,u=i(o),d=r<=s;t=r;const l={loaded:r,total:s,progress:s?r/s:void 0,bytes:o,rate:u||void 0,estimated:u&&s&&d?(s-r)/u:void 0,event:n};l[e?"download":"upload"]=!0,a(l)}}const Sr=typeof XMLHttpRequest<"u",wr=Sr&&function(a){return new Promise(function(t,i){let n=a.data;const r=I.from(a.headers).normalize(),s=a.responseType;let o;function u(){a.cancelToken&&a.cancelToken.unsubscribe(o),a.signal&&a.signal.removeEventListener("abort",o)}m.isFormData(n)&&(M.isStandardBrowserEnv||M.isStandardBrowserWebWorkerEnv?r.setContentType(!1):r.setContentType("multipart/form-data;",!1));let d=new XMLHttpRequest;if(a.auth){const p=a.auth.username||"",g=a.auth.password?unescape(encodeURIComponent(a.auth.password)):"";r.set("Authorization","Basic "+btoa(p+":"+g))}const l=Qt(a.baseURL,a.url);d.open(a.method.toUpperCase(),Kt(l,a.params,a.paramsSerializer),!0),d.timeout=a.timeout;function c(){if(!d)return;const p=I.from("getAllResponseHeaders"in d&&d.getAllResponseHeaders()),f={data:!s||s==="text"||s==="json"?d.responseText:d.response,status:d.status,statusText:d.statusText,headers:p,config:a,request:d};mr(function(_){t(_),u()},function(_){i(_),u()},f),d=null}if("onloadend"in d?d.onloadend=c:d.onreadystatechange=function(){!d||d.readyState!==4||d.status===0&&!(d.responseURL&&d.responseURL.indexOf("file:")===0)||setTimeout(c)},d.onabort=function(){d&&(i(new S("Request aborted",S.ECONNABORTED,a,d)),d=null)},d.onerror=function(){i(new S("Network Error",S.ERR_NETWORK,a,d)),d=null},d.ontimeout=function(){let g=a.timeout?"timeout of "+a.timeout+"ms exceeded":"timeout exceeded";const f=a.transitional||qt;a.timeoutErrorMessage&&(g=a.timeoutErrorMessage),i(new S(g,f.clarifyTimeoutError?S.ETIMEDOUT:S.ECONNABORTED,a,d)),d=null},M.isStandardBrowserEnv){const p=(a.withCredentials||yr(l))&&a.xsrfCookieName&&pr.read(a.xsrfCookieName);p&&r.set(a.xsrfHeaderName,p)}n===void 0&&r.setContentType(null),"setRequestHeader"in d&&m.forEach(r.toJSON(),function(g,f){d.setRequestHeader(f,g)}),m.isUndefined(a.withCredentials)||(d.withCredentials=!!a.withCredentials),s&&s!=="json"&&(d.responseType=a.responseType),typeof a.onDownloadProgress=="function"&&d.addEventListener("progress",at(a.onDownloadProgress,!0)),typeof a.onUploadProgress=="function"&&d.upload&&d.upload.addEventListener("progress",at(a.onUploadProgress)),(a.cancelToken||a.signal)&&(o=p=>{d&&(i(!p||p.type?new Aa(null,a,d):p),d.abort(),d=null)},a.cancelToken&&a.cancelToken.subscribe(o),a.signal&&(a.signal.aborted?o():a.signal.addEventListener("abort",o)));const h=br(l);if(h&&M.protocols.indexOf(h)===-1){i(new S("Unsupported protocol "+h+":",S.ERR_BAD_REQUEST,a));return}d.send(n||null)})},xa={http:Jn,xhr:wr};m.forEach(xa,(a,e)=>{if(a){try{Object.defineProperty(a,"name",{value:e})}catch{}Object.defineProperty(a,"adapterName",{value:e})}});const Ar={getAdapter:a=>{a=m.isArray(a)?a:[a];const{length:e}=a;let t,i;for(let n=0;n<e&&(t=a[n],!(i=m.isString(t)?xa[t.toLowerCase()]:t));n++);if(!i)throw i===!1?new S(`Adapter ${t} is not supported by the environment`,"ERR_NOT_SUPPORT"):new Error(m.hasOwnProp(xa,t)?`Adapter '${t}' is not available in the build`:`Unknown adapter '${t}'`);if(!m.isFunction(i))throw new TypeError("adapter is not a function");return i},adapters:xa};function ne(a){if(a.cancelToken&&a.cancelToken.throwIfRequested(),a.signal&&a.signal.aborted)throw new Aa(null,a)}function et(a){return ne(a),a.headers=I.from(a.headers),a.data=ie.call(a,a.transformRequest),["post","put","patch"].indexOf(a.method)!==-1&&a.headers.setContentType("application/x-www-form-urlencoded",!1),Ar.getAdapter(a.adapter||Re.adapter)(a).then(function(i){return ne(a),i.data=ie.call(a,a.transformResponse,i),i.headers=I.from(i.headers),i},function(i){return Xt(i)||(ne(a),i&&i.response&&(i.response.data=ie.call(a,a.transformResponse,i.response),i.response.headers=I.from(i.response.headers))),Promise.reject(i)})}const tt=a=>a instanceof I?a.toJSON():a;function ta(a,e){e=e||{};const t={};function i(d,l,c){return m.isPlainObject(d)&&m.isPlainObject(l)?m.merge.call({caseless:c},d,l):m.isPlainObject(l)?m.merge({},l):m.isArray(l)?l.slice():l}function n(d,l,c){if(m.isUndefined(l)){if(!m.isUndefined(d))return i(void 0,d,c)}else return i(d,l,c)}function r(d,l){if(!m.isUndefined(l))return i(void 0,l)}function s(d,l){if(m.isUndefined(l)){if(!m.isUndefined(d))return i(void 0,d)}else return i(void 0,l)}function o(d,l,c){if(c in e)return i(d,l);if(c in a)return i(void 0,d)}const u={url:r,method:r,data:r,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:o,headers:(d,l)=>n(tt(d),tt(l),!0)};return m.forEach(Object.keys(Object.assign({},a,e)),function(l){const c=u[l]||n,h=c(a[l],e[l],l);m.isUndefined(h)&&c!==o||(t[l]=h)}),t}const ai="1.4.0",Oe={};["object","boolean","number","function","string","symbol"].forEach((a,e)=>{Oe[a]=function(i){return typeof i===a||"a"+(e<1?"n ":" ")+a}});const it={};Oe.transitional=function(e,t,i){function n(r,s){return"[Axios v"+ai+"] Transitional option '"+r+"'"+s+(i?". "+i:"")}return(r,s,o)=>{if(e===!1)throw new S(n(s," has been removed"+(t?" in "+t:"")),S.ERR_DEPRECATED);return t&&!it[s]&&(it[s]=!0,console.warn(n(s," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(r,s,o):!0}};function vr(a,e,t){if(typeof a!="object")throw new S("options must be an object",S.ERR_BAD_OPTION_VALUE);const i=Object.keys(a);let n=i.length;for(;n-- >0;){const r=i[n],s=e[r];if(s){const o=a[r],u=o===void 0||s(o,r,a);if(u!==!0)throw new S("option "+r+" must be "+u,S.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new S("Unknown option "+r,S.ERR_BAD_OPTION)}}const me={assertOptions:vr,validators:Oe},z=me.validators;class Fa{constructor(e){this.defaults=e,this.interceptors={request:new Xe,response:new Xe}}request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=ta(this.defaults,t);const{transitional:i,paramsSerializer:n,headers:r}=t;i!==void 0&&me.assertOptions(i,{silentJSONParsing:z.transitional(z.boolean),forcedJSONParsing:z.transitional(z.boolean),clarifyTimeoutError:z.transitional(z.boolean)},!1),n!=null&&(m.isFunction(n)?t.paramsSerializer={serialize:n}:me.assertOptions(n,{encode:z.function,serialize:z.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let s;s=r&&m.merge(r.common,r[t.method]),s&&m.forEach(["delete","get","head","post","put","patch","common"],g=>{delete r[g]}),t.headers=I.concat(s,r);const o=[];let u=!0;this.interceptors.request.forEach(function(f){typeof f.runWhen=="function"&&f.runWhen(t)===!1||(u=u&&f.synchronous,o.unshift(f.fulfilled,f.rejected))});const d=[];this.interceptors.response.forEach(function(f){d.push(f.fulfilled,f.rejected)});let l,c=0,h;if(!u){const g=[et.bind(this),void 0];for(g.unshift.apply(g,o),g.push.apply(g,d),h=g.length,l=Promise.resolve(t);c<h;)l=l.then(g[c++],g[c++]);return l}h=o.length;let p=t;for(c=0;c<h;){const g=o[c++],f=o[c++];try{p=g(p)}catch(y){f.call(this,y);break}}try{l=et.call(this,p)}catch(g){return Promise.reject(g)}for(c=0,h=d.length;c<h;)l=l.then(d[c++],d[c++]);return l}getUri(e){e=ta(this.defaults,e);const t=Qt(e.baseURL,e.url);return Kt(t,e.params,e.paramsSerializer)}}m.forEach(["delete","get","head","options"],function(e){Fa.prototype[e]=function(t,i){return this.request(ta(i||{},{method:e,url:t,data:(i||{}).data}))}});m.forEach(["post","put","patch"],function(e){function t(i){return function(r,s,o){return this.request(ta(o||{},{method:e,headers:i?{"Content-Type":"multipart/form-data"}:{},url:r,data:s}))}}Fa.prototype[e]=t(),Fa.prototype[e+"Form"]=t(!0)});const Ra=Fa;class Le{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(r){t=r});const i=this;this.promise.then(n=>{if(!i._listeners)return;let r=i._listeners.length;for(;r-- >0;)i._listeners[r](n);i._listeners=null}),this.promise.then=n=>{let r;const s=new Promise(o=>{i.subscribe(o),r=o}).then(n);return s.cancel=function(){i.unsubscribe(r)},s},e(function(r,s,o){i.reason||(i.reason=new Aa(r,s,o),t(i.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new Le(function(n){e=n}),cancel:e}}}const Cr=Le;function kr(a){return function(t){return a.apply(null,t)}}function Pr(a){return m.isObject(a)&&a.isAxiosError===!0}const pe={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(pe).forEach(([a,e])=>{pe[e]=a});const Br=pe;function ei(a){const e=new Ra(a),t=Ft(Ra.prototype.request,e);return m.extend(t,Ra.prototype,e,{allOwnKeys:!0}),m.extend(t,e,null,{allOwnKeys:!0}),t.create=function(n){return ei(ta(a,n))},t}const A=ei(Re);A.Axios=Ra;A.CanceledError=Aa;A.CancelToken=Cr;A.isCancel=Xt;A.VERSION=ai;A.toFormData=Va;A.AxiosError=S;A.Cancel=A.CanceledError;A.all=function(e){return Promise.all(e)};A.spread=kr;A.isAxiosError=Pr;A.mergeConfig=ta;A.AxiosHeaders=I;A.formToJSON=a=>Zt(m.isHTMLForm(a)?new FormData(a):a);A.HttpStatusCode=Br;A.default=A;const b=A,Tr={namespaced:!0,state:{authenticated:!1,user:{},token:"",is_admin:!1,is_super_admin:!1,shouldPersist:!0},getters:{authenticated(a){return a.authenticated},user(a){return a.user}},mutations:{SET_USER(a,e){a.user=e},SET_TOKEN(a,e){a.token=e},SET_AUTHENTICATED(a,e){a.authenticated=e},SET_IS_ADMIN(a,e){a.is_admin=e},SET_IS_SUPER_ADMIN(a,e){a.is_super_admin=e}},actions:{async login({commit:a,dispatch:e},t){try{const{data:i}=await b.get("/api/user",{headers:{"Content-Type":"application/json",Authorization:`Bearer ${t.token}`}});a("SET_USER",i),a("SET_TOKEN",t.token),a("SET_AUTHENTICATED",!0),i.user_type==="admin"?a("SET_IS_ADMIN",!0):i.user_type==="super_admin"&&a("SET_IS_SUPER_ADMIN",!0)}catch{e("reset_auth")}},reset_auth({commit:a}){a("SET_USER",{}),a("SET_TOKEN",""),a("SET_AUTHENTICATED",!1),a("SET_IS_ADMIN",!1),a("SET_IS_SUPER_ADMIN",!1)},logout({dispatch:a}){a("reset_auth")}}},Er={namespaced:!0,state:{all_data:[],shouldPersist:!1},getters:{all_data(a){return a.all_data}},mutations:{SET_ALL_DATA(a,e){a.all_data=e},ADD_DATA(a,e){let{created_at:t,updated_at:i,...n}=e.data;a.all_data.push(n)},UPDATE_DATA(a,e){a.all_data.forEach((t,i)=>{t.id==e.id&&(a.all_data[i].name=e.name,a.all_data[i].partner_type=e.partner_type,a.all_data[i].description=e.description,a.all_data[i].contact_person=e.contact_person,a.all_data[i].link=e.link)})},REMOVE_DATA(a,e){let t=a.all_data.findIndex(i=>i.id===e);a.all_data.splice(t,1)}},actions:{async getAllData({commit:a}){try{const{data:e}=await b.get("/api/partners");a("SET_ALL_DATA",e)}catch({response:{data:e}}){console.error("error retreiving partners")}},async store({commit:a},e){try{const{data:t}=await b.post("/api/store_partners",e);a("ADD_DATA",t)}catch({response:{data:t}}){console.error("error storing partner")}},async update({commit:a},e){try{const{data:t}=await b.post(`/api/update_partner/${e.id}`,e);a("UPDATE_DATA",t.data)}catch({response:{data:t}}){console.error("error storing partner")}},async delete({commit:a},e){try{await b.delete(`/api/delete_partner/${e}`),a("REMOVE_DATA",e)}catch({response:{data:t}}){console.error("error deleting partner")}}}},Dr={namespaced:!0,state:{all_data:[],shouldPersist:!1},getters:{all_data(a){return a.all_data}},mutations:{SET_ALL_DATA(a,e){a.all_data=e},ADD_DATA(a,e){let{created_at:t,updated_at:i,...n}=e.data;a.all_data.push(n)},REMOVE_DATA(a,e){let t=a.all_data.findIndex(i=>i.id===e);a.all_data.splice(t,1)}},actions:{async getAllData({commit:a}){try{const{data:e}=await b.get("/api/testimonials");a("SET_ALL_DATA",e)}catch({response:{data:e}}){console.error("error retreiving testimonials")}},async store({commit:a},e){try{const{data:t}=await b.post("/api/store_testimonials",e);a("ADD_DATA",t)}catch({response:{data:t}}){console.error("error adding testimonial")}},async delete({commit:a},e){try{await b.delete(`/api/delete_testimonial/${e}`),a("REMOVE_DATA",e)}catch({response:{data:t}}){console.error("error deleting Testimonial")}}}},xr={namespaced:!0,state:{all_data:[],shouldPersist:!1},getters:{all_data(a){return a.all_data}},mutations:{SET_ALL_DATA(a,e){a.all_data=e},ADD_DATA(a,e){let{created_at:t,updated_at:i,...n}=e.data;a.all_data.push(n)},REMOVE_DATA(a,e){let t=a.all_data.findIndex(i=>i.id===e);a.all_data.splice(t,1)}},actions:{async getAllData({commit:a}){try{const{data:e}=await b.get("/api/press_links");a("SET_ALL_DATA",e)}catch({response:{data:e}}){console.error("error retreiving press_links")}},async store({commit:a},e){try{const{data:t}=await b.post("/api/store_press_link",e);a("ADD_DATA",t)}catch({response:{data:t}}){console.error("error storing press_link")}},async delete({commit:a},e){try{await b.delete(`/api/delete_press_link/${e}`),a("REMOVE_DATA",e)}catch({response:{data:t}}){console.error("error deleting Press Link")}}}},Rr=[{name:"name",label:"Name of the Person taking the count",required:!0,type:"text",page:0},{name:"affiliation",label:"Affiliation (NGO/school, etc.)",required:!1,type:"text",page:0},{name:"phone",label:"Contact Number",required:!1,type:"text",page:0},{name:"email",label:"E Mail Address",required:!0,type:"text",page:0},{name:"team_members",label:"Name and/or number of team members",required:!1,type:"text",page:0},{name:"open_access",label:"My data is share as Open Access",required:!1,type:"checkbox",page:0},{name:"date",label:"Date",required:!0,type:"date",page:1},{name:"start_time",label:"Start Time",required:!1,type:"time",page:1},{name:"end_time",label:"End Time",required:!1,type:"time",page:1},{name:"location",label:"Location (Place name, nearest village/town)",required:!0,type:"text",page:1},{name:"coordinates",label:"GPS Coordinates",required:!0,type:"location",page:1},{name:"altitude",label:"Altitude, m",required:!1,type:"text",page:1},{name:"distance",label:"Total distance covered, km (approx. estimated)",required:!1,type:"text",page:1},{name:"weather",label:"Weather (sunny, clouded, windy, etc.)",required:!1,type:"textarea",page:1},{name:"photo_link",label:"Link to photo records uploaded",required:!1,type:"text",page:1},{name:"comments",label:"Comments",required:!1,type:"textarea",page:1},{name:"common_name",label:"Common Name",required:!1,type:"autocomplete_common",page:2},{name:"scientific_name",label:"Binomial Name",required:!1,type:"autocomplete_scientific",page:2},{name:"individuals",label:"No. of individuals",required:!1,type:"increment",page:2},{name:"remarks",label:"Remarks (Male/Female/seasonal form, etc.)",required:!1,type:"textarea",page:2}],Or=[["Losaria coon","Common Clubtail"],["Losaria rhodifer","Andaman Clubtail"],["Pachliopta aristolochiae","Common Rose"],["Pachliopta hector","Crimson Rose"],["Pachliopta pandiyana","Malabar Rose"],["Troides aeacus","Golden Birdwing"],["Troides helena","Common Birdwing"],["Troides minos","Southern Birdwing"],["Atrophaneura aidoneus","Lesser Batwing"],["Atrophaneura varuna","Common Batwing"],["Byasa crassipes","Black Windmill"],["Byasa dasarada","Great Windmill"],["Byasa latreillei","Rose Windmill"],["Byasa nevilli","Nevill's Windmill"],["Byasa plutonius","Chinese Windmill"],["Byasa polla","de Niceville's Windmill"],["Byasa polyeuctes","Common Windmill"],["Papilio agestor","Tawny Mime"],["Papilio alcmenor","Redbreast"],["Papilio arcturus","Blue Peacock"],["Papilio bianor","Common Peacock"],["Papilio bootes","Tailed Redbreast"],["Papilio buddha","Malabar Banded Peacock"],["Papilio castor","Common Raven"],["Papilio clytia","Common Mime"],["Papilio crino","Common Banded Peacock"],["Papilio demoleus","Lime Butterfly"],["Papilio dravidarum","Malabar Raven"],["Papilio elephenor","Yellow-crested Spangle"],["Papilio epycides","Lesser Mime"],["Papilio helenus","Red Helen"],["Papilio krishna","Krishna Peacock"],["Papilio liomedon","Malabar Banded Swallowtail"],["Papilio machaon","Common Yellow Swallowtail"],["Papilio mayo","Andaman Mormon"],["Papilio memnon","Great Mormon"],["Papilio nephelus","Yellow Helen"],["Papilio paradoxa","Great Blue Mime"],["Papilio paris","Paris Peacock"],["Papilio polymnestor","Blue Mormon"],["Papilio polytes","Common Mormon"],["Papilio prexaspes","Andaman Helen"],["Papilio protenor","Spangle"],["Papilio slateri","Blue-striped Mime"],["Papilio xuthus","Chinese Yellow Swallowtail"],["Graphium adonarensis","Cryptic Bluebottle"],["Graphium agamemnon","Tailed Jay"],["Graphium agetes","Fourbar Swordtail"],["Graphium albociliatis","Scarce Jay"],["Graphium antiphates","Fivebar Swordtail"],["Graphium aristeus","Chain Swordtail"],["Graphium arycles","Spotted Jay"],["Graphium chironides","Veined Jay"],["Graphium cloanthus","Glassy Bluebottle"],["Graphium doson","Common Jay"],["Graphium epaminondas","Andaman Swordtail"],["Graphium eurous","Sixbar Swordtail"],["Graphium eurypylus","Great Jay"],["Graphium macareus","Lesser Zebra"],["Graphium mandarinus","Spectacle Swordtail"],["Graphium megarus","Spotted Zebra"],["Graphium nomius","Spot Swordtail"],["Graphium sarpedon","Common Bluebottle"],["Graphium teredon","Southern Bluebottle"],["Graphium xenocles","Great Zebra"],["Lamproptera curius","White Dragontail"],["Lamproptera meges","Green Dragontail"],["Meandrusa lachinus","Brown Gorgon"],["Meandrusa payeni","Yellow Gorgon"],["Teinopalpus imperialis","Kaiser-i-Hind"],["Bhutanitis lidderdalii","Bhutan Glory"],["Bhutanitis ludlowi","Ludlow's Bhutan Glory"],["Parnassius actius","Scarce Red Apollo"],["Parnassius epaphus","Common Red Apollo"],["Parnassius jacquemontii","Keeled Apollo"],["Parnassius tianschanicus","Large Keeled Apollo"],["Parnassius charltonius","Regal Apollo"],["Parnassius loxias","Stately Apollo"],["Parnassius augustus","Noble Apollo"],["Parnassius acdestis","Dusky Apollo"],["Parnassius hunza","Karakoram Banded Apollo"],["Parnassius mamaievi","Scarce Banded Apollo"],["Parnassius stenosemus","Greater Banded Apollo"],["Parnassius stoliczkanus","Lesser Banded Apollo"],["Parnassius kumaonensis","Himalayan Banded Apollo"],["Parnassius acco","Varnished Apollo"],["Parnassius maharaja","Royal Apollo"],["Parnassius hardwickii","Common Blue Apollo"],["Parnassius simo","Black-edged Apollo"],["Badamia exclamationis","Brown Awl"],["Bibasis iluska","Slate Awlet"],["Bibasis sena","Orange-tailed Awlet"],["Burara amara","Small Green Awlet"],["Burara anadi","Plain Orange Awlet"],["Burara etelka","Great Orange Awlet"],["Burara gomata","Pale Green Awlet"],["Burara harisa","Orange Striped Awlet"],["Burara jaina","Orange Awlet"],["Burara oedipodea","Branded Orange Awlet"],["Burara vasutana","Green Awlet"],["Hasora anura","Slate Awl"],["Hasora badra","Common Awl"],["Hasora chromus","Common Banded Awl"],["Hasora danda","Purple Awl"],["Hasora khoda","Large Banded Awl"],["Hasora leucospila","Violet Awl"],["Hasora schoenherr","Yellow Banded Awl"],["Hasora taminatus","White Banded Awl"],["Hasora vitta","Plain Banded Awl"],["Choaspes benjaminii","Indian Awlking"],["Choaspes furcatus","Hooked Awlking"],["Choaspes stigmatus","Branded Awlking"],["Choaspes xanthopogon","Similar Awlking"],["Lobocla liliana","Marbled Flat"],["Capila jayadeva","Striped Dawnfly"],["Capila lidderdali","Lidderdale's Dawnfly"],["Capila pennicillatum","Fringed Dawnfly"],["Capila phanaeus","Fulvous Dawnfly"],["Capila pieridoides","White Dawnfly"],["Capila zennara","Pale Striped Dawnfly"],["Tapena thwaitesi","Black Angle"],["Darpa hanria","Hairy Angle"],["Darpa pteria","Snowy Angle"],["Darpa striata","Striated Angle"],["Odina decoratus","Zigzag Flat"],["Coladenia agni","Brown Pied Flat"],["Coladenia agnioides","Elwes's Pied Flat"],["Coladenia indrani","Tricolour Pied Flat"],["Coladenia laxmi","Grey Pied Flat"],["Satarupa gopala","Large White Flat"],["Satarupa splendens","Splendid White Flat"],["Satarupa zulla","Tytler's White Flat"],["Seseria dohertyi","Himalayan White Flat"],["Seseria sambara","Sikkim White Flat"],["Pintara tabrica","Crenulate Orange Flat"],["Chamunda chamunda","Olive Flat"],["Gerosis bhagava","Common Yellow-breast Flat"],["Gerosis phisara","Dusky Yello-w-breast Flat"],["Gerosis sinica","White Yellow -breast Flat"],["Tagiades calligana","Malayan Snow Flat"],["Tagiades cohaerens","Striped Snow Flat"],["Tagiades gana","Large Snow Flat"],["Tagiades japetus","Suffused Snow Flat"],["Tagiades menaka","Spotted Snow Flat"],["Tagiades parra","Common Snow Flat"],["Tagiades litigiosa","Water Snow Flat"],["Mooreana trichoneura","Yellow Flat"],["Ctenoptilum multiguttata","Multispot Angle"],["Ctenoptilum vasava","Tawny Angle"],["Odontoptilum angulatum","Chestnut Angle"],["Caprona agama","Spotted Angle"],["Caprona alida","Evans' Angle"],["Caprona ransonnetii","Golden Angle"],["Celaenorrhinus ambareesa","Malabar Flat"],["Celaenorrhinus andamanicus","Andaman Yellow-banded Flat"],["Celaenorrhinus asmara","White Banded Flat"],["Celaenorrhinus aspersa","Large Streaked Flat"],["Celaenorrhinus aurivittatus","Dark Yellow -banded Flat"],["Celaenorrhinus badius","Scarce Banded Flat"],["Celaenorrhinus dhanada","Himalayan Yellow-banded Flat"],["Celaenorrhinus ficulnea","Velvet Flat"],["Celaenorrhinus flavicincta","Bhutan Flat"],["Celaenorrhinus leucocera","Common Spotted Flat"],["Celaenorrhinus morena","Evans' Spotted Flat"],["Celaenorrhinus munda","Himalayan Spotted Flat"],["Celaenorrhinus nigricans","Small Banded Flat"],["Celaenorrhinus patula","Large Spotted Flat"],["Celaenorrhinus pero","Mussoorie Spotted Flat"],["Celaenorrhinus plagifera","de Niceville's Spotted Flat"],["Celaenorrhinus pulomaya","Multi-spotted Flat"],["Celaenorrhinus putra","Bengal Spotted Flat"],["Celaenorrhinus pyrrha","Double Spotted Flat"],["Celaenorrhinus ratna","Tytler's Multi-spotted Flat"],["Celaenorrhinus ruficornis","Tamil Spotted Flat"],["Celaenorrhinus sumitra","Moore's Spotted Flat"],["Celaenorrhinus tibetanus","Tibet Flat"],["Celaenorrhinus zea","Swinhoe's Flat"],["Pseudocoladenia dan","Fulvous Pied Flat"],["Pseudocoladenia fatua","Sikkim Pied Flat"],["Pseudocoladenia festa","Naga Pied Flat"],["Sarangesa purendra","Spotted Small Flat"],["Sarangesa dasahara","Common Small Flat"],["Gomalia elma","African Marbled Skipper"],["Carcharodus alceae","Plain Marbled Skipper"],["Carcharodus dravira","Tufted Marbled Skipper"],["Spialia doris","Sind Skipper"],["Spialia galba","Indian Skipper"],["Spialia orbifer","Brick Skipper"],["Erynnis pathan","Inky Skipper"],["Pyrgus alpinus","Mountain Skipper"],["Pyrgus cashmirensis","Kashmir Skipper"],["Carterocephalus avanti","Orange-and-silver Hopper"],["Ochus subvittatus","Tiger Hopper"],["Baracus vittatus","Hedge Hopper"],["Ampittia dioscorides","Bush Hopper"],["Ampittia maroides","Scarce Bush Hopper"],["Aeromachus dubius","Dingy Scrub Hopper"],["Aeromachus jhora","Grey Scrub Hopper"],["Aeromachus kali","Blue-spotted Scrub Hopper"],["Aeromachus pygmaeus","Pigmy Scrub Hopper"],["Aeromachus stigmatus","Veined Scrub Hopper"],["Sebastonyma dolopia","Tufted Ace"],["Sovia grahami","Graham's Ace"],["Sovia hyrtacus","White-branded Ace"],["Sovia lucasii","Lucas' Ace."],["Sovia malta","Manipur Ace"],["Sovia separata","Chequered Ace"],["Pedesta masuriensis","Mussoorie Bush Bob"],["Pedesta panda","Naga Bush Bob"],["Pedesta pandita","Brown Bush Bob"],["Thoressa aina","Garhwal Ace"],["Thoressa astigmata","Southern Spotted Ace"],["Thoressa cerata","Northern Spotted Ace"],["Thoressa evershedi","Evershed's Ace"],["Thoressa fusca","Fuscous Ace"],["Thoressa gupta","Olive Ace"],["Thoressa honorei","Madras Ace"],["Thoressa hyrie","Largespot Plain Ace"],["Thoressa masoni","Mason's Ace"],["Thoressa sitala","Tamil Ace"],["Halpe arcuata","Evans' Ace"],["Halpe filda","Elwes's Ace"],["Halpe flava","Tavoy Sulphur Ace"],["Halpe hauxwelli","Hauxwell's Ace"],["Halpe homolea","Indian Ace"],["Halpe knyvetti","Knyvett's Ace"],["Halpe kumara","Plain Ace"],["Halpe kusala","Tenasserim Ace"],["Halpe porus","Moore's Ace"],["Halpe sikkima","Sikkim Ace"],["Halpe wantona","Confusing Ace"],["Halpe zema","Banded Ace"],["Halpe zola","Long-banded Ace"],["Pithauria marsena","Branded Straw Ace"],["Pithauria murdava","Dark Straw Ace"],["Pithauria stramineipennis","Light Straw Ace"],["Apostictopterus fuliginosus","Giant Hopper"],["Astictopterus jama","Forest Hopper"],["Arnetta atkinsoni","Atkinson's Bob"],["Arnetta mercara","Coorg Forest Bob"],["Arnetta vindhiana","Vindhyan Bob"],["Actinor radians","Veined Dart"],["Iambrix salsala","Chestnut Bob"],["Koruthaialos butleri","Dark Velvet Bob"],["Koruthaialos rubecula","Narrow-banded Velvet Bob"],["Koruthaialos sindu","Bright Red Velvet Bob"],["Psolos fuligo","Coon"],["Stimula swinhoei","Watson's Demon"],["Ancistroides nigrita","Chocolate Demon"],["Notocrypta curvifascia","Restricted Demon"],["Notocrypta feisthamelii","Spotted Demon"],["Notocrypta paralysos","Common Banded Demon"],["Udaspes folus","Grass Demon"],["Scobura cephala","Forest Bob"],["Scobura cephaloides","Large Forest Bob"],["Scobura isota","Swinhoe's Forest Bob"],["Scobura phiditia","Malay Forest Bob"],["Scobura tytleri","Tytler's Forest Bob"],["Scobura woolletti","Wollett's Forest Bob"],["Suada swerga","Grass Bob"],["Suastus gremius","Indian Palm Bob"],["Suastus minutus","Ceylon Palm Bob"],["Cupitha purreea","Wax Dart"],["Zographetus ogygia","Purple-spotted Flitter"],["Zographetus rama","Small Flitter"],["Zographetus satwa","Purple-and-gold Flitter"],["Hyarotis adrastus","Tree Flitter"],["Hyarotis microstictum","Brush Flitter"],["Quedara basiflava","Golden Flitter"],["Quedara monteithi","Dubious Flitter"],["Isma bonota","Assam Lancer"],["Plastingia naga","Silver-spotted Lancer"],["Salanoemia fuscicornis","Purple Lancer"],["Salanoemia noemi","Spotted Yellow Lancer"],["Salanoemia sala","Maculate Lancer"],["Salanoemia tavoyana","Yellow-streaked Lancer"],["Pyroneura margherita","Assamese Yellow-vein Lancer"],["Pyroneura niasana","Red-vein Lancer"],["Lotongus sarala","Yellowband Palmer"],["Zela zeus","Redeye Palmer"],["Gangara lebadea","Banded Redeye"],["Gangara thyrsis","Giant Redeye"],["Erionota hiraca","Andaman Redeye"],["Erionota thrax","Palm Redeye"],["Erionota torus","Banana Skipper"],["Matapa aria","Common Redeye"],["Matapa cresta","Darkbrand Redeye"],["Matapa druna","Greybrand Redeye"],["Matapa purpurascens","Purple Redeye"],["Matapa sasivarna","Black-veined Redeye"],["Pudicitia pholus","Spotted Redeye"],["Unkana ambasa","Hoary Palmer"],["Hidari bhawani","Veined Palmer"],["Pirdana hyela","Green-striped Palmer"],["Pirdana distanti","Plain Green Palmer"],["Creteus cyrina","Nonsuch Palmer"],["Gegenes nostrodamus","Dingy Swift"],["Gegenes pumilio","Pygmy Swift"],["Parnara ganga","Evans' Swift"],["Parnara guttatus","Straight Swift"],["Parnara bada","Ceylon Swift"],["Borbo bevani","Bevan's Swift"],["Borbo cinnara","Rice Swift"],["Pelopidas agna","Obscure Branded Swift"],["Pelopidas conjuncta","Conjoined Swift"],["Pelopidas mathias","Variable Swift"],["Pelopidas sinensis","Large Branded Swift"],["Pelopidas subochracea","Moore's Swift"],["Pelopidas thrax","Small Branded Swift"],["Polytremis discreta","Himalayan Swift"],["Polytremis eltola","Yellow Spot Swift"],["Polytremis lubricans","Contiguous Swift"],["Polytremis minuta","Baby Swift Assam; Manipur."],["Baoris chapmani","Small Paintbrush Swift"],["Baoris farri","Paintbrush Swift"],["Baoris pagana","Figure of Eight Swift"],["Baoris unicolor","Black Paintbrush Swift"],["Caltoris aurociliata","Yellow Fringed Swift"],["Caltoris bromus","Leech's Swift"],["Caltoris brunnea","Dark-branded Swift"],["Caltoris cahira","Colon Swift"],["Caltoris canaraica","Canara Swift"],["Caltoris confusa","Confusing Swift"],["Caltoris cormasa","Full-stop Swift"],["Caltoris kumara","Blank Swift"],["Caltoris philippina","Philippine Swift"],["Caltoris plebeia","Tufted Swift"],["Caltoris sirius","Sirius Swift"],["Caltoris tulsi","Purple Swift"],["Iton semamora","Common Wight"],["Taractocera ceramas","Tamil Grassdart"],["Taractocera danna","Himalayan Grass Dart"],["Taractocera maevius","Common Grass Dart"],["Oriens concinna","Tamil Dartlet"],["Oriens gola","Common Dartlet"],["Oriens goloides","Ceylon Dartlet"],["Oriens paragola","Malay Dartlet"],["Potanthus confucius","Chinese Dart"],["Potanthus dara","Himalayan Dart"],["Potanthus ganda","Sumatran Dart"],["Potanthus flavus","Japanese Dart"],["Potanthus hetaerus","Large Dart"],["Potanthus juno","Burmese Dart"],["Potanthus lydia","Forest Dart"],["Potanthus mara","Sikkim Dart"],["Potanthus mingo","Narrow Bi-dent Dart"],["Potanthus nesta","Brandless Dart"],["Potanthus pallidus","Pale Dart"],["Potanthus palnia","Palni Dart"],["Potanthus pava","Yellow Dart"],["Potanthus pseudomaesa","Indian Dart"],["Potanthus rectifasciata","Branded Dart"],["Potanthus sita","Yellow-and-black Dart"],["Potanthus trachala","Broad Bi-dent Dart"],["Telicota augias","Pale Palm Dart"],["Telicota bambusae","Dark Palm Dart Throughout"],["Telicota besta","Large Palm Dart"],["Telicota colon","Common Palm Dart"],["Telicota linna","Evans' Palm Dart"],["Telicota ohara","Crested Palm Dart"],["Cephrenes acalle","Plain Palm Dart"],["Hesperia comma","Chequered Darter"],["Ochlodes brahma","Himalayan Darter"],["Ochlodes siva","Assam Darter"],["Ochlodes subhyalina","Sub-hyaline Darter"],["Catopsilia pomona","Common Emigrant"],["Catopsilia pyranthe","Mottled Emigrant"],["Dercas verhuelli","Tailed Sulphur"],["Dercas lycorias","Plain Sulphur"],["Gonepteryx amintha","Chinese Brimstone"],["Gonepteryx chitralensis","Karakoram Brimstone"],["Gonepteryx mahaguru","Lesser Brimstone"],["Gonepteryx nepalensis","Himalayan Brimstone"],["Gandaca harina","Tree Yellow"],["Eurema andersoni","One-spot Grass Yellow"],["Eurema blanda","Three-spot Grass Yellow"],["Eurema brigitta","Small Grass Yellow"],["Eurema hecabe","Common Grass Yellow"],["Eurema laeta","Spotless Grass Yellow"],["Eurema nilgiriensis","Nilgiri Grass Yellow"],["Eurema simulatrix","Scarce Grass Yellow"],["Colias cocandica","Pamir Clouded Yellow"],["Colias dubia","Dwarf Clouded Yellow"],["Colias eogene","Fiery Clouded Yellow"],["Colias erate","Pale Clouded Yellow"],["Colias fieldi","Dark Clouded Yellow"],["Colias ladakensis","Ladak Clouded Yellow"],["Colias leechi","Glaucous Clouded Yellow"],["Colias marcopolo","Marcopolo's Clouded Yellow"],["Colias nilagiriensis","Nilgiri Clouded Yellow"],["Colias stoliczkana","Orange Clouded Yellow"],["Colias thrasibulus","Lemon Clouded Yellow"],["Colias wiskotti","Broad-bordered Clouded Yellow"],["Leptosia nina","Psyche"],["Baltia butleri","Butler's Dwarf"],["Baltia shawii","Shaw's Dwarf"],["Baltia sikkima","Sikkim Dwarf"],["Mesapia peloria","Thibet Blackvein"],["Aporia agathon","Great Blackvein"],["Aporia harrietae","Bhutan Blackvein"],["Aporia leucodice","Baluchi Blackvein"],["Aporia nabellica","Dusky Blackvein"],["Aporia soracta","Himalayan Blackvein"],["Pieris ajaka","Himalayan White"],["Pieris brassicae","Large Cabbage White"],["Pieris canidia","Indian Cabbage White"],["Pieris deota","Kashmir White"],["Pieris dubernardi","Chumbi White"],["Pieris extensa","Bhutan White"],["Pieris krueperi","Green Banded White"],["Pieris melete","Western Black-Veined White"],["Pieris rapae","Small Cabbage White"],["Talbotia naganum","Naga White"],["Pontia callidice","Lofty Bath White"],["Pontia chloridice","Lesser Bath White"],["Pontia daplidice","Bath White"],["Pontia glauconome","Desert Bath White"],["Pontia sherpae","Sherpa White"],["Ixias marianne","White Orange Tip"],["Ixias pyrene","Yellow Orange Tip"],["Colotis amata","Small Salmon Arab"],["Colotis aurora","Plain Orange Tip"],["Colotis danae","Crimson Tip"],["Colotis etrida","Little Orange Tip"],["Colotis fausta","Large Salmon Arab"],["Colotis phisadia","White Arab"],["Colotis protractus","Blue Spotted Arab"],["Appias albina","Common Albatross"],["Appias indra","Plain Puffin"],["Appias lalage","Spot Puffin"],["Appias libythea","Striped Albatross"],["Appias lyncida","Chocolate Albatross"],["Appias nero","Orange Albatross"],["Appias paulina","Lesser Albatross"],["Appias wardi","Indian Albatross"],["Saletara liberia","Nicobar Albatross"],["Prioneris philonome","Redspot Sawtooth"],["Prioneris sita","Painted Sawtooth"],["Prioneris thestylis","Spotted Sawtooth"],["Belenois aurota","Pioneer"],["Cepora nadina","Lesser Gull"],["Cepora nerissa","Common Gull"],["Delias acalis","Redbreast Jezabel"],["Delias agostina","Yellow Jezabel"],["Delias belladonna","Hill Jezabel"],["Delias berinda","Dark Jezabel"],["Delias descombesi","Redspot Jezabel"],["Delias eucharis","Common Jezabel"],["Delias hyparete","Painted Jezabel"],["Delias lativitta","Broadwing Jezabel"],["Delias sanaca","Pale Jezabel"],["Delias pasithoe","Redbase Jezabel"],["Euchloe daphalis","Little White"],["Pareronia avatar","Pale Wanderer"],["Pareronia ceylanica","Dark Wanderer"],["Pareronia valeria","Common Wanderer"],["Hebomoia glaucippe","Great Orange Tip"],["Zemeros flegyas","Punchinello"],["Dodona adonira","Striped Punch"],["Dodona dipoea","Lesser Punch"],["Dodona durga","Common Punch"],["Dodona egeon","Orange Punch"],["Dodona eugenes","Tailed Punch"],["Dodona longicaudata","Long-tailed Punch"],["Dodona ouida","Mixed Punch"],["Abisara abnormis","Abnormal Judy"],["Abisara attenuata","Short Tailed Judy"],["Abisara bifasciata","Twospot Plum Judy"],["Abisara burnii","Burn's Judy"],["Abisara chela","Spot Judy"],["Abisara echerius","Plum Judy"],["Abisara fylla","Dark Judy"],["Abisara neophron","Tailed Judy"],["Abisara saturata","Malayan Plum Judy"],["Taxila haquinus","Harlequin"],["Stiboges nymphidia","Columbine"],["Curetis acuta","Angled Sunbeam"],["Curetis bulis","Bright Sunbeam"],["Curetis naga","Naga Sunbeam"],["Curetis saronis","Burmese Sunbeam"],["Curetis siva","Siva Sunbeam"],["Curetis thetis","Indian Sunbeam"],["Poritia erycinoides","Blue Gem"],["Poritia hewitsoni","Common Gem"],["Simiskina phalena","Broad-banded Brilliant"],["Liphyra brassolis","Moth Butterfly"],["Allotinus drumila","Great Darkie"],["Allotinus subviolaceus","Blue Darkie"],["Allotinus unicolor","Common Darkie"],["Allotinus taras","Brown-tipped Darkie"],["Logania distanti","Dark Mottle"],["Logania marmorata","Pale Mottle"],["Logania watsoniana","Watson's Mottle"],["Miletus chinensis","Common Brownie"],["Miletus symethus","Great Brownie"],["Taraka hamada","Forest Pierrot"],["Spalgis baiongus","Assam Apefly"],["Spalgis epius","Common Apefly"],["Lycaena kasyapa","Green Copper"],["Lycaena panava","White-bordered Copper"],["Lycaena phlaeas","Common Copper"],["Thersamonia aditya","Ladakh Copper"],["Heliophorus androcles","Green Sapphire"],["Heliophorus bakeri","Western Blue Sapphire"],["Heliophorus brahma","Golden Sapphire"],["Heliophorus epicles","Purple Sapphire"],["Heliophorus hybrida","Hybrid Sapphire"],["Heliophorus ila","Restricted Purple Sapphire"],["Heliophorus indicus","Indian Purple Sapphire"],["Heliophorus kohimensis","Naga Sapphire"],["Heliophorus moorei","Azure Sapphire"],["Heliophorus oda","Eastern Blue Sapphire"],["Heliophorus sena","Sorrel Sapphire"],["Heliophorus tamu","Powdery Green Sapphire"],["Apharitis acamas","Tawny Silverline"],["Apharitis lilacinus","Lilac Silverline"],["Spindasis abnormis","Abnormal Silverline"],["Spindasis elima","Scarce Shot Silverline"],["Spindasis elwesi","Elwes' Silverline"],["Spindasis evansii","Cinnamon Silverline"],["Spindasis ictis","Common Shot Silverline"],["Spindasis lohita","Long-banded Silverline"],["Spindasis nipalicus","Silvergrey Silverline"],["Spindasis rukma","Obscure Silverline"],["Spindasis rukmini","Khaki Silverline"],["Spindasis schistacea","Plumbeous Silverline"],["Spindasis syama","Club Silverline"],["Spindasis vulcanus","Common Silverline"],["Chaetoprocta kurumi","Nepal Walnut Blue"],["Chaetoprocta odata","Walnut Blue"],["Euaspa milionia","Water Hairstreak"],["Euaspa miyashitai","Darjeeling Hairstreak"],["Euaspa mikamii","Arunachal Hairstreak"],["Euaspa pavo","Peacock Hairstreak"],["Shizuyaozephyrus ziha","White-spotted Hairstreak"],["Fujiokaozephyrus tsangkie","Suroifui Hairstreak"],["Iwaseozephyrus mandara","Indian Purple Hairstreak"],["Esakiozephyrus icana","Dull Green Hairstreak"],["Chrysozephyrus disparatus","Howarth's Green Hairstreak"],["Chrysozephyrus duma","Metallic Green Hairstreak"],["Chrysozephyrus dumoides","Broad-bordered Green Hairstreak"],["Chrysozephyrus intermedius","Intermediate Green Hairstreak"],["Chrysozephyrus kabrua","Kabru Green Hairstreak"],["Chrysozephyrus sandersi","Sanders' Green Hairstreak"],["Chrysozephyrus sikkimensis","Sikkim Green Hairstreak"],["Chrysozephyrus tytleri","Manipur Green Hairstreak"],["Chrysozephyrus vittatus","Tytler's Green Hairstreak"],["Chrysozephyrus zoa","Powdered Green Hairstreak"],["Neozephyrus suroia","Cerulean Hairstreak"],["Shirozuozephyrus bhutanensis","Bhutan Hairstreak"],["Shirozuozephyrus birupa","Fawn Hairstreak"],["Shirozuozephyrus jakamensis","Jakama Hairstreak"],["Shirozuozephyrus khasia","Tailless Metallic Green Hairstreak"],["Shirozuozephyrus kirbariensis","Kirbari Hairstreak"],["Shirozuozephyrus paona","Paona Hairstreak"],["Shirozuozephyrus triloka","Kumaon Hairstreak"],["Inomataozephyrus assamicus","Assam Hairstreak"],["Inomataozephyrus syla","Silver Hairstreak"],["Thermozephyrus ataxus","Wonderful Hairstreak"],["Leucantigius atayalicus","Pale Hairstreak"],["Amblopala avidiena","Chinese Hairstreak"],["Arhopala aberrans","Pale Bushblue"],["Arhopala abseus","Aberrant Bushblue"],["Arhopala ace","Tytler's Dull Oakblue"],["Arhopala aeeta","Dawnas Tailless Oakblue"],["Arhopala alea","Kanara Oakblue"],["Arhopala allata","Tytler's Rosy Oakblue"],["Arhopala agrata","de Niceville's Dull Oakblue"],["Arhopala alax","Silky Oakblue"],["Arhopala alesia","Pallid Oakblue"],["Arhopala amantes","Large Oakblue"],["Arhopala ammonides","Dark Bushblue"],["Arhopala anarte","Magnificient Oakblue"],["Arhopala arvina","Purple-brown Tailless Oakblue"],["Arhopala asinarus","Broad-banded Oakblue"],["Arhopala asopia","Plain Tailless Oakblue"],["Arhopala athada","Vinous Oakblue"],["Arhopala atrax","Indian Oakblue"],["Arhopala aurelia","Grey-washed Oakblue"],["Arhopala bazaloides","Tamil Oakblue"],["Arhopala bazalus","Powdered Oakblue"],["Arhopala belphoebe","Doherty's Oakblue"],["Arhopala birmana","Burmese Bushblue"],["Arhopala camdeo","Lilac Oakblue"],["Arhopala centaurus","Centaur Oakblue"],["Arhopala comica","Comic Oakblue"],["Arhopala curiosa","Bhutan Oakblue"],["Arhopala democritus","White-spotted Oakblue"],["Arhopala dispar","Frosted Oakblue"],["Arhopala dodonea","Pale Himalayan Oakblue"],["Arhopala eumolphus","Green Oakblue"],["Arhopala fulla","Spotless Oakblue"],["Arhopala ganesa","Tailless Bushblue"],["Arhopala hellenore","Pointed Green Oakblue"],["Arhopala khamti","Doherty's Dull Oakblue"],["Arhopala nicevillei","Large Spotted Oakblue"],["Arhopala oenea","Hewitson's Dull Oakblue"],["Arhopala opalina","Opal Oakblue"],["Arhopala paraganesa","Dusky Bushblue"],["Arhopala paralea","Glazed Oakblue"],["Arhopala paramuta","Hooked Oakblue"],["Arhopala perimuta","Yellowdisc Tailless Oakblue"],["Arhopala rama","Dark Himalayan Oakblue"],["Arhopala ralanda","Bright Oakblue"],["Arhopala selta","Rosy Oakblue"],["Arhopala silhetensis","Sylhet Oakblue"],["Arhopala singla","Yellow-disc Oakblue"],["Arhopala zeta","Andaman Tailless Oakblue"],["Thaduka multicaudata","Many-tailed Oakblue"],["Apporasa atkinsoni","Crenulate Oakblue"],["Mahathala ameria","Falcate Oakblue"],["Flos apidanus","Plain Plushblue"],["Flos adriana","Vareigated Plushblue"],["Flos areste","Tailless Plushblue"],["Flos asoka","Spangled Plushblue"],["Flos chinensis","Chinese Plushblue"],["Flos diardi","Bifid Plushblue"],["Flos fulgida","Shining Plushblue"],["Mota massyla","Saffron"],["Surendra quercetorum","Common Acacia Blue"],["Surendra vivarna","Burmese Acacia Blue"],["Zinaspa todara","Silver Streaked Acacia Blue"],["Zesius chrysomallus","Redspot"],["Amblypodia anita","Purple Leaf Blue"],["Iraota rochana","Scarce Silverstreak Blue"],["Iraota timoleon","Silverstreak Blue"],["Catapaecilma major","Common Tinsel"],["Catapaecilma subochracea","Yellow Tinsel Nagaland."],["Acupicta delicatum","Dark Tinsel"],["Loxura atymnus","Yamfly"],["Yasoda tripunctata","Branded Yamfly"],["Drina donina","Brown Yam"],["Horaga albimacula","Violet Onyx"],["Horaga onyx","Common Onyx"],["Horaga syrinx","Yellow Onyx"],["Horaga viola","Brown Onyx"],["Rathinda amor","Monkey Puzzle"],["Cheritra freja","Common Imperial"],["Cheritrella truncipennis","Truncate Imperial"],["Ticherra acte","Blue Imperial"],["Drupadia scaeva","Blue Posy"],["Pratapa deva","White Royal"],["Pratapa icetas","Dark Blue Royal"],["Pratapa icetoides","Blue Royal"],["Tajuria albiplaga","Pallid Royal"],["Tajuria cippus","Peacock Royal"],["Tajuria culta","Black-branded Royal"],["Tajuria deudorix","Flash Royal"],["Tajuria diaeus","Straightline Royal"],["Tajuria illurgioides","Scarce White Royal"],["Tajuria illurgis","White Royal"],["Tajuria isaeus","Bornean Royal"],["Tajuria ister","Uncertain Royal"],["Tajuria jehana","Plains Blue Royal"],["Tajuria luculenta","Chinese Royal"],["Tajuria maculata","Spotted Royal"],["Tajuria megistia","Orange-and-black Royal"],["Tajuria melastigma","Branded Royal"],["Tajuria yajna","Chestnut-and-black Royal"],["Dacalana cotys","White-banded Royal"],["Dacalana penicilligera","Double-tufted Royal"],["Maneca bhotea","Slate Royal"],["Creon cleobis","Broadtail Royal"],["Bullis buto","Baby Royal"],["Eliotiana jalindra","Banded Royal"],["Neocheritra fabronia","Pale Grand Imperial"],["Charana cepheis","Cachar Mandarin Blue"],["Charana mandarina","Mandarin Blue"],["Suasa lisides","Red Imperial"],["Britomartis cleoboides","Azure Royal"],["Remelana jangala","Chocolate Royal"],["Ancema blanka","Silver Royal"],["Ancema ctesia","Bi-Spot Royal"],["Hypolycaena erylus","Common Tit"],["Hypolycaena narada","Banded Tit"],["Hypolycaena nilgirica","Nilgiri Tit"],["Hypolycaena thecloides","Brown Tit"],["Chliaria kina","Blue Tit"],["Chliaria othona","Orchid Tit"],["Zeltus amasa","Fluffy Tit"],["Deudorix epijarbas","Cornelian"],["Deudorix gaetulia","Assam Cornelian"],["Virachola dohertyi","Doherty's Guava Blue"],["Virachola isocrates","Common Guava Blue"],["Virachola kessuma","Whiteline Flash"],["Virachola perse","Large Guava Blue"],["Virachola similis","Scarce Guava Blue"],["Artipe eryx","Green Flash"],["Sinthusa chandrana","Broad Spark"],["Sinthusa nasaka","Narrow Spark"],["Sinthusa virgo","Pale Spark"],["Araotes lapithis","Witch"],["Bindahara phocides","Plane"],["Rapala buxaria","Shot Flash"],["Rapala damona","Malay Red Flash"],["Rapala dieneces","Scarlet Flash"],["Rapala extensa","Chitral Flash"],["Rapala iarbus","Common Red Flash"],["Rapala lankana","Malabar Flash"],["Rapala manea","Slate Flash"],["Rapala nissa","Common Flash"],["Rapala pheretima","Copper Flash"],["Rapala rectivitta","Scarce Shot Flash"],["Rapala refulgens","Refulgent Flash"],["Rapala melida","Brilliant Flash"],["Rapala rosacea","Rosy Flash"],["Rapala rubida","Tytler's Flash"],["Rapala selira","Himalayan Red Flash"],["Rapala scintilla","Scarce Slate Flash"],["Rapala suffusa","Suffused Flash"],["Rapala tara","Assam Flash"],["Rapala varuna","Indigo Flash"],["Pamela dudgeoni","Lister's Hairstreak"],["Ahlbergia leechii","Ferruginous Hairstreak"],["Strymon mackwoodi","Mackwood's Hairstreak"],["Superflua deria","Moore's Hairstreak"],["Niphanda asialis","Fawcett's Pierrot"],["Niphanda cymbia","Pointed Pierrot"],["Anthene emolus","Ciliate Blue"],["Anthene lycaenina","Pointed Ciliate Blue"],["Una usta","Una"],["Orthomiella pontis","Straightwing Blue"],["Orthomiella rantaizana","Burmese Straightwing Blue"],["Petrelaea dana","Dingy Lineblue"],["Nacaduba berenice","Rounded Sixlineblue"],["Nacaduba beroe","Opaque Sixlineblue"],["Nacaduba calauria","Dark Ceylon Sixlineblue"],["Nacaduba hermus","Pale Fourlineblue"],["Nacaduba kurava","Transparent Sixlineblue"],["Nacaduba pactolus","Large Fourlineblue"],["Nacaduba pavana","Small Fourlineblue"],["Nacaduba sanaya","Jewel Fourlineblue"],["Nacaduba subperusia","Violet Fourlineblue"],["Prosotas aluta","Barred Lineblue"],["Prosotas bhutea","Bhutya Lineblue"],["Prosotas dubiosa","Tailless Lineblue"],["Prosotas lutea","Banded Lineblue"],["Prosotas nora","Common Lineblue"],["Prosotas noreia","White-tipped Lineblue"],["Prosotas pia","Margined Lineblue"],["Ionolyce helicon","Pointed Lineblue"],["Catopyrops ancyra","Felder's Lineblue"],["Caleta decidia","Angled Pierrot"],["Caleta elna","Elbowed Pierrot"],["Caleta roxus","Straight Pierrot"],["Discolampa ethion","Banded Blue Pierrot"],["Jamides alecto","Metallic Cerulean"],["Jamides bochus","Dark Cerulean"],["Jamides caeruleus","Royal Cerulean"],["Jamides celeno","Common Cerulean"],["Jamides elpis","Glistening Cerulean"],["Jamides ferrari","Ferrar's Cerulean"],["Jamides kankena","Frosted Cerulean"],["Jamides pura","White Cerulean"],["Catochrysops panormus","Silver Forgetmenot"],["Catochrysops strabo","Forgetmenot"],["Lampides boeticus","Peablue"],["Leptotes plinius","Zebra Blue"],["Castalius rosimon","Common Pierrot"],["Tarucus ananda","Dark Pierrot"],["Tarucus balkanicus","Black-spotted Pierrot"],["Tarucus callinara","Spotted Pierrot"],["Tarucus hazara","Hazara Pierrot"],["Tarucus indicus","Indian Pointed Pierrot"],["Tarucus nara","Striped Pierrot"],["Tarucus venosus","Himalayan Pierrot"],["Tarucus waterstradti","Assam Pierrot"],["Zizeeria karsandra","Dark Grass Blue"],["Pseudozizeeria maha","Pale Grass Blue"],["Zizina otis","Lesser Grass Blue"],["Zizula hylax","Tiny Grass Blue"],["Everes argiades","Tailed Cupid"],["Everes hugelii","Dusky-blue Cupid"],["Everes lacturnus","Indian Cupid"],["Cupido alainus","Staudinger's Cupid"],["Cupido buddhista","Shandur Cupid"],["Iolana gigantea","Gilgit Mountain Blue"],["Bothrinia chennelli","Hedge Cupid"],["Tongeia kala","Black Cupid"],["Tongeia pseudozuthus","False Tibetan Cupid"],["Shijimia moorei","Moore's Cupid"],["Talicada nyseus","Red Pierrot"],["Pithecops fulgens","Blue Quaker"],["Pithecops corvus","Forest Quaker"],["Azanus jesous","African Babul Blue"],["Azanus ubaldus","Bright Babul Blue"],["Azanus uranus","Dull Babul Blue"],["Neopithecops zalmora","Quaker"],["Megisba malaya","Malayan"],["Celastrina argiolus","Hill Hedge Blue"],["Celastrina gigas","Silvery Hedge Blue"],["Celastrina hersilia","Mishmi Hedge Blue"],["Celastrina hugelii","Large Hedge Blue"],["Celastrina lavendularis","Plain Hedge Blue"],["Celastrina oreas","Khasi Hedge Blue"],["Lestranicus transpectus","White-banded Hedge Blue"],["Celatoxia albidisca","Whitedisc Hedge Blue"],["Celatoxia marginata","Margined Hedge Blue"],["Notarthrinus binghami","Chapman's Hedge Blue"],["Acytolepis lilacea","Hampson's Hedge Blue"],["Acytolepis puspa","Common Hedge Blue"],["Oreolyce dohertyi","Naga Hedge Blue"],["Oreolyce vardhana","Dusky Hedge Blue"],["Callenya melaena","Metallic Hedge Blue"],["Monodontides musina","Swinhoe's Hedge Blue"],["Udara akasa","White Hedge Blue"],["Udara albocaerulea","Albocerulean"],["Udara dilecta","Pale Hedge Blue"],["Udara placidula","Narrow-bordered Hedge Blue"],["Udara selma","Bicoloured Hedge Blue"],["Udara singalensis","Singhalese Hedge Blue"],["Euchrysops cnejus","Gram Blue"],["Freyeria putli","Small Grass Jewel"],["Freyeria trochylus","Grass Jewel"],["Luthrodes pandava","Plains Cupid"],["Chilades lajus","Lime Blue"],["Chilades parrhasius","Small Cupid"],["Turanana chitrali","Chitral Argus Blue"],["Pseudophilotes vicrama","Eastern Baton Blue"],["Phengaris atroguttata","Great Spotted Blue"],["Plebejus eversmanni","Tibetan Jewel Blue"],["Plebejus samudra","Ladakh Jewel Blue"],["Aricia agestis","Orange-bordered Argus"],["Aricia artaxerxes","Northern Brown Argus"],["Aricia astorica","Astor Argus"],["Eumedonia eumedon","Streaked Argus"],["Agriades jaloka","Greenish Mountain Blue"],["Agriades morsheadi","Evans' Mountain Blue"],["Agriades pheretiades","Tien Shan Blue"],["Albulina asiatica","Azure Mountain Blue"],["Albulina chitralensis","Chitral Green Underwing"],["Albulina chrysopis","Golden Green Underwing"],["Albulina galathea","Large Green Underwing"],["Albulina lehanus","Common Mountain Blue"],["Albulina metallica","Small Green Underwing"],["Albulina omphisa","Dusky Green Underwing"],["Albulina pharis","Fawcett's Mountain Blue"],["Albulina sikkima","Sikkim Mountain Blue"],["Patricius younghusbandi","Chumbi Green Underwing"],["Plebejidea loewii","Large Jewel Blue"],["Kretania beani","Bean's Jewel Blue"],["Farsia ashretha","Evans' Argus Blue"],["Farsia hanna","Jewel Argus Blue"],["Alpherakya devanica","Dusky Meadow Blue"],["Alpherakya sarta","Brilliant Meadow Blue"],["Polyommatus ariana","Lahaul Meadow Blue"],["Polyommatus drasula","Ladakh Meadow Blue"],["Polyommatus dux","Kumaon Meadow Blue"],["Polyommatus erigone","Grshimailo's Meadow Blue"],["Polyommatus hunza","Hunza Meadow Blue"],["Polyommatus icadius","Gilgit Meadow Blue"],["Polyommatus janetae","Janet's Meadow Blue"],["Polyommatus pseuderos","Kashmir Meadow Blue"],["Polyommatus pulchellus","Bernardi's Meadow Blue"],["Polyommatus stoliczkanus","Stoliczka's Meadow Blue"],["Danaus affinis","Malay Tiger"],["Danaus chrysippus","Plain Tiger"],["Danaus genutia","Common Tiger"],["Danaus melanippus","White Tiger"],["Ideopsis juventa","Grey Glassy Tiger"],["Ideopsis similis","Blue Glassy Tiger"],["Parantica aglea","Glassy Tiger"],["Parantica agleoides","Dark Glassy Tiger"],["Parantica melaneus","Chocolate Tiger"],["Parantica swinhoei","Swinhoe's Chocolate Tiger"],["Parantica nilgiriensis","Nilgiri Tiger"],["Parantica pedonga","Talbot's Chestnut Tiger"],["Parantica sita","Chestnut Tiger"],["Tirumala gautama","Scarce Blue Tiger"],["Tirumala limniace","Blue Tiger"],["Tirumala septentrionis","Dark Blue Tiger"],["Idea agamarschana","Burmese Tree Nymph"],["Idea malabarica","Malabar Tree Nymph"],["Euploea algea","Long-branded Blue Crow"],["Euploea core","Common Crow"],["Euploea crameri","Spotted Black Crow"],["Euploea doubledayi","Striped Black Crow"],["Euploea eunice","Blue-branded King Crow"],["Euploea klugii","King Crow"],["Euploea midamus","Spotted Blue Crow"],["Euploea mulciber","Striped Blue Crow"],["Euploea phaenareta","Great Crow"],["Euploea radamanthus","Magpie Crow"],["Euploea sylvester","Double-branded Crow"],["Calinaga buddha","Freak"],["Prothoe franck","Blue Begum"],["Polyura agraria","Anomalous Nawab"],["Polyura arja","Pallid Nawab"],["Polyura athamas","Common Nawab"],["Polyura bharata","Cryptic Nawab"],["Polyura delphis","Jewelled Nawab"],["Polyura dolon","Stately Nawab"],["Polyura eudamippus","Great Nawab"],["Polyura moori","Malayan Nawab"],["Polyura narcaeus","China Nawab"],["Polyura schreiber","Blue Nawab"],["Charaxes aristogiton","Scarce Tawny Rajah"],["Charaxes bernardus","Tawny Rajah"],["Charaxes durnfordi","Chestnut Rajah"],["Charaxes kahruba","Variegated Rajah"],["Charaxes marmax","Yellow Rajah"],["Charaxes psaphon","Plain Tawny Rajah"],["Charaxes solon","Black Rajah"],["Faunis eumeus","Large Faun"],["Faunis canens","Common Faun"],["Aemona amathusia","Yellow Dryad"],["Stichophthalma camadeva","Northern Junglequeen"],["Stichophthalma nourmahal","Chocolate Junglequeen"],["Stichophthalma sparta","Manipur Junglequeen"],["Amathusia andamanensis","Andaman Palmking"],["Amathusia phidippus","Common Palmking"],["Amathuxidia amythaon","Koh-i-Noor"],["Thaumantis diores","Jungleglory"],["Thauria lathyi","Jungleking"],["Discophora deo","Banded Duffer"],["Discophora lepida","Southern Duffer"],["Discophora sondaica","Common Duffer"],["Discophora timora","Great Duffer"],["Enispe cycnus","Blue Caliph"],["Enispe euthymius","Red Caliph"],["Enispe intermedia","Malayan Red Caliph"],["Elymnias cottonis","Andaman Palmfly"],["Elymnias hypermnestra","Common Palmfly"],["Elymnias malelas","Spotted Palmfly"],["Elymnias nesaea","Tiger Palmfly"],["Elymnias panthera","Nicobar Palmfly"],["Elymnias patna","Blue-striped Palmfly"],["Elymnias peali","Peal's Palmfly"],["Elymnias penaga","Pointed Palmfly"],["Elymnias vasudeva","Jezabel Palmfly"],["Neorina hilda","Yellow Owl"],["Neorina patria","White Owl"],["Penthema lisarda","Yellow Kaiser"],["Ethope himachala","Dusky Diadem"],["Melanitis leda","Common Evening Brown"],["Melanitis phedima","Dark Evening Brown"],["Melanitis zitenius","Great Evening Brown"],["Cyllogenes janetae","Scarce Evening Brown"],["Cyllogenes suradeva","Branded Evening Brown"],["Parantirrhoea marshalli","Travancore Evening Brown"],["Lethe andersoni","Anderson's Silverstripe"],["Lethe atkinsonia","Small Goldenfork"],["Lethe baladeva","Treble Silverstripe"],["Lethe bhairava","Rusty Forester"],["Lethe brisanda","Dark Forester"],["Lethe chandica","Angled Red Forester"],["Lethe confusa","Banded Treebrown"],["Lethe dakwania","Garhwal Woodbrown"],["Lethe dura","Scarce Lilacfork"],["Lethe distans","Scarce Red Forester"],["Lethe drypetis","Tamil Treebrown"],["Lethe europa","Bamboo Treebrown"],["Lethe goalpara","Large Goldenfork"],["Lethe gemina","Tytler's Treebrown"],["Lethe gulnihal","Dull Forester"],["Lethe isana","Common Forester"],["Lethe jalaurida","Small Silverfork"],["Lethe kabrua","Manipur Goldenfork"],["Lethe kanjupkula","Manipur Woodbrown"],["Lethe kansa","Bamboo Forester"],["Lethe latiaris","Pale Forester"],["Lethe maitrya","Barred Woodbrown"],["Lethe margaritae","Bhutan Treebrown"],["Lethe mekara","Common Red Forester"],["Lethe moelleri","Moeller‘s Silverfork"],["Lethe naga","Naga Treebrown"],["Lethe nicetas","Yellow Woodbrown"],["Lethe nicetella","Small Woodbrown"],["Lethe ramadeva","Single Silverstripe"],["Lethe rohria","Common Treebrown"],["Lethe satyavati","Pallid Forester"],["Lethe scanda","Blue Forester"],["Lethe serbonis","Brown Forester"],["Lethe siderea","Scarce Woodbrown"],["Lethe sidonis","Common Woodbrown"],["Lethe sinorix","Tailed Red Forester"],["Lethe sura","Scarce Lilacfork"],["Lethe tristigmata","Spotted Mystic"],["Lethe verma","Straight-banded Treebrown"],["Lethe vindhya","Black Forester"],["Lethe visrava","White-edged Woodbrown"],["Neope armandii","Chinese Labyrinth"],["Neope bhadra","Tailed Labyrinth"],["Neope pulaha","Veined Labyrinth"],["Neope pulahina","Scarce Labyrinth"],["Neope pulahoides","Assam Veined Labyrinth"],["Neope yama","Dusky Labyrinth"],["Lasiommata maerula","Scarce Wall"],["Lasiommata menava","Dark Wall"],["Lasiommata schakra","Common Wall"],["Kirinia eversmanni","Yellow Wall"],["Chonala masoni","Chumbi Wall"],["Rhaphicera moorei","Small Tawny Wall"],["Rhaphicera satricus","Large Tawny Wall"],["Orinoma damaris","Tigerbrown"],["Heteropsis adolphei","Redeye Bushbrown"],["Heteropsis malsara","White-line Bushbrown"],["Heteropsis mamerta","Blind-eye Bushbrown"],["Mycalesis adamsoni","Watson's Bushbrown"],["Mycalesis anaptia","Tawny Bushbrown"],["Mycalesis anaxias","Whitebar Bushbrown"],["Mycalesis annamitica","Blindeyed Bushbrown"],["Mycalesis evansii","Tytler's Bushbrown"],["Mycalesis francisca","Lilacine Bushbrown"],["Mycalesis gotama","Chinese Bushbrown"],["Mycalesis heri","Moore's Bushbrown"],["Mycalesis igilia","Small Long-brand Bushbrown"],["Mycalesis intermedia","Intermediate Bushbrown"],["Mycalesis lepcha","Lepcha Bushbrown"],["Mycalesis malsarida","Plain Bushbrown"],["Mycalesis manii","Nicobar Bushbrown"],["Mycalesis mestra","White-edged Bushbrown"],["Mycalesis mineus","Dark-brand Bushbrown"],["Mycalesis misenus","De Niceville's Bushbrown"],["Mycalesis mnasicles","Cyclops Bushbrown"],["Mycalesis mystes","Many-tufted Bushbrown"],["Mycalesis nicotia","Brighteye Bushbrown"],["Mycalesis oculus","Red-disc Bushbrown"],["Mycalesis orcha","Pale-brand Bushbrown"],["Mycalesis patiana","Eliot's Bushbrown"],["Mycalesis patnia","Glad-eye Bushbrown"],["Mycalesis perseus","Common Bushbrown"],["Mycalesis suaveolens","Wood-Mason's Bushbrown"],["Mycalesis visala","Long-brand Bushbrown"],["Orsotriaena medus","Nigger"],["Zipaetis saitis","Tamil Catseye"],["Zipaetis scylax","Dark Catseye"],["Erites falcipennis","Common Cyclops"],["Coelites nothis","Scarce Catseye"],["Ragadia crisilda","Striped Ringlet"],["Hyponephele carbonelli","Baltistan Meadowbrown"],["Hyponephele cheena","Branded Meadowbrown"],["Hyponephele coenonympha","Spotted Meadowbrown"],["Hyponephele davendra","White-ringed Meadowbrown"],["Hyponephele brevistigma","Short-branded Meadowbrown"],["Hyponephele tenuistigma","Lesser White-ringed Meadowbrown"],["Hyponephele pulchella","Tawny Meadowbrown"],["Hyponephele pulchra","Dusky Meadowbrown"],["Hyponephele hilaris","Pamir Meadowbrown"],["Callerebia annada","Ringed Argus"],["Callerebia baileyi","White-bordered Argus"],["Callerebia dibangensis","Roy's Argus"],["Callerebia hybrida","Hybrid Argus"],["Callerebia nirmala","Common Argus"],["Callerebia orixa","Moore's Argus"],["Callerebia scanda","Pallid Argus"],["Callerebia suroia","Manipur Argus"],["Paralasa chitralica","Chitral Argus"],["Paralasa kalinda","Scarce Mountain Argus"],["Paralasa mani","Yellow Argus"],["Paralasa shallada","Mountain Argus"],["Loxerebia narasingha","Mottled Argus"],["Ypthima affectata","Khasi Fivering"],["Ypthima asterope","Common Threering"],["Ypthima atra","Black Fivering"],["Ypthima baldus","Common Fivering"],["Ypthima bolanica","Desert Fourring"],["Ypthima cantliei","Cantlie's Fourring"],["Ypthima ceylonica","White Fourring"],["Ypthima chenu","Nilgiri Fourring"],["Ypthima davidsoni","Davidson's Fivering"],["Ypthima dohertyi","Great Fivering"],["Ypthima fusca","Assam Threering"],["Ypthima hannyngtoni","Hannyngton's Fivering"],["Ypthima huebneri","Common Fourring"],["Ypthima hyagriva","Brown Argus"],["Ypthima indecora","Western Fivering"],["Ypthima inica","Lesser Threering"],["Ypthima kasmira","Kashmir Fourring"],["Ypthima lisandra","Jewel Fourring"],["Ypthima lycus","Plain Threering"],["Ypthima methora","Variegated Fivering"],["Ypthima nareda","Large Threering"],["Ypthima newara","Newar Threering"],["Ypthima nikaea","Moore's Fivering"],["Ypthima norma","Burmese Threering"],["Ypthima parasakra","Himalayan Fourring"],["Ypthima persimilis","Manipur Fivering"],["Ypthima philomela","Baby Fivering"],["Ypthima sakra","Himalayan Fivering"],["Ypthima savara","Pallid Fivering"],["Ypthima similis","Eastern Fivering"],["Ypthima singala","Small Jewel Fourring"],["Ypthima sobrina","Karen Fivering"],["Ypthima striata","Nilgiri Jewel Fourring"],["Ypthima watsoni","Looped Threering"],["Ypthima yphthimoides","Palni Fourring"],["Oeneis buddha","Tibetan Satyr"],["Paroeneis pumilus","Mountain Satyr"],["Paroeneis sikkimensis","Sikkim Satyr"],["Karanasa alpherakyi","Avinoff's Satyr"],["Karanasa bolorica","Turkestan Satyr"],["Karanasa cadesia","Moore's Satyr"],["Karanasa huebneri","Tawny Satyr"],["Karanasa modesta","Small Satyr"],["Karanasa moorei","Shandur Satyr"],["Karanasa leechi","Leech's Satyr"],["Karanasa rohtanga","Rohtang Satyr"],["Satyrus pimpla","Black Satyr"],["Aulocera brahminus","Narrow-banded Satyr"],["Aulocera loha","Doherty's Satyr"],["Aulocera padma","Great Satyr"],["Aulocera saraswati","Striated Satyr"],["Aulocera swaha","Common Satyr"],["Hipparchia parisatis","White-edged Rockbrown"],["Chazara heydenreichi","Shandur Rockbrown"],["Pseudochazara baldiva","Kashmir Rockbrown"],["Pseudochazara droshica","Tytler's Rockbrown"],["Kanetisa digna","Chitrali Satyr"],["Neptis ananta","Yellow Sailer"],["Neptis armandia","Variegated Sailer"],["Neptis capnodes","Eliot's Sailer"],["Neptis cartica","Plain Sailer"],["Neptis clinia","Clear Sailer"],["Neptis cydippe","Chinese Yellow Sailer"],["Neptis harita","Dingiest Sailer"],["Neptis hylas","Common Sailer"],["Neptis ilira","Dark Dingy Sailer"],["Neptis jumbah","Chestnut-streaked Sailer"],["Neptis magadha","Spotted Sailer"],["Neptis mahendra","Himalayan Sailer"],["Neptis manasa","Pale Hockeystick Sailer"],["Neptis miah","Small Yellow Sailer"],["Neptis namba","Manipur Yellow Sailer"],["Neptis narayana","Broadstick Sailer"],["Neptis nashona","Less Rich Sailer"],["Neptis nata","Sullied Sailer"],["Neptis nemorum","Naga Hockeystick Sailer"],["Neptis pseudovikasi","Dingy Sailer"],["Neptis radha","Great Yellow Sailer"],["Neptis sankara","Broad-banded Sailer"],["Neptis sappho","Pallas' Sailer"],["Neptis soma","Creamy Sailer"],["Neptis zaida","Pale Green Sailer"],["Phaedyma aspasia","Great Hockeystick Sailer"],["Phaedyma columella","Short-banded Sailer"],["Lasippa tiga","Burmese Lascar"],["Lasippa viraja","Yellowjack Sailer"],["Pantoporia assamica","Assamese Lascar"],["Pantoporia aurelia","Baby Lascar"],["Pantoporia bieti","Tytler's Lascar"],["Pantoporia hordonia","Common Lascar"],["Pantoporia paraka","Perak Lascar"],["Pantoporia sandaca","Extra Lascar"],["Athyma asura","Studded Sergeant"],["Athyma cama","Orange Staff Sergeant"],["Athyma nefte","Colour Sergeant"],["Athyma jina","Bhutan Sergeant"],["Athyma kanwa","Dot-dash Sergeant"],["Athyma larymna","Great Sergeant"],["Athyma opalina","Himalayan Sergeant"],["Athyma orientalis","Oriental Sergeant"],["Athyma perius","Common Sergeant"],["Athyma pravara","Unbroken Sergeant"],["Athyma ranga","Blackvein Sergeant"],["Athyma reta","Malay Staff Sergeant"],["Athyma rufula","Andaman Sergeant"],["Athyma selenophora","Staff Sergeant"],["Athyma whitei","Cryptic Sergeant"],["Athyma zeroca","Small Staff Sergeant"],["Limenitis lepechini","Chitral White Admiral"],["Limenitis trivena","Indian White Admiral"],["Moduza procris","Commander"],["Parasarpa dudu","White Commodore"],["Parasarpa zayla","Bicolour Commodore"],["Sumalia daraxa","Green Commodore"],["Sumalia zulema","Scarce White Commodore"],["Auzakia danava","Commodore"],["Bhagadatta austenia","Grey Commodore"],["Lebadea martha","Knight"],["Parthenos sylvia","Clipper"],["Neurosigma siva","Panther"],["Abrota ganga","Sergeant-major"],["Cynitia cocytus","Lavender Count"],["Cynitia lepidea","Grey Count"],["Cynitia telchinia","Blue Baron"],["Tanaecia jahnu","Plain Earl"],["Tanaecia cibaritis","Andaman Viscount"],["Tanaecia julii","Common Earl"],["Euthalia aconthea","Common Baron"],["Euthalia alpheda","Streaked Baron"],["Euthalia anosia","Grey Baron"],["Euthalia confucius","Chinese Duke"],["Euthalia curvifascia","Naga Duke"],["Euthalia durga","Blue Duke"],["Euthalia duda","Blue Duchess"],["Euthalia evelina","Red-spot Duke"],["Euthalia eriphylae","White-tipped Baron"],["Euthalia franciae","French Duke"],["Euthalia iva","Grand Duke"],["Euthalia lengba","Tytler's Duchess"],["Euthalia lubentina","Gaudy Baron"],["Euthalia malaccana","Fruhstorfer's Baron"],["Euthalia merta","Dark Baron"],["Euthalia monina","Powdered Baron"],["Euthalia nara","Bronze Duke"],["Euthalia narayana","Burmese Baron"],["Euthalia patala","Grand Duchess"],["Euthalia phemius","White-edged Blue Baron"],["Euthalia recta","Redtail Maquis"],["Euthalia sahadeva","Green Duke"],["Euthalia saitaphernes","Mottled Baron"],["Euthalia teuta","Banded Marquis"],["Euthalia thawgawa","Tytler's Duke"],["Symphaedra nais","Baronet"],["Lexias cyanipardus","Great Archduke"],["Lexias dirtea","Dark Archduke"],["Lexias pardalis","Archduke"],["Argynnis aglaja","Dark Green Silverspot"],["Argynnis childreni","Great Silverstripe"],["Argynnis clara","Silverstreak"],["Argynnis hyperbius","Indian Fritillary"],["Argynnis jainadeva","Highbrown Silverspot"],["Argynnis kamala","Common Silverstripe"],["Argynnis laodice","Eastern Silverstripe"],["Argynnis pandora","Cardinal"],["Issoria altissima","Mountain Silverspot"],["Issoria gemmata","Gem Silverspot"],["Issoria lathonia","Queen of Spain Fritillary"],["Issoria mackinnoni","Brilliant Silverspot"],["Boloria erubescens","Whitespot Fritillary"],["Boloria generator","Hunza Silverspot"],["Boloria jerdoni","Jerdon's Silverspot"],["Boloria sipora","Straightwing Silverspot"],["Phalanta alcippe","Small Leopard"],["Phalanta phalantha","Common Leopard"],["Cupha erymanthis","Rustic"],["Vagrans egista","Vagrant"],["Vindula erota","Cruiser"],["Algia fasciata","Branded Yeoman"],["Cirrochroa aoris","Large Yeoman"],["Cirrochroa nicobarica","Nicobar Yeoman"],["Cirrochroa thais","Tamil Yeoman"],["Cirrochroa tyche","Common Yeoman"],["Ariadne ariadne","Angled Castor"],["Ariadne merione","Common Castor"],["Laringa horsfieldi","Banded Dandy"],["Byblia ilithyia","Joker"],["Rohana parisatis","Black Prince"],["Rohana parvata","Brown Prince"],["Eulaceura manipurensis","Tytler's Emperor"],["Chitoria naga","Naga Emperor"],["Chitoria sordida","Sordid Emperor"],["Chitoria ulupi","Tawny Emperor"],["Mimathyma ambica","Indian Purple Emperor"],["Mimathyma bhavana","Bhutan Emperor"],["Mimathyma chevana","Sergeant Emperor"],["Mimathyma chitralensis","Chitral Emperor"],["Dilipa morgiana","Golden Emperor"],["Sephisa chandra","Eastern Courtier"],["Sephisa dichroa","Western Courtier"],["Helcyra hemina","White Emperor"],["Herona marathus","Pasha"],["Euripus consimilis","Painted Courtesan"],["Euripus nyctelius","Courtesan"],["Hestina nicevillei","Scarce Siren"],["Hestina persimilis","Siren"],["Hestinalis nama","Circe"],["Sasakia funebris","Empress"],["Cyrestis cocles","Marbled Map"],["Cyrestis tabula","Nicobar Map"],["Cyrestis thyodamas","Common Map"],["Chersonesia intermedia","Wavy Maplet"],["Chersonesia risa","Common Maplet"],["Pseudergolis wedah","Tabby"],["Stibochiona nicea","Popinjay"],["Dichorragia nesimachus","Constable"],["Melitaea arcesia","Blackvein Fritillary"],["Melitaea shandura","Shandur Fritillary"],["Melitaea fergana","Uzbek Fritillary"],["Melitaea nadezhdae","Sheljuzhko's Fritillary"],["Melitaea balbina","Pamir Fritillary"],["Symbrenthia brabira","Himalayan Jester"],["Symbrenthia doni","Naga Jester"],["Symbrenthia hypselis","Spotted Jester"],["Symbrenthia lilaea","Common Jester"],["Symbrenthia niphanda","Blue-tailed Jester"],["Symbrenthia silana","Scarce Jester"],["Araschnia prorsoides","Mongol"],["Nymphalis xanthomelas","Large Tortoiseshell"],["Aglais caschmirensis","Indian Tortoiseshell"],["Aglais ladakensis","Ladakh Tortoiseshell"],["Aglais rizana","Mountain Tortoiseshell"],["Kaniska canace","Blue Admiral"],["Polygonia c-album","Comma"],["Polygonia l-album","False Comma"],["Polygonia undina","Pamir Comma"],["Vanessa cardui","Painted Lady"],["Vanessa indica","Indian Red Admiral"],["Junonia almana","Peacock Pansy"],["Junonia atlites","Grey Pansy"],["Junonia hierta","Yellow Pansy"],["Junonia iphita","Chocolate Pansy"],["Junonia lemonias","Lemon Pansy"],["Junonia orithya","Blue Pansy"],["Hypolimnas anomala","Malayan Eggfly"],["Hypolimnas bolina","Great Eggfly"],["Hypolimnas misippus","Danaid Eggfly"],["Kallima albofasciata","White Oakleaf"],["Kallima horsfieldii","Southern Blue Oakleaf"],["Kallima inachus","Orange Oakleaf"],["Kallima knyvetti","Scarce Blue Oakleaf"],["Doleschallia bisaltide","Autumn Leaf"],["Rhinopalpa polynice","Wizard"],["Yoma sabina","Lurcher"],["Acraea issoria","Yellow Coster"],["Acraea violae","Tawny Coster"],["Cethosia biblis","Red Lacewing"],["Cethosia cyane","Leopard Lacewing"],["Cethosia nietneri","Tamil Lacewing"],["Libythea lepita","Common Beak"],["Libythea myrrha","Club Beak"],["Libythea narina","White-spotted Beak"]],Lr=[["Hyponephele cheena","Cheena Meadowbrown"],["Hyponephele coenonympha","Spotted Meadowbrown"],["Pyrgus cashmirensis","Plain Mountain Skipper"],["Melitaea arcesia","Blackvein Checkerspot"],["Isma bonota","Multi-spotted Flitter"],["Poritia erycinoides","Blue Gem"],["Capila lidderdali","Ringed Dawnfly"],["Ypthima burmana","Large-eyed Three-ring"],["Ypthima fusca","Dusky Three-ring"],["Melitaea robertsi","Baluchi Fritillary"],["Tajuria yajna","Chestnut-and-Black Royal"],["Paroeneis pumilus","Ladakh Mountain Satyr"],["Lycaena aditya","Bright Copper"],["Euthalia saitaphernes","Spotless Baron"],["Choaspes xanthopogon","Spiny Awlking"],["Spindasis elwesi","Orange-spot Silverline"],["Apporasa atkinsoni","Crenulate Oakblue"],["Superflua sassanides","White-line Hairstreak"],["Parnara guttatus","Straight Swift"],["Potanthus pava","Pava Dart"],["Coladenia hoenei","Large Spot Pied Flat"],["Caltoris aurociliata","Yellow-fringed Swift"],["Inomataozephyrus assamica","Patkai Green Hairstreak"],["Aulocera loha","Eyeless Satyr"],["Phaedyma aspasia","Great Hockeystick Sailer"],["Euaspa mikamii","Yellow-disc Hairstreak"],["Arhopala asinarus","Broad-banded Oakblue"],["Tirumala gautama","Scarce Blue Tiger"],["Heliophorus androcles","Green Sapphire"],["Rapala melida","Brilliant Flash"],["Sovia grahami","Pale Ace"],["Neptis cartica","Plain Sailer"],["Fujiokaozephyrus camurius","Dull-blue Hairstreak"],["Tajuria luculentus","Black-spot Royal"],["Scobura phiditia","One-spotted Forest Bob"],["Pithauria murdava","Dark Straw Ace"],["Shirozuozephyrus kirbariensis",""],["Ypthima hannyngtoni","Large Branded Five-ring"],["Mimathyma chitralensis","Large Emperor"],["Lethe tamuna","Clear-eyed Treebrown"],["Nacaduba calauria","Dark Six-Lineblue"],["Callerebia suroia","Basal Argus"],["Discophora timora","Great Duffer"],["Lethe jalaurida","Small Silverfork"],["Byasa plutonius","Pink-spotted Windmill"],["Euploea godartii","Violet-tipped Crow"],["Pedesta panda","Contiguous Bush Bob"],["Papilio prexaspes","Blue Helen"],["Ypthima cantliei","Great Four-ring"],["Ideopsis similis","Blue Glassy Tiger"],["Argynnis westphali","Emerald-and-Silver Fritillary"],["Byasa crassipes","Black Windmill"],["Chitoria sordida","Sordid Emperor"],["Potanthus trachala","Broad Bident Dart"],["Discophora deo","Yellow-banded Duffer"],["Albulina asiatica","Azure Mountain Blue"],["Rapala rectivitta","Scarce Shot Flash"],["Cyllogenes janetae","Scarce Evening Brown"],["Arhopala hellenore","Pointed Green Oakblue"],["Erynnis pelias","Frosted Duskywing"],["Cyllogenes suradeva","Branded Evening Brown"],["Lethe dakwania","White-wedged Woodbrown"],["Halpe aucma","Gold-spotted Ace"],["Neptis nana","Little Sailer"],["Athyma punctata","White-patch Sergeant"],["Rapala suffusa","Suffused Flash"],["Rapala damona","Malay Red Flash"],["Lethe kabrua","Manipur Goldenfork"],["Polyommatus dux","Kumaon Meadow Blue"],["Chrysozephyrus tytleri","Broad Hairstreak"],["Chrysozephyrus dumoides","Small Green Hairstreak"],["Arhopala asopia","Plain Tailless Oakblue"],["Potanthus pava","Pava Dart"],["Potanthus lydia","Lydia Dart"],["Celaenorrhinus morena","Confined Spotted Flat"],["Celaenorrhinus patula","Large Spotted Flat"],["Satarupa splendens","Splendid White Flat"],["Lethe gemina","Silverline Treebrown"],["Lethe nicetella","Small Woodbrown"],["Neope pulahina","Scarce Labyrinth"],["Lasiommata maerula","Scarce Wall"],["Eurema nilgiriensis","Nilgiri Grass Yellow"],["Albulina lehanus","Leh Mountain Blue"],["Plebejus devanica","Dusky Meadow Blue"],["Hyponephele pulchella","Tawny Meadowbrown"],["Karanasa huebneri","Tawny Satyr"],["Sovia separata","Chequered Ace"],["Lasiommata menava","Dark Wall"],["Aglais rizana","Mountain Tortoiseshell"],["Boloria jerdoni","Variegated Silverspot"],["Hipparchia parisatis","White-edged Rockbrown"],["Paralasa mani","Yellow Argus"],["Euthalia duda","Blue Duchess"],["Lethe atkinsonia","Small Goldenfork"],["Hestina nicevillei","Scarce Siren"],["Mycalesis orcha","Pale-brand Bushbrown"],["Limenitis ligyes","Brown-bordered Admiral"],["Celaenorrhinus maculicornis","Separated Spotted Flat"],["Celaenorrhinus pulomaya","Multi-spotted Flat"],["Lethe serbonis","Brown Forester"],["Heliophorus bakeri","Western Blue Sapphire"],["Pseudochazara lehana","Crescent Rockbrown"],["Hyponephele brevistigma","Short-branded Meadowbrown"],["Argynnis jainadeva","Highbrown Silverspot"],["Colias eogene","Fiery Clouded Yellow"],["Colias ladakensis","Ladakh Clouded Yellow"],["Pseudophilotes vicrama","Chequered Blue"],["Aeromachus jhora","Grey Scrub Hopper"],["Nymphalis antiopa","Mourning Cloak"],["Capila pieridoides","White Dawnfly"],["Coelites nothis","Scarce Catseye"],["Chrysozephyrus disparatus","Disparate Hairstreak"],["Spindasis rukma","Cinnamon Silverline"],["Charaxes andamanicus","Andaman Nawab"],["Tarucus hazara","Dark Violet Pierrot"],["Aulocera padma","Great Satyr"],["Hypolimnas anomala","Anomalous Eggfly"],["Mycalesis manii","Nicobarese Blind Bushbrown"],["Euploea scherzeri","Cinnamon Crow"],["Cyrestis tabula","Ochreous Map Butterfly"],["Appias galathea","Beautiful Albatross"],["Ideopsis juventa","Grey Glassy Tiger"],["Graphium epaminondas","Andaman Swordtail"],["Saletara liberia","Pointed Albatross"],["Cirrochroa nicobarica","Nicobar Yeoman"],["Tajuria illurgioides","Scarce White Royal"],["Catopsilia scylla","Orange Emigrant"],["Athyma orientalis","Elongated Sergeant"],["Pontia chloridice","Small Bath White"],["Pontia callidice","Lofty Bath White"],["Pieris deota","Dusky White"],["Ypthima indecora","Indecorous Five-ring"],["Thermozephyrus ataxus","Wonderful Hairstreak"],["Lethe tristigmata","Spotted Mystic"],["Shirozuozephyrus bhutanensis","Bhutanese Silver Hairstreak"],["Chrysozephyrus duma","Large Green Hairstreak"],["Calinaga aborica","Dark Freak"],["Neptis soma","Creamy Sailer"],["Neptis clinia","Sullied Sailer"],["Neptis nashona","Less Rich Sailer"],["Heliophorus hybrida","Hybrid Sapphire"],["Dodona deodata","Broad-banded Punch"],["Spindasis evansii","Rufous Silverline"],["Graphium teredon","Narrow-banded Bluebottle"],["Arhopala paraganesa","Dusky Bushblue"],["Neptis palnica","Palni Sailer"],["Ragadia crito","Dusky-striped Ringlet"],["Esakiozephyrus icana","Dull-green Hairstreak"],["Spindasis elima","Scarce Shot Silverline"],["Neptis mahendra","Himalayan Sailer"],["Halpe sikkima","Sikkim Ace"],["Neptis melba","Versicoloured Sailer"],["Spindasis zhengweilie","Contiguous Silverline"],["Erionota apex","White-tipped Palm-redeye"],["Delias lativitta","White-streaked Jezebel"],["Aporia nabellica","Dusky Blackvein"],["Callerebia shallada","Mountain Argus"],["Ochlodes siva","Shiva Darter"],["Callerebia narasingha","Mottled Argus"],["Aporia harrietae","Dark Blackvein"],["Celaenorrhinus tibetana","Tibetan Flat"],["Delias sanaca","Pale Jezebel"],["Mycalesis suaveolens","Vanilla Bushbrown"],["Neptis manasa","Pale Hockeystick Sailer"],["Lethe kanjupkula","Broken Woodbrown"],["Plastingia naga","Silver-spotted Lancer"],["Stichophthalma sparta","Amber Junglequeen"],["Hypolycaena narada","Banded Tit"],["Arhopala athada","Vinous Oakblue"],["Ypthima parasakra","Dubious Five-ring"],["Bibasis mahintha","Slate Awlet"],["Koruthaialos butleri","Dark Velvet Bob"],["Pantoporia ferrari","Polished Lascar"],["Amathusia andamanensis","Andaman Palmking"],["Hebomoia roepstorfii","Andaman Great Orange-tip"],["Flos chinensis","Chinese Plushblue"],["Erionota hiraca","Small Palm-redeye"],["Baoris pagana","Figure-of-8 Swift"],["Telinga davisoni","Palni Bushbrown"],["Iraota rochana","Scarce Silverstreak Blue"],["Pantoporia assamica","Conjoined Lascar"],["Abisara attenuata","Attenuated Judy"],["Papilio xuthus","Asian Yellow Swallowtail"],["Papilio palinurus","Green-banded Peacock"],["Celastrina argiolus","Hill Hedge Blue"],["Monodontides musina","Grey Hedge Blue"],["Udara albocaeruleus","Albocerulean"],["Celastrina gigas","Silvery Hedge Blue"],["Plebejus samudra","Sea Jewel Blue"],["Rapala tara","Branded Flash"],["Callerebia orixa","Orixa Argus"],["Callerebia annada","Ringed Argus"],["Pantoporia sandaka","Extra Lascar"],["Thoressa hyrie","Variable Ace"],["Ypthima avanta","Jewel Five-ring"],["Polyommatus pseuderos","Red-spotted Meadow Blue"],["Polyommatus ariana","Aryan Meadow Blue"],["Pratapa icetas","Dark Blue Royal"],["Lexias pardalis","Yellow-tipped Archduke"],["Callerebia watsoni","Bent Argus"],["Pieris rapae","Small Cabbage White"],["Gegenes pumilio","Pygmy Swift"],["Gegenes nostrodamus","Dingy Swift"],["Azanus uranus","Dull Babul Blue"],["Ypthima kasmira","Kashmir Four-ring"],["Caltoris philippina","Philippine Swift"],["Polyommatus stoliczkanus","Himalayan Meadow Blue"],["Albulina omphisa","Dusky Green-underwing"],["Albulina chrysopis","Bright Green-underwing"],["Albulina arcaseia","Eastern Mountain Blue"],["Lycaena kasyapa","Green Copper"],["Gonepteryx mahaguru","Lesser Brimstone"],["Gonepteryx amintha","Orange Brimstone"],["Unkana ambasa","Hoary Palmer"],["Callerebia scanda","Pallid Argus"],["Mycalesis radza","Andamanese Eyed Bushbrown"],["Pantoporia cnacalis","White-banded Lascar"],["Tagiades cohaerens","White-striped Snow Flat"],["Mycalesis subdita","Tamil Bushbrown"],["Libythea laius","Lobed Beak"],["Aglais ladakensis","Ladakh Tortoiseshell"],["Celaenorrhinus badia","Scarce Banded Flat"],["Callerebia nirmala","Common Argus"],["Lethe brisanda","Dark Forester"],["Lethe siderea","Scarce Woodbrown"],["Lethe kansa","Bamboo Forester"],["Callerebia hybrida","Hybrid Argus"],["Chonala masoni","Chumbi Wall"],["Issoria gemmata","Gem Silverspot"],["Callerebia hyagriva","Himalayan Brown Argus"],["Parnassius charltonius","Regal Apollo"],["Parnassius stoliczkanus","Many-eyed Apollo"],["Taractrocera danna","White-spotted Grass Dart"],["Teinopalpus imperialis","Kaiser-i-Hind"],["Arhopala comica","Comic Oakblue"],["Chitoria ulpi","Tawny Emperor"],["Pieris extensa","Extended White"],["Flos fulgida","Shining Plushblue"],["Coladenia agnioides","Brown-tipped Pied Flat"],["Rhaphicera satricus","Large Tawny Wall"],["Arhopala belphoebe","White-ringed Oakblue"],["Callerebia dibangensis","Bright-eyed Argus"],["Celaenorrhinus munda","Himalayan Spotted Flat"],["Graphium mandarinus","Spectacle Swordtail"],["Acupicta delicatum","Dark Tinsel"],["Choaspes stigmata","Branded Awlking"],["Losaria coon","Common Clubtail"],["Calinaga gautama","Elongated Freak"],["Lethe goalpara","Large Goldenfork"],["Parnassius epaphus","Common Red Apollo"],["Oriens concinna","Sahyadri Dartlet"],["Apostictopterus fuliginosus","Giant Hopper"],["Celaenorrhinus plagifera","Large-spotted Flat"],["Creteus cyrina","Nonsuch Palmer"],["Hidari bhawani","Veined Palmer"],["Drupadia scaeva","Blue Posy"],["Lethe gulnihal","Dull Forester"],["Lotongus sarala","Yellow-banded Palmer"],["Maneca bhotea","Slate Royal"],["Melanocyma faunula","Pallid Faun"],["Ochlodes brahma","Himalayan Darter"],["Oreolyce vardhana","Dusky Hedge Blue"],["Simiskina phalena","Broad-branded Brilliant"],["Stimula swinhoei","Pale Demon"],["Superflua deria","Indian White-line Hairstreak"],["Thauria aliris","Brandless Jungleking"],["Actinor radians","Veined Dart"],["Callenya melaena","Metallic Hedge Blue"],["Agriades jaloka","Jaloka Mountain Blue"],["Phengaris atroguttata","Great Spotted Blue"],["Caltoris tulsi","Purple Swift"],["Celaenorrhinus pero","Yellow-bordered Spotted Flat"],["Pseudocoladenia fatua","Ruddy Pied Flat"],["Tarucus indica","Indian Pierrot"],["Neptis namba","Namba Sailer"],["Neptis ananta","Yellow Sailer"],["Choaspes furcata","Hooked Awlking"],["Bullis buto","Baby Royal"],["Artipe eryx","Green Flash"],["Arhopala khamti","Luster Oakblue"],["Arhopala oenea","Lackluster Oakblue"],["Scobura cephala","Extra Forest Bob"],["Scobura cephaloides","Large Forest Bob"],["Scobura parawoolletti","Divided Forest Bob"],["Erionota torus","Rounded Palm-redeye"],["Allotinus unicolor","Plain Mottle"],["Lethe ramadeva","Single Silverstripe"],["Matapa druna","Grey-branded Redeye"],["Carcharodus alceae","Plain Marbled Skipper"],["Chitoria naga","Naga Emperor"],["Baltia butleri","Two-spotted Dwarf"],["Celaenorrhinus pyrrha","Double-spotted Flat"],["Celaenorrhinus ratna","Ratna Flat"],["Hestina persimilis","Siren"],["Telinga mestra","White-edged Bushbrown"],["Hasora leucospila","Violet Awl"],["Hasora khoda","Large Banded Awl"],["Aporia leucodice","Arrowhead Blackvein"],["Telinga lepcha","Lepcha Bushbrown"],["Euthalia eriphylae","Grey-tipped Baron"],["Euaspa ziha","White-spotted Hairstreak"],["Baracus septentrionum","Himalayan Hedge Hopper"],["Arhopala rama","Dark Oakblue"],["Rapala selira","Himalayan Red Flash"],["Lasippa viraja","Yellowjack Sailer"],["Curetis saronis","Saronis Sunbeam"],["Cheritrella truncipennis","Truncate Imperial"],["Bindahara phocides","Plane"],["Rapala refulgens","Refulgent Flash"],["Kirinia eversmanni","Yellow Wall"],["Baracus subditus","Yellow-striped Hedge Hopper"],["Arhopala dispar","Frosted Oakblue"],["Dilipa morgiana","Golden Emperor"],["Horaga viola","Brown Onyx"],["Carterocephalus avanti","Orange-spotted Mountain-Hopper"],["Capila phanaeus","Fulvous Dawnfly"],["Aulocera swaha","Common Satyr"],["Aulocera brahminus","Narrow-banded Satyr"],["Arhopala camdeo","Lilac Oakblue"],["Argynnis hybrida","Nilgiri Fritillary"],["Arhopala bazalus","Powdered Oakblue"],["Appias wardii","Sahyadri Albatross"],["Hyponephele pulchra","Beautiful Meadowbrown"],["Hyponephele davendra","White-ringed Meadowbrown"],["Callerebia kalinda","Scarce Mountain Argus"],["Albulina galathea","Large Green-underwing"],["Parnassius hardwickei","Common Blue Apollo"],["Limenitis trivena","Indian White Admiral"],["Argynnis kamala","Common Silverstripe"],["Laringa horsfieldii","Banded Dandy"],["Tongeia kala","Black Cupid"],["Neptis zaida","Pale Green Sailer"],["Neptis nata","Clear Sailer"],["Logania distanti","Dark Mottle"],["Chamunda chamunda","Olive Flat"],["Arhopala singla","Pointed Oakblue"],["Mota massyla","Saffron"],["Matapa purpurascens","Purple Branded Redeye"],["Lethe distans","Scarce Red Forester"],["Suasa lisides","Red Imperial"],["Mahathala ameria","Falcate Oakblue"],["Niphanda cymbia","Pointed Pierrot"],["Elymnias cottonis","Andaman Palmfly"],["Euthalia acontius","Andaman Baron"],["Neptis pseudovikasi","False Dingy Sailer"],["Neptis radha","Great Yellow Sailer"],["Pieris melete","Asian Green-veined White"],["Ypthima affectata","Affected Five-ring"],["Hyarotis microstictum","Small Brush Flitter"],["Hyarotis coorga","Kodagu Brush Flitter"],["Apharitis lilacinus","Lilac Silverline"],["Parantica pedonga","Pedong Tiger"],["Caprona alida","Alida Angle"],["Caprona agama","Spotted Angle"],["Flos asoka","Spangled Plushblue"],["Flos areste","Tailless Plushblue"],["Flos apidanus","Plain Plushblue"],["Flos adriana","Variegated Plushblue"],["Borbo bevani","Lesser Rice Swift"],["Helcyra hemina","White Emperor"],["Arhopala eumolphus","Green Oakblue"],["Ypthima striata","Striated Five-ring"],["Tajuria ister","Uncertain Royal"],["Satarupa zulla","Equal White Flat"],["Dercas lycorias","Plain Sulphur"],["Aeromachus stigmata","Veined Scrub Hopper"],["Satarupa gopala","Large White Flat"],["Neptis magadha","Spotted Sailer"],["Neptis harita","Dingiest Sailer"],["Coladenia agni","Brown Pied Flat"],["Charana mandarinus","Mandarin Blue"],["Capila jayadeva","Striped Dawnfly"],["Capila zennara","Pale Striped Dawnfly"],["Aeromachus kali","Blue-spotted Scrub Hopper"],["Pudicitia pholus","Spotted Redeye"],["Algia fasciata","Branded Yeoman"],["Limenitis rileyi","Tiger-mimic Admiral"],["Tongeia pseudozuthus","False Tibetan Cupid"],["Pyroneura margherita","Indian Yellow-veined Lancer"],["Prioneris philonome","Redspot Sawtooth"],["Athyma whitei","Blue-bordered Sergeant"],["Bhutanitis ludlowi","Mystical Bhutan Glory"],["Tanaecia cibaritis","Andaman Viscount"],["Enispe cycnus","Blue Caliph"],["Shijimia moorei","Bicolor Cupid"],["Lethe naga","Naga Treebrown"],["Matapa sasivarna","Black-veined Branded Redeye"],["Pithecops fulgens","Blue Quaker"],["Tagiades parra","Multi-spotted Snow Flat"],["Euthalia nara","Bronze Duke"],["Euthalia iva","Grand Duke"],["Polytremis discreta","White-fringed Swift"],["Tajuria jehana","Plains Blue Royal"],["Burara anadi","Plain Orange Awlet"],["Hesperia comma","Chequered Darter"],["Heliophorus moorei","Azure Sapphire"],["Byasa dasarada","Great Windmill"],["Rhaphicera moorei","Small Tawny Wall"],["Seseria sambara","Notched Seseria"],["Seseria dohertyi","Contiguous Seseria"],["Meandrusa payeni","Yellow Gorgon"],["Kallima albofasciata","White Oakleaf"],["Celatoxia albidisca","White-disc Hedge Blue"],["Arhopala bazaloides","Dusted Oakblue"],["Sinthusa virgo","Pale Spark"],["Heliophorus tamu","Powdery Green Sapphire"],["Papilio slateri","Blue-striped Mime"],["Nymphalis xanthomelas","Large Tortoiseshell"],["Lycaena phlaeas","Common Copper"],["Heliophorus oda","Eastern Blue Sapphire"],["Everes hugelii","Dusky Blue Cupid"],["Dacalana cotys","White-banded Royal"],["Colias erate","Eastern Pale Clouded Yellow"],["Arhopala paramuta","Hooked Oakblue"],["Arhopala atrax","Indian Oakblue"],["Calinaga brahma","Orange-backed Freak"],["Troides aeacus","Golden Birdwing"],["Papilio arcturus","Blue Peacock"],["Neope armandii","Yellow Labyrinth"],["Heliophorus kohimensis","Naga Sapphire"],["Charaxes narcaeus","Chinese Nawab"],["Charaxes dolon","Stately Nawab"],["Tarucus venosus","Veined Pierrot"],["Tarucus balkanicus","Little Tiger Pierrot"],["Abisara bifasciata","Double-banded Judy"],["Idea agamarschana","Myanmar Tree-Nymph"],["Neorina patria","White Owl"],["Stiboges nymphidia","Columbine"],["Polygonia c-album","Comma"],["Mycalesis gotama","Chinese Bushbrown"],["Tarucus waterstradti","Separate Pierrot"],["Abisara burnii","White-spotted Judy"],["Neptis jumbah","Chestnut-streaked Sailer"],["Papilio machaon","Common Yellow Swallowtail"],["Stichophthalma nurinissa","Nurinissa Junglequeen"],["Byasa polla","Crimson-bordered Windmill"],["Heliophorus indicus","Dark Sapphire"],["Athyma rufula","Andaman Sergeant"],["Spindasis syama","Club Silverline"],["Tajuria diaeus","Straight-lined Royal"],["Euthalia sahadeva","Green Duke"],["Pithecops corvus","Forest Quaker"],["Creon cleobis","Broad-tail Royal"],["Bassarona recta","Redtail Marquis"],["Libythea lepita","Common Beak"],["Thoressa sitala","Nilgiri Plain Ace"],["Lethe dura","Scarce Lilacfork"],["Miletus chinensis","Common Mottle"],["Elymnias nesaea","Tiger Palmfly"],["Ancema sudica","Sahyadri Silver Royal"],["Everes diporides","Himalayan Cupid"],["Danaus melanippus","White Tiger"],["Euthalia anosia","Grey Baron"],["Arhopala birmana","Myanmarese Bushblue"],["Liphyra brassolis","Moth Butterfly"],["Colotis protractus","Blue-spotted Arab"],["Aulocera saraswati","Striated Satyr"],["Charaxes schreiber","Blue Nawab"],["Poritia hewitsoni","Common Gem"],["Ypthima inica","Lesser Three-ring"],["Euploea andamanensis","Andaman Crow"],["Elymnias panthera","Studded Palmfly"],["Quedara basiflava","Yellow-base Flitter"],["Sumalia zulema","Scarce White Commodore"],["Pseudocoladenia fatih","West Himalayan Pied Flat"],["Pelopidas subochracea","Large Branded Swift"],["Pelopidas agna","Obscure Branded Swift"],["Hypolycaena nilgirica","Nilgiri Tit"],["Suastus minuta","Small Palm Bob"],["Sinthusa nasaka","Narrow Spark"],["Pithauria marsena","Branded Straw Ace"],["Odina decoratus","Zigzag Flat"],["Flos diardi","Bifid Plushblue"],["Dodona dipoea","Lesser Punch"],["Celaenorrhinus nigricans","Small-banded Flat"],["Aricia agestis","Orange-bordered Argus"],["Araschnia dohertyi","Manipur Map"],["Abisara echerius","Plum Judy"],["Arhopala amantes","Large Oakblue"],["Telinga misenus","Salmon-branded Bushbrown"],["Lethe sinorix","Tailed Red Forester"],["Hasora anura","Slate Awl"],["Darpa hanria","Hairy Angle"],["Curetis bulis","Bright Sunbeam"],["Catapaecilma subochrea","Yellow Tinsel"],["Athyma opalina","Hill Sergeant"],["Telinga heri","Large-eyed Bushbrown"],["Darpa pteria","Snowy Angle"],["Taractrocera ceramas","Tawny-spotted Grass Dart"],["Parnara spp.","Parnara Swift spp."],["Ypthima ceylonica","White Four-ring"],["Ypthima newara","Newar Three-ring"],["Potanthus spp.","Dart spp."],["Pithauria stramineipennis","Light Straw Ace"],["Hasora vitta","Plain Banded Awl"],["Discophora lepida","Southern Duffer"],["Lethe maitrya","Barred Woodbrown"],["Ypthima tabella","Sahyadri Baby Five-ring"],["Ypthima nikaea","West Himalayan Five-ring"],["Ypthima nareda","Large Three-ring"],["Ypthima singala","Sinhalese Five-ring"],["Prosotas pia","Additional Lineblue"],["Neope yama","Dusky Labyrinth"],["Nacaduba pavana","Small Four-Lineblue"],["Mycalesis adamsonii","Double-branded Bushbrown"],["Losaria rhodifer","Andaman Clubtail"],["Lethe sidonis","Common Woodbrown"],["Lethe mekara","Common Red Forester"],["Lethe isana","Common Forester"],["Lethe bhairava","Rusty Forester"],["Ionolyce helicon","Pointed Lineblue"],["Gangara lebadea","Banded Redeye"],["Euthalia patala","Grand Duchess"],["Chrysozephyrus birupa","Fawn Hairstreak"],["Chaetoprocta odata","Walnut Blue"],["Cephrenes acalle","Plain Palm-Dart"],["Burara gomata","Pale Green Awlet"],["Arhopala silhetensis","Sylhet Oakblue"],["Arhopala dodonaea","Pale Himalayan Oakblue"],["Neorina hilda","Yellow Owl"],["Celaenorrhinus putra","Restricted Spotted Flat"],["Ypthima sakra","Himalayan Five-ring"],["Pseudocoladenia festa","Dull Pied Flat"],["Prosotas noreia","White-tipped Lineblue"],["Pelopidas sinensis","Chinese Branded Swift"],["Orthomiella pontis","Straightwing Blue"],["Lethe scanda","Blue Forester"],["Parasarpa zayla","Bicolor Commodore"],["Papilio bootes","Tailed Redbreast"],["Bassarona durga","Blue Duke"],["Zographetus ogygia","Purple-spotted Flitter"],["Rapala lankana","Malabar Flash"],["Pelopidas assamensis","Great Swift"],["Parantica melaneus","Chocolate Tiger"],["Papilio bianor","Common Peacock"],["Pantoporia paraka","Perak Lascar"],["Lestranicus transpectus","White-banded Hedge Blue"],["Kallima knyvettii","Scarce Blue Oakleaf"],["Halpe zema","Zema Banded Ace"],["Euripus consimilis","Painted Courtesan"],["Delias descombesi","Red-spot Jezebel"],["Atrophaneura aidoneus","Lesser Batwing"],["Una usta","Singleton"],["Thoressa astigmata","Unbranded Ace"],["Taxila haquinus","Harlequin"],["Sephisa dichroa","Western Courtier"],["Rapala nissa","Common Flash"],["Polytremis lubricans","Contiguous Swift"],["Papilio mayo","Andaman Mormon"],["Neptis miah","Small Yellow Sailer"],["Neope pulaha","Veined Labyrinth"],["Neope bhadra","Tailed Labyrinth"],["Mymathyma chevana","Sergeant Emperor"],["Koruthaialos sindu","Shiny Velvet Bob"],["Koruthaialos rubecula","Changeable Velvet Bob"],["Graphium megarus","Spotted Zebra"],["Euthalia franciae","French Duke"],["Erionota thrax","Palm Redeye"],["Elymnias malelas","Spotted Palmfly"],["Delias berinda","Dark Jezebel"],["Chrysozephyrus syla","Silver Hairstreak"],["Celaenorrhinus dhanada","Yellow-banded Flat"],["Celaenorrhinus aurivittata","Dark Yellow-banded Flat"],["Caltoris canaraica","Karwar Swift"],["Caleta roxus","Straight Pierrot"],["Cethosia cyane","Leopard Lacewing"],["Baoris unicolor","Black Paint-brush Swift"],["Baoris chapmani","Small Paint-brush Swift"],["Lethe margaritae","Bhutan Treebrown"],["Tajuria maculata","Spotted Royal"],["Spindasis rukmini","Khaki Silverline"],["Pieris brassicae","Large Cabbage White"],["Petrelaea dana","Dingy Lineblue"],["Parasarpa dudu","White Commodore"],["Nacaduba beroe","Opaque Six-Lineblue"],["Lobocla liliana","Marbled Flat"],["Iton semamora","Common Wight"],["Horaga onyx","Common Onyx"],["Euploea sylvester","Double-branded Crow"],["Euploea midamus","Blue-spotted Crow"],["Euaspa milionia","Water Hairstreak"],["Elymnias hypermnestra","Common Palmfly"],["Curetis siva","Shiva Sunbeam"],["Celatoxia marginata","Margined Hedge Blue"],["Burara harisa","Harisa Orange Awlet"],["Arhopala ganesa","Tailless Bushblue"],["Araotes lapithis","Witch"],["Ypthima asterope","Common Three-ring"],["Bhagadatta austenia","Grey Commodore"],["Ctenoptilum vasava","Tawny Angle"],["Dacalana penicilligera","Double-tufted Royal"],["Eurema simulatrix","Changeable Grass Yellow"],["Everes lacturnus","Orange-crowned Cupid"],["Issoria issaea","Himalayan Queen Fritillary"],["Lasiommata schakra","Common Wall"],["Lethe verma","Straight-banded Treebrown"],["Lethe vindhya","Black Forester"],["Stichophthalma camadeva","Northern Junglequeen"],["Zipaetis scylax","Dark Catseye"],["Zipaetis saitis","Banded Catseye"],["Athyma zeroca","Small Staff Sergeant"],["Athyma kanwa","Dot-dash Sergeant"],["Arhopala curiosa","Curious Oakblue"],["Ancema ctesia","Bi-spot Royal"],["Abisara chela","Spot Judy"],["Tajuria melastigma","Branded Royal"],["Neptis nycteus","Hockeystick Sailer"],["Jamides alecto","Metallic Cerulean"],["Gomalia elma","African Marbled Skipper"],["Gerosis sinica","White Yellow-breasted Flat"],["Gerosis bhagava","Common Yellow-breasted Flat"],["Burara vasutana","Green Awlet"],["Troides helena","Common Birdwing"],["Tarucus nara","Striped Pierrot"],["Tarucus callinara","Spotted Pierrot"],["Tanaecia jahnu","Plain Earl"],["Tagiades japetus","Common Snow Flat"],["Suada swerga","Grass Bob"],["Stibochiona nicea","Popinjay"],["Spindasis nipalicus","Silver-grey Silverline"],["Scobura isota","Khasi Forest Bob"],["Rhinopalpa polynice","Wizard"],["Rapala dieneces","Scarlet Flash"],["Prothoe franck","Blue Begum"],["Oriens gola","Common Dartlet"],["Neptis sappho","Common Glider"],["Matapa cresta","Fringed Branded Redeye"],["Lycaena panava","White-bordered Copper"],["Lethe confusa","Banded Treebrown"],["Lethe chandica","Angled Red Forester"],["Jamides pura","White Cerulean"],["Jamides elpis","Glistening Cerulean"],["Dodona durga","Common Punch"],["Colotis vestalis","White Arab"],["Colias fieldii","Dark Clouded Yellow"],["Papilio elephenor","Yellow-crested Spangle"],["Charaxes marmax","Yellow Rajah"],["Pirdana major","Himalayan Green-striped Palmer"],["Charaxes aristogiton","Scarce Tawny Rajah"],["Bassarona teuta","Banded Marquis"],["Aporia agathon","Great Blackvein"],["Parantirrhoea marshalli","Travancore Evening Brown"],["Vagrans egista","Vagrant"],["Thoressa cerata","Northern Spotted Ace"],["Pareronia avatar","Pale Wanderer"],["Jamides caerulea","Royal Cerulean"],["Gonepteryx rhamni","Common Brimstone"],["Freyeria trochylus","Orange-spotted Grass Jewel"],["Delias acalis","Redbreast Jezebel"],["Atrophaneura varuna","Common Batwing"],["Eurema andersonii","One-spot Grass Yellow"],["Mycalesis igilia","Sahyadri Long-branded Bushbrown"],["Dodona ouida","Mixed Punch"],["Dodona eugenes","Tailed Punch"],["Zinaspa todara","Silver-streaked Acacia Blue"],["Chersonesia intermedia","Wavy Maplet"],["Burara oedipodea","Branded Orange Awlet"],["Burara amara","Small Green Awlet"],["Astictopterus jama","Forest Hopper"],["Arnetta vindhiana","Vindhyan Bob"],["Arnetta atkinsoni","Black-tufted Bob"],["Acytolepis lilacea","Lilac Hedge Blue"],["Mycalesis visala","Long-branded Bushbrown"],["Mycalesis perseus","Common Bushbrown"],["Telinga nicotia","Bright-eye Bushbrown"],["Telinga malsarida","Plain Bushbrown"],["Mycalesis intermedia","Intermediate Bushbrown"],["Lexias dirtea","Dark Archduke"],["Thoressa evershedi","Travancore Tawny Ace"],["Prioneris sita","Painted Sawtooth"],["Nacaduba hermus","Pale Four-Lineblue"],["Mycalesis junonia","Glad-eye Bushbrown"],["Parantica nilgiriensis","Nilgiri Tiger"],["Tanaecia julii","Common Earl"],["Spindasis ictis","Common Shot Silverline"],["Pieris canidia","Asian Cabbage White"],["Mycalesis francisca","Lilacine Bushbrown"],["Sephisa chandra","Eastern Courtier"],["Ragadia crisilda","White-striped Ringlet"],["Charaxes arja","Pallid Nawab"],["Neptis narayana","Broadstick Sailer"],["Telinga malsara","White-line Bushbrown"],["Enispe euthymius","Red Caliph"],["Elymnias patna","Blue-striped Palmfly"],["Hypolycaena kina","Blue Tit"],["Celastrina lavendularis","Plain Hedge Blue"],["Athyma jina","Bhutan Sergeant"],["Athyma cama","Orange Staff Sergeant"],["Allotinus drumila","Crenulate Mottle"],["Udara dilecta","Pale Hedge Blue"],["Rohana parvata","Brown Prince"],["Penthema lisarda","Yellow Kaiser"],["Mooreana trichoneura","Yellow Flat"],["Meandrusa lachinus","Brown Gorgon"],["Lethe sura","Lilacfork"],["Lethe nicetas","Yellow Woodbrown"],["Dichorragia nesimachus","Constable"],["Charaxes delphis","Jewelled Nawab"],["Appias libythea","Western Striped Albatross"],["Appias lalage","Spot Puffin"],["Cupitha purreea","Wax Dart"],["Cirrochroa aoris","Large Yeoman"],["Chilades parrhasius","Small Cupid"],["Argynnis hyperbius","Tropical Fritillary"],["Abisara fylla","Dark Judy"],["Lethe visrava","White-edged Woodbrown"],["Abisara neophron","Tailed Judy"],["Dodona adonira","Striped Punch"],["Lethe baladeva","Treble Silverstripe"],["Neptis sankara","Broad-banded Sailer"],["Hebomoia glaucippe","Great Orange-tip"],["Zographetus satwa","Purple and Gold Flitter"],["Udara akasa","White Hedge Blue"],["Telicota bambusae","Dark Palm-Dart"],["Symbrenthia niphanda","Bluetail Jester"],["Symbrenthia lilaea","Northern Common Jester"],["Symbrenthia hypselis","Spotted Jester"],["Symbrenthia brabira","Yellow Jester"],["Spindasis schistacea","Plumbeous Silverline"],["Doleschallia bisaltide","Autumn Leaf"],["Ancistroides nigrita","Chocolate Demon"],["Zizina otis","Lesser Grass Blue"],["Salanoemia sala","Maculate Lancer"],["Remelana jangala","Chocolate Royal"],["Pelopidas mathias","Small Branded Swift"],["Lebadea martha","Knight"],["Halpe porus","Bispot Banded Ace"],["Elymnias penanga","Pointed Palmfly"],["Curetis acuta","Acute Sunbeam"],["Athyma selenophora","Staff Sergeant"],["Athyma pravara","Unbroken Sergeant"],["Ancema blanka","Silver Royal"],["Catochrysops panormus","Silver Forget-me-not"],["Arhopala abseus","Aberrant Oakblue"],["Leptosia nina","Psyche"],["Eurema brigitta","Small Grass Yellow"],["Catopsilia pyranthe","Mottled Emigrant"],["Polytremis eltola","Yellow-spot Swift"],["Papilio liomedon","Malabar Banded Swallowtail"],["Pachliopta pandiyana","Malabar Rose"],["Melanitis zitenius","Great Evening Brown"],["Euthalia telchinia","Blue Baron"],["Dodona egeon","Orange Punch"],["Delias pasithoe","Red-base Jezebel"],["Delias hyparete","Painted Jezebel"],["Delias belladonna","Hill Jezebel"],["Delias agostina","Yellow Jezebel"],["Cupha erymanthis","Rustic"],["Cirrochroa thais","Tamil Yeoman"],["Byasa polyeuctes","Common Windmill"],["Byasa latreillei","Rose Windmill"],["Borbo cinnara","Rice Swift"],["Baoris farri","Complete Paint-brush Swift"],["Argynnis childreni","Large Silverstripe"],["Aglais caschmirensis","Indian Tortoiseshell"],["Hestinalis nama","Circe"],["Heliophorus brahma","Golden Sapphire"],["Halpe hindu","Sahyadri Banded Ace"],["Halpe filda","Absent Ace"],["Ixias pyrene","Yellow Orange-tip"],["Lethe latiaris","Pale Forester"],["Orinoma damaris","Tigerbrown"],["Notocrypta feisthamelii","Spotted Demon"],["Pontia daplidice","Bath White"],["Pedesta pandita","Brown Bush Bob"],["Papilio krishna","Krishna Peacock"],["Pedesta masuriensis","Mussoorie Bush Bob"],["Prosotas aluta","Banded Lineblue"],["Taractrocera maevius","Grey-veined Grass Dart"],["Pseudocoladenia dan","Fulvous Pied Flat"],["Prosotas nora","Common Lineblue"],["Pelopidas conjuncta","Conjoined Swift"],["Notocrypta curvifascia","Restricted Demon"],["Junonia lemonias","Lemon Pansy"],["Castalius rosimon","Common Pierrot"],["Azanus jesous","African Babul Blue"],["Arnetta mercara","Coorg Forest Hopper"],["Mycalesis mineus","Dark-branded Bushbrown"],["Eurema hecabe","Common Grass Yellow"],["Caltoris kumara","Blank Swift"],["Ariadne merione","Common Castor"],["Moduza procris","Commander"],["Notocrypta paralysos","Common Banded Demon"],["Catopsilia pomona","Lemon Emigrant"],["Ypthima huebneri","Common Four-ring"],["Oriens goloides","Smaller Dartlet"],["Euploea klugii","King Crow"],["Phaedyma columella","Short-banded Sailer"],["Byblia ilithyia","Joker"],["Eurema blanda","Three-spot Grass Yellow"],["Papilio crino","Common Banded Peacock"],["Bhutanitis lidderdalii","Bhutan Glory"],["Neocheritra fabronia","Pale Grand Imperial"],["Charaxes agrarius","Anomalous Nawab"],["Tirumala limniace","Blue Tiger"],["Pachliopta hector","Crimson Rose"],["Danaus chrysippus","Plain Tiger"],["Talicada nyseus","Red Pierrot"],["Tagiades menaka","Spotted Snow Flat"],["Pseudergolis wedah","Tabby"],["Kallima inachus","Orange Oakleaf"],["Elymnias vasudeva","Jezebel Palmfly"],["Colotis amata","Small Salmon Arab"],["Euploea mulciber","Striped Blue Crow"],["Melanitis phedima","Dark Evening Brown"],["Papilio paradoxa","Great Blue Mime"],["Prioneris thestylis","Spotted Sawtooth"],["Papilio protenor","Spangle"],["Papilio nephelus","Yellow Helen"],["Papilio epycides","Lesser Mime"],["Papilio dravidarum","Malabar Raven"],["Papilio alcmenor","Redbreast"],["Heliophorus epicles","Purple Sapphire"],["Graphium xenocles","Great Zebra"],["Graphium macareus","Lesser Zebra"],["Graphium chironides","Veined Jay"],["Athyma asura","Studded Sergeant"],["Appias olferna","Eastern Striped Albatross"],["Baracus hampsoni","Malabar Hedge Hopper"],["Azanus ubaldus","Bright Babul Blue"],["Argynnis castetsi","Palni Fritillary"],["Colias nilagiriensis","Nilgiri Clouded Yellow"],["Idea malabarica","Malabar Tree-Nymph"],["Ochus subvittatus","Tiger Hopper"],["Junonia hierta","Yellow Pansy"],["Yasoda tripunctata","Branded Yamfly"],["Vanessa cardui","Painted Lady"],["Rapala pheretima","Copper Flash"],["Psolos fuligo","Dusky Partwing"],["Pratapa deva","White Tufted Royal"],["Parantica aglea","Glassy Tiger"],["Megisba malaya","Malayan"],["Ixias marianne","White Orange-tip"],["Heliophorus sena","Sorrel Sapphire"],["Hasora taminatus","White-banded Awl"],["Euthalia alpheda","Streaked Baron"],["Euripus nyctelius","Courtesan"],["Euploea radamanthus","Magpie Crow"],["Euploea doubledayi","Striped Black Crow"],["Euploea algea","Long-branded Blue Crow"],["Discophora sondaica","Common Duffer"],["Danaus genutia","Striped Tiger"],["Colotis fausta","Large Salmon Arab"],["Chilades pandava","Plains Cupid"],["Charaxes psaphon","Plain Tawny Rajah"],["Charaxes moori","Malayan Nawab"],["Celaenorrhinus asmara","White-banded Flat"],["Arhopala fulla","Spotless Oakblue"],["Arhopala ammonides","Little Cerulean Oakblue"],["Appias indra","Plain Puffin"],["Colotis aurora","Plain Orange-tip"],["Cheritra freja","Common Imperial"],["Prosotas bhutea","Bhutia Lineblue"],["Arhopala perimuta","Yellowdisc Tailless Oakblue"],["Elymnias obnubila","Chestnut Palmfly"],["Aemona amathusia","Yellow Dryad"],["Ticherra acte","Blue Imperial"],["Sumalia daraxa","Green Commodore"],["Sinthusa chandrana","Broad Spark"],["Parantica sita","Chestnut Tiger"],["Neurosigma siva","Panther"],["Herona marathus","Pasha"],["Faunis canens","Common Faun"],["Euthalia phemius","White-edged Blue Baron"],["Euthalia monina","Powdered Baron"],["Dodona longicaudata","Long-tailed Punch"],["Sebastonyma dolopia","Tufted Ace"],["Sarangesa purendra","Spotted Small Flat"],["Sarangesa dasahara","Common Small Flat"],["Gerosis phisara","Dusky Yellow-breast Flat"],["Celaenorrhinus leucocera","Common Spotted Flat"],["Celaenorrhinus fusca","Dusky Spotted Flat"],["Celaenorrhinus ambareesa","Dakhan Spotted Flat"],["Caprona ransonnettii","Golden Angle"],["Neopithecops zalmora","Common Quaker"],["Tarucus ananda","Dark Pierrot"],["Tagiades litigiosa","Water Snow Flat"],["Mycalesis anaxias","White-bar Bushbrown"],["Lexias cyanipardus","Great Archduke"],["Lethe drypetis","Tamil Treebrown"],["Iraota timoleon","Silverstreak Blue"],["Athyma inara","Color Sergeant"],["Athyma perius","Common Sergeant"],["Hypolycaena erylus","Common Tit"],["Papilio helenus","Red Helen"],["Thoressa honorei","Sahyadri Orange Ace"],["Caleta elna","Elbowed Pierrot"],["Amathuxidia amythaon","Koh-i-Noor"],["Virachola perse","Large Guava Blue"],["Vindula erota","Cruiser"],["Spindasis lohita","Long-banded Silverline"],["Rapala varuna","Indigo Flash"],["Charaxes kahruba","Variegated Rajah"],["Acraea issoria","Yellow Coster"],["Ampittia dioscorides","Bush Hopper"],["Nacaduba pactolus","Large Four-Lineblue"],["Arhopala alea","Sahyadri Rosy Oakblue"],["Aeromachus dubius","Dingy Scrub Hopper"],["Halpemorpha hyrtacus","White-branded Ace"],["Telinga oculus","Red-disc Bushbrown"],["Telinga adolphei","Red-eye Bushbrown"],["Ypthima chenui","Nilgiri Four-ring"],["Ypthima ypthimoides","Palni Four-ring"],["Prosotas dubiosa","Tailless Lineblue"],["Anthene lycaenina","Pointed Ciliate Blue"],["Zizeeria karsandra","Dark Grass Blue"],["Virachola isocrates","Common Guava Blue"],["Rapala manea","Slate Flash"],["Eurema laeta","Spotless Grass Yellow"],["Colotis danae","Crimson-tip"],["Catapaecilma major","Common Tinsel"],["Calinaga buddha","Orange-breasted Freak"],["Caleta decidia","Angled Pierrot"],["Bindahara moorei","Blue-bordered Plane"],["Belenois aurota","Pioneer"],["Appias albina","Common Albatross"],["Mimathyma ambica","Indian Purple Emperor"],["Amblypodia anita","Purple Leaf Blue"],["Elymnias caudata","Tailed Palmfly"],["Udaspes folus","Grass Demon"],["Troides minos","Sahyadri Birdwing"],["Telicota colon","Pale Palm-Dart"],["Tapena thwaitesi","Black Angle"],["Tagiades gana","Suffused Snow Flat"],["Spindasis vulcanus","Common Silverline"],["Spialia galba","Indian Grizzled Skipper"],["Pseudozizeeria maha","Pale Grass Blue"],["Phalanta phalantha","Common Leopard"],["Pantoporia hordonia","Common Lascar"],["Pareronia ceylanica","Dark Wanderer"],["Papilio polytes","Common Mormon"],["Papilio demoleus","Lime Butterfly"],["Papilio clytia","Common Mime"],["Papilio agestor","Tawny Mime"],["Matapa aria","Common Branded Redeye"],["Loxura atymnus","Yamfly"],["Lethe rohria","Common Treebrown"],["Lamproptera meges","Green Dragontail"],["Lamproptera curius","White Dragontail"],["Lampides boeticus","Pea Blue"],["Kaniska canace","Blue Admiral"],["Junonia orithya","Blue Pansy"],["Junonia iphita","Chocolate Pansy"],["Hyarotis adrastus","Tree Flitter"],["Hasora badra","Common Awl"],["Graphium nomius","Spot Swordtail"],["Graphium doson","Common Jay"],["Gangara thyrsis","Giant Redeye"],["Euthalia lubentina","Gaudy Baron"],["Euthalia aconthea","Baron"],["Euchrysops cnejus","Gram Blue"],["Elymnias peali","Brahmaputra Palmfly"],["Discolampa ethion","Banded Blue Pierrot"],["Curetis thetis","Indian Sunbeam"],["Colotis etrida","Little Orange-tip"],["Coladenia indrani","Tricolor Pied Flat"],["Hypolycaena othona","Orchid Tit"],["Chersonesia risa","Common Maplet"],["Charaxes eudamippus","Great Nawab"],["Catochrysops strabo","Forget-me-not"],["Rachana jalindra","Banded Royal"],["Jamides bochus","Dark Cerulean"],["Graphium cloanthus","Glassy Bluebottle"],["Delias eucharis","Indian Jezebel"],["Cepora nerissa","Common Gull"],["Hasora chromus","Common Banded Awl"],["Bibasis sena","Orangetail Awl"],["Rohana parisatis","Black Prince"],["Parthenos sylvia","Clipper"],["Libythea myrrha","Club Beak"],["Symphaedra nais","Baronet"],["Cyrestis thyodamas","Map Butterfly"],["Charaxes solon","Black Rajah"],["Cethosia biblis","Red Lacewing"],["Auzakia danava","Commodore"],["Ariadne ariadne","Angled Castor"],["Aeromachus pygmaeus","Pygmy Scrub Hopper"],["Spalgis epeus","Apefly"],["Thaumantis diores","Jungleglory"],["Zeltus amasa","Fluffy Tit"],["Tanaecia lepidea","Grey Count"],["Tanaecia cocytus","Lavender Count"],["Surendra quercetorum","Common Acacia Blue"],["Spindasis abnormis","Abnormal Silverline"],["Prosotas lutea","Brown Lineblue"],["Papilio paris","Paris Peacock"],["Papilio memnon","Great Mormon"],["Papilio castor","Common Raven"],["Papilio buddha","Malabar Banded Peacock"],["Pachliopta aristolochiae","Common Rose"],["Odontoptilum angulata","Chestnut Angle"],["Melanitis leda","Common Evening Brown"],["Lethe europa","Bamboo Treebrown"],["Leptotes plinius","Zebra Blue"],["Junonia atlites","Grey Pansy"],["Junonia almana","Peacock Pansy"],["Hypolimnas bolina","Great Eggfly"],["Graphium eurypylus","Great Jay"],["Graphium eurous","Six-bar Swordtail"],["Graphium aristeus","Chain Swordtail"],["Graphium antiphates","Five-bar Swordtail"],["Graphium agetes","Four-bar Swordtail"],["Gandaca harina","Tree Yellow"],["Faunis eumeus","Large Faun"],["Euploea core","Common Crow"],["Ethope himachala","Dusky Diadem"],["Dophla evelina","Redspot Duke"],["Dercas verhuelli","Tailed Sulphur"],["Cyrestis cocles","Marbled Map Butterfly"],["Cirrochroa tyche","Common Yeoman"],["Chilades lajus","Lime Blue"],["Charaxes bernardus","Tawny Rajah"],["Cethosia mahratta","Sahyadri Lacewing"],["Burara jaina","Orange Awlet"],["Arhopala centaurus","Centaur Oakblue"],["Appias lyncida","Chocolate Albatross"],["Appias galba","Indian Orange Albatross"],["Anthene emolus","Common Ciliate Blue"],["Acytolepis puspa","Common Hedge Blue"],["Abrota ganga","Sergeant-major"],["Freyeria putli","Black-spotted Grass Jewel"],["Symbrenthia silana","Scarce Jester"],["Kallima horsfieldii","Sahyadri Blue Oakleaf"],["Zizula hylax","Tiny Grass Blue"],["Rapala iarbus","Common Red Flash"],["Jamides celeno","Common Cerulean"],["Graphium sarpedon","Common Bluebottle"],["Zesius chrysomallus","Redspot"],["Ypthima baldus","Common Five-ring"],["Tirumala septentrionis","Dark Blue Tiger"],["Thaduka multicaudata","Many-tailed Oakblue"],["Tajuria cippus","Peacock Royal"],["Suastus gremius","Oriental Palm Bob"],["Rathinda amor","Monkey Puzzle"],["Phalanta alcippe","Small Leopard"],["Pareronia hippia","Indian Wanderer"],["Orsotriaena medus","Medus Brown (=Nigger)"],["Neptis hylas","Common Sailer"],["Nacaduba kurava","Transparent Six-Lineblue"],["Iambrix salsala","Chestnut Bob"],["Graphium agamemnon","Tailed Jay"],["Athyma ranga","Blackvein Sergeant"],["Charaxes bharata","Indian Nawab"],["Deudorix epijarbas","Cornelian"],["Acraea terpsicore","Tawny Coster"],["Vanessa indica","Indian Red Admiral"],["Choaspes benjaminii","Indian Awlking"],["Zemeros flegyas","Punchinello"],["Cepora nadina","Lesser Gull"],["Taraka hamada","Forest Pierrot"],["Badamia exclamationis","Brown Awl"],["Papilio polymnestor","Blue Mormon"],["Hypolimnas misippus","Danaid Eggfly"]],Nr={synoptic:Or,ifb:Lr},Mr="BBMCountsDB",fa="userDetailsStore";function ti(){return new Promise((a,e)=>{const t=indexedDB.open(Mr,2);t.onerror=i=>{e("Error opening database")},t.onsuccess=i=>{const n=i.target.result;a(n)},t.onupgradeneeded=i=>{i.target.result.createObjectStore(fa,{keyPath:"id",autoIncrement:!0})}})}function Fr(a){return ti().then(e=>{const{id:t,...i}=a,n=e.transaction([fa],"readwrite"),r=n.objectStore(fa),s=r.getAll();let o=!0;return s.onsuccess=u=>{u.target.result.forEach(d=>{JSON.stringify(d)==JSON.stringify(i)?o=!1:r.delete(d.id)}),o&&r.put(i)},n.complete})}function Gr(){return ti().then(a=>new Promise((e,t)=>{const r=a.transaction([fa],"readonly").objectStore(fa).getAll();r.onsuccess=s=>{const o=s.target.result;e(o[0])},r.onerror=s=>{t("Error retrieving user details")}}))}const Hr="BBMCountsDBForms",D="FormStore";function jr(){return new Promise((a,e)=>{const t=indexedDB.open(Hr,1);t.onerror=i=>{e("Error opening database")},t.onsuccess=i=>{const n=i.target.result;a(n)},t.onupgradeneeded=i=>{i.target.result.createObjectStore(D,{keyPath:"id",autoIncrement:!1})}})}async function nt(a){const e=await jr();if(a.live)try{const t={id:new Date().getTime(),data:JSON.stringify(a)};await re(e,t)}catch(t){throw console.log(t),new Error(`Error storing data in ${D}`)}else{const{id:t,...i}=a,n={id:t,data:JSON.stringify(i)},o=await e.transaction([D],"readonly").objectStore(D).get(a.id);o.onsuccess=async u=>{if(u.target.result){const d=["latitude","longitude","coordinates","location","date","start_time"],l=JSON.parse(u.target.result.data);if(d.every(h=>a[h]===l[h])){if(a.status!==l.status||a.validated!==l.validated)try{const h=e.transaction([D],"readwrite");await h.objectStore(D).put(n),await h.complete}catch{throw new Error(`Error updating data in ${D}`)}}else try{await re(e,n)}catch{throw new Error(`Error storing data in ${D}`)}}else try{await re(e,n)}catch{throw new Error(`Error storing data in ${D}`)}}}}async function re(a,e){const t=a.transaction([D],"readwrite");await t.objectStore(D).put(e),await t.complete}const Ir="BBMCountsCurrentForm",P="CurrentForm";function Ne(){return new Promise((a,e)=>{const t=indexedDB.open(Ir,1);t.onerror=i=>{e("Error opening database")},t.onsuccess=i=>{const n=i.target.result;a(n)},t.onupgradeneeded=i=>{i.target.result.createObjectStore(P,{keyPath:"id",autoIncrement:!1})}})}async function Wr(a){try{const n=(await Ne(P)).transaction([P],"readwrite").objectStore(P).put(a);return new Promise((r,s)=>{n.onsuccess=o=>{r()},n.onerror=o=>{s(`Error storing data in ${P}`)}})}catch(e){throw new Error(`Error opening database: ${e}`)}}async function zr(){try{const t=(await Ne(P)).transaction([P],"readonly").objectStore(P),i=t.get(1),n=t.openCursor(null,"prev");return new Promise((r,s)=>{n.onsuccess=o=>{const u=o.target.result;if(u){const d=u.value;r(d)}else r(null)},n.onerror=o=>{s(`Error retrieving data from ${P}`)}})}catch(a){throw new Error(`Error opening database: ${a}`)}}async function Yr(){try{const i=(await Ne(P)).transaction([P],"readwrite").objectStore(P).clear();return new Promise((n,r)=>{i.onsuccess=s=>{n()},i.onerror=s=>{r(`Error clearing data in ${P}`)}})}catch(a){throw new Error(`Error opening database: ${a}`)}}const Ur="BBMCountsCurrentSpecies",B="CurrentSpecies";function Me(){return new Promise((a,e)=>{const t=indexedDB.open(Ur,1);t.onerror=i=>{e("Error opening database")},t.onsuccess=i=>{const n=i.target.result;a(n)},t.onupgradeneeded=i=>{i.target.result.createObjectStore(B,{keyPath:"id",autoIncrement:!1})}})}async function Jr(a){try{const n=(await Me(B)).transaction([B],"readwrite").objectStore(B).put(a);return new Promise((r,s)=>{n.onsuccess=o=>{r()},n.onerror=o=>{s(`Error storing data in ${B}`)}})}catch(e){throw new Error(`Error opening database: ${e}`)}}async function $r(){try{const t=(await Me(B)).transaction([B],"readonly").objectStore(B),i=t.get(1),n=t.openCursor(null,"prev");return new Promise((r,s)=>{n.onsuccess=o=>{const u=o.target.result;if(u){const d=u.value;r(d)}else r(null)},n.onerror=o=>{s(`Error retrieving data from ${B}`)}})}catch(a){throw new Error(`Error opening database: ${a}`)}}async function rt(){try{const i=(await Me(B)).transaction([B],"readwrite").objectStore(B).clear();return new Promise((n,r)=>{i.onsuccess=s=>{n()},i.onerror=s=>{r(`Error clearing data in ${B}`)}})}catch(a){throw new Error(`Error opening database: ${a}`)}}const Vr="BBMCountsCurrentSpeciesList",T="CurrentSpeciesList";function Fe(){return new Promise((a,e)=>{const t=indexedDB.open(Vr,1);t.onerror=i=>{e("Error opening database")},t.onsuccess=i=>{const n=i.target.result;a(n)},t.onupgradeneeded=i=>{i.target.result.createObjectStore(T,{keyPath:"id",autoIncrement:!1})}})}async function Kr(a){try{const n=(await Fe(T)).transaction([T],"readwrite").objectStore(T).put({id:1,data:JSON.stringify(a)});return new Promise((r,s)=>{n.onsuccess=o=>{r()},n.onerror=o=>{s(`Error storing data in ${T}`)}})}catch(e){throw new Error(`Error opening database: ${e}`)}}async function qr(){try{const t=(await Fe(T)).transaction([T],"readonly").objectStore(T),i=t.get(1),n=t.openCursor(null,"prev");return new Promise((r,s)=>{n.onsuccess=o=>{const u=o.target.result;if(u){const d=u.value;r(d)}else r(null)},n.onerror=o=>{s(`Error retrieving data from ${T}`)}})}catch(a){throw new Error(`Error opening database: ${a}`)}}async function Zr(){try{const i=(await Fe(T)).transaction([T],"readwrite").objectStore(T).clear();return new Promise((n,r)=>{i.onsuccess=s=>{n()},i.onerror=s=>{r(`Error clearing data in ${T}`)}})}catch(a){throw new Error(`Error opening database: ${a}`)}}const Xr={namespaced:!0,state:{quiestions:Rr,species_lists:Nr,scientific_names:[],common_names:[],user_details:{},user_data:[],form_data:{},current_species:{},species_list:[]},mutations:{INIT_NAMES(a){a.scientific_names=st(Object.values(a.species_lists).flat().map(e=>e[0])).sort(),a.common_names=st(Object.values(a.species_lists).flat().map(e=>e[1])).sort()},SET_USER_DETAILS(a,e){a.user_details=e},SET_USER_DATA(a,e){a.user_data=e},SET_CURRENT_FORM_DATA(a,e){a.form_data=e},SET_CURRENT_SPECIES_DATA(a,e){a.current_species=e},SET_SPECIES_LIST(a,e){a.species_list=e},ADD_SPECIES_TO_LIST(a){a.species_list.push(a.current_species),a.current_species={}}},actions:{init({dispatch:a}){a("initNames"),a("initUserDetails"),a("getCurrentFormData"),a("getCurrentSpeciesData"),a("getCurrentSpeciesList")},initNames({commit:a}){a("INIT_NAMES")},async submitForm({commit:a,dispatch:e},t){t.end_time==null&&(t.end_time=new Date().toLocaleTimeString());let i=await b.post("/api/butterfly-counts/submit-form",t);if(i)return e("setUserDetails",t),await nt({...t,live:!0}),await Yr(),await rt(),await Zr(),i.data},setUserDetails({commit:a},e){const t={name:e.name,affiliation:e.affiliation,phone:e.phone,email:e.email,team_members:e.team_members,open_access:e.open_access};a("SET_USER_DETAILS",t),Fr(t)},async initUserDetails({commit:a,dispatch:e}){const t=await Gr();t&&(a("SET_USER_DETAILS",t),e("getUserData"))},async getUserData({commit:a,state:e}){const t=await b.get("/api/user_count_forms",{params:e.user_details});t.data.length>0&&(a("SET_USER_DATA",t.data),t.data.forEach(async i=>{await nt(i)}))},async getCurrentFormData({commit:a}){const e=await zr();e&&a("SET_CURRENT_FORM_DATA",e)},async saveCurrentFormData({commit:a},e){await Wr({id:1,...e}),a("SET_CURRENT_FORM_DATA")},async getCurrentSpeciesData({commit:a}){const e=await $r();e&&a("SET_CURRENT_SPECIES_DATA",e)},async saveCurrentSpeciesData({commit:a},e){await Jr({id:1,...e}),a("SET_CURRENT_SPECIES_DATA",e)},async addCurrentSpeciesToList({commit:a}){a("ADD_SPECIES_TO_LIST"),await rt()},async getCurrentSpeciesList({commit:a}){const e=await qr();e&&a("SET_SPECIES_LIST",JSON.parse(e.data))},async saveCurrentSpeciesList({commit:a},e){await Kr(e),a("SET_SPECIES_LIST",e)}}};function st(a){return[...new Set(a)]}const ka={accuracy:50,repeats:10,refresh_rate:1e3},Qr=(a,e)=>{switch(e.code){case e.PERMISSION_DENIED:console.error("User denied the request for Geolocation.");break;case e.POSITION_UNAVAILABLE:console.error("Location information is unavailable.");break;case e.TIMEOUT:console.error("The request to get user location timed out.");break;case e.UNKNOWN_ERROR:console.error("An unknown error occurred.");break}console.error(e),a("SET_GETTING_COORDINATES",!1)},as={namespaced:!0,state:()=>({latitude:null,longitude:null,accuracy:null,start_time:null,points:[],gettingCoordinates:!1,shouldPersist:!1}),mutations:{SET_GETTING_COORDINATES(a,e){a.gettingCoordinates=e},SET_START_TIME(a,e){a.start_time=e},ADD_COORDINATES(a,e){a.points.push({timestamp:new Date(Date.now()).toLocaleString(),latitude:e.latitude,longitude:e.longitude,accuracy:e.accuracy});let t=a.points.reduce((i,n)=>i.accuracy<n.accuracy?i:n);a.latitude=t.latitude,a.longitude=t.longitude,a.accuracy=t.accuracy},INIT_POINTS(a){a.points=[]}},actions:{async getCurrentCoordinates({commit:a,state:e,dispatch:t}){(e.points.length==0||e.accuracy>ka.accuracy)&&await t("getCoordinates")},async getCoordinates({commit:a,state:e,dispatch:t}){return new Promise((i,n)=>{a("SET_GETTING_COORDINATES",!0),navigator.geolocation||(console.error("Geolocation is not supported by this browser."),n("Geolocation is not supported by this browser.")),navigator.geolocation.getCurrentPosition(r=>{a("SET_START_TIME",new Date),a("ADD_COORDINATES",r.coords),r.coords.accuracy<=ka.accuracy||e.points.length>=ka.repeats?a("SET_GETTING_COORDINATES",!1):setTimeout(()=>{t("getCoordinates")},ka.refresh_rate)},r=>Qr(a,r),{enableHighAccuracy:!0,timeout:1e4,maximumAge:0})})},init({commit:a}){a("SET_GETTING_COORDINATES",!1),a("ADD_COORDINATES",{latitude:null,longitude:null,accuracy:null}),a("INIT_POINTS")}}},es={namespaced:!0,state:{all_data:[],shouldPersist:!1},getters:{all_data(a){return a.all_data}},mutations:{SET_ALL_DATA(a,e){a.all_data=e},ADD_DATA(a,e){let{created_at:t,updated_at:i,...n}=e.data;a.all_data.push(n)},UPDATE_DATA(a,e){a.all_data.forEach((t,i)=>{t.id==e.id&&(a.all_data[i].title=e.title,a.all_data[i].link=e.link,a.all_data[i].resource_type=e.resource_type,a.all_data[i].description=e.description,a.all_data[i].tags=e.tags)})},REMOVE_DATA(a,e){let t=a.all_data.findIndex(i=>i.id===e);a.all_data.splice(t,1)}},actions:{async getAllData({commit:a}){try{const{data:e}=await b.get("/api/resources");a("SET_ALL_DATA",e)}catch({response:{data:e}}){console.error("error retreiving Resources")}},async store({commit:a},e){try{const{data:t}=await b.post("/api/store_resource",e);a("ADD_DATA",t)}catch({response:{data:t}}){console.error("error adding Resource")}},async update({commit:a},e){try{const{data:t}=await b.post(`/api/update_resource/${e.id}`,e);a("UPDATE_DATA",t.data)}catch({response:{data:t}}){console.error("error storing resource")}},async delete({commit:a},e){try{await b.delete(`/api/delete_resource/${e}`),a("REMOVE_DATA",e)}catch({response:{data:t}}){console.error("error deleting Resource")}}}},ts=[{id:1,name:"Poornaprajna S N",designation:"Student",district:"dakshina_kannada",state:"karnataka",coordinates:null,email:"poornaprajnasn@gmail.com",phone:"+918762528163",image:null,added_by:4,image_path:null},{id:2,name:"Vishal M. Makwana",designation:"Research Scholar in Zoology at M. K. Bhavnagar University",district:"bhavnagar",state:"gujarat",coordinates:"21.76845181199359, 72.14134400114737",email:"vishal.makwana98@gmail.com",phone:"+919099542090",image:null,added_by:4,image_path:null},{id:3,name:"Bhakti M. Mahadeshwar",designation:"Self Employed",district:"mumbai_city",state:"maharashtra",coordinates:null,email:"bluengreen.in@gmail.com",phone:"+918976604092",image:null,added_by:4,image_path:null},{id:4,name:"Niketan Ramesh Thakur",designation:"Friends Of Nature,Chirner Uran",district:"raigarh",state:"maharashtra",coordinates:null,email:"niketanthakur36@gmail.com",phone:"+919773198528",image:null,added_by:4,image_path:null},{id:5,name:"Gourav Kumar",designation:"Srishti Ganga Prahri Environment and Welfare Society",district:"bhagalpur",state:"bihar",coordinates:null,email:"gauravsinhaaa.1990@gmail.com",phone:"+919931824123",image:null,added_by:4,image_path:null},{id:6,name:"Prabhu Ram Prajapati",designation:"Rover Unit leader",district:"pali",state:"rajasthan",coordinates:null,email:"prabhuprajapati44@gmail.com",phone:"+919828340584",image:null,added_by:4,image_path:null},{id:7,name:"Vishnusankar S",designation:"ROAR",district:"virudunagar",state:"tamil_nadu",coordinates:null,email:"vishnusankar87@gmail.com",phone:"+919944211147",image:null,added_by:4,image_path:null},{id:8,name:"Chandan Kumar",designation:"Bird guide",district:"bhagalpur",state:"bihar",coordinates:null,email:"moryachandan735@gmail.com",phone:"+916204219650",image:null,added_by:4,image_path:null},{id:9,name:"Dr Akhilesh Kumar",designation:"Secretary, Indian Biodiversity conservation society Jhansi Uttar Pradesh India",district:"ambedkar_nagar",state:"uttar_pradesh",coordinates:null,email:"akhilesh.kumar958@gmail.com",phone:"+918542851535",image:null,added_by:4,image_path:null},{id:10,name:"Girikrishnan RG",designation:"College of veterinary and animal sciences, Pookode, Wayanad.",district:"wayanad",state:"kerala",coordinates:null,email:"girikrishnanrg2001@gmail.com",phone:"+917994132076",image:null,added_by:4,image_path:null},{id:11,name:"Dr. Yogesh Koli",designation:"My way journey organization and Sant Rawool Maharaj college Kudal",district:"sindhudurg",state:"maharashtra",coordinates:null,email:"dryjkoli@gmail.com",phone:"+919421224800",image:null,added_by:4,image_path:null},{id:12,name:"Dr. R. P. Jayasree",designation:"Medical doctor",district:"kollam",state:"kerala",coordinates:null,email:"dr.rpjayasree@gmail.com",phone:"+919446090720",image:null,added_by:4,image_path:null},{id:13,name:"Nibedita Ghosh",designation:"Assistant Teacher of Samaritan Mission School (High)",district:"haora",state:"west_bengal",coordinates:null,email:"info.nibeditaghosh@gmail.com",phone:"+918910429847",image:null,added_by:4,image_path:null},{id:14,name:"Anand Singh",designation:"Indian Biodiversity Conservation Society Jhansi",district:"allahabad",state:"uttar_pradesh",coordinates:null,email:"legendsince1998@gmail.com",phone:"+919450866146",image:null,added_by:4,image_path:null},{id:15,name:"Rahul Kala",designation:"Doon nature walks",district:"dehradun",state:"uttarakhand",coordinates:null,email:"rahulkala52@yahoo.com",phone:"+919837474630",image:null,added_by:4,image_path:null},{id:17,name:"Adil Khan",designation:"Business",district:"betul",state:"madhya_pradesh",coordinates:null,email:"adil871ak@gmail.com",phone:"+918085418088",image:null,added_by:4,image_path:null},{id:18,name:"Indaram Nageshwar Rao",designation:"Orugallu WildLife Society",district:"warangal_(r)",state:"telangana",coordinates:null,email:"ind_nag@yahoo.com",phone:"+919985549900",image:null,added_by:4,image_path:null},{id:19,name:"Karthick V S",designation:"Safety Manager",district:"pashchimi_singhbhum",state:"jharkhand",coordinates:null,email:"vskarthick1980@gmail.com",phone:"+917999258314",image:null,added_by:4,image_path:null},{id:21,name:"Akhter Hussain Najar",designation:"SEED",district:"-1",state:"jammu_&_kashmir",coordinates:null,email:"najariakhter@gmail.com",phone:"+919906690665",image:null,added_by:4,image_path:null},{id:22,name:"Hardik Bhammar",designation:"Hotel Bhammars (shiv wing)",district:"balangir",state:"odisha",coordinates:null,email:"hardik_bhammar@yahoo.com",phone:"+918763158406",image:null,added_by:4,image_path:null},{id:23,name:"Namitha Tarai",designation:"Butterfly Research Assistant",district:"visakhapatnam",state:"andhra_pradesh",coordinates:null,email:"namithatarai@gmail.com",phone:"+919110526052",image:null,added_by:4,image_path:null},{id:24,name:"Dr. Sonika Kushwaha",designation:"Wildlife Biologist / Indian Biodiversity Conservation Society",district:"jhansi",state:"uttar_pradesh",coordinates:null,email:"ibcsforall@gmail.com",phone:"+919452856288",image:null,added_by:4,image_path:null},{id:25,name:"Paul Pop",designation:"Wildlife Biologist",district:"ernakulam",state:"kerala",coordinates:null,email:"paulvpop@gmail.com",phone:"+919620163587",image:null,added_by:4,image_path:null},{id:26,name:"Sharan V",designation:"Rhopalocera and Odonata Association of Rajapalayam",district:"viluppuram",state:"tamil_nadu",coordinates:null,email:"sharan.avbgwork@gmail.com",phone:"+918248276767",image:null,added_by:4,image_path:null},{id:27,name:"Regin Ross",designation:"Canara Bank",district:"thrissur",state:"kerala",coordinates:null,email:"reginross@gmail.com",phone:"+919562355957",image:null,added_by:4,image_path:null},{id:28,name:"Regin Ross",designation:"Canara Bank",district:"kottayam",state:"kerala",coordinates:null,email:"reginross@gmail.com",phone:"+919562355957",image:null,added_by:4,image_path:null},{id:29,name:"Dr. Bavani Govindarajulu",designation:"Assistant Professor, Queen Mary's College, Chennai",district:"chennai",state:"tamil_nadu",coordinates:null,email:"bavaniqmc@gmail.com",phone:"+919884272036",image:null,added_by:4,image_path:null},{id:30,name:"Renu Kohli",designation:"College professor",district:"pali",state:"rajasthan",coordinates:null,email:"renukohli0302@gmail.com",phone:"+919602196359",image:null,added_by:4,image_path:null},{id:31,name:"Parth Jagani",designation:"Self Employed",district:"jaisalmer",state:"rajasthan",coordinates:null,email:"parthpj@gmail.com",phone:"+919636423198",image:null,added_by:4,image_path:null},{id:32,name:"Rahul Kumar",designation:"Bihar Paryawaran Sanrakshan Abhiyan (BIPSA)",district:"nalanda",state:"bihar",coordinates:null,email:"herprahul@gmail.com",phone:"+917544840244",image:null,added_by:4,image_path:null},{id:33,name:"Krishnaa Boro",designation:"Student",district:"udalguri",state:"assam",coordinates:null,email:"BOROKB152000@GMAIL.COM",phone:"+918473939126",image:null,added_by:4,image_path:null},{id:34,name:"Krishnaa Boro",designation:"Student",district:"kamrup_metropolitan",state:"assam",coordinates:null,email:"BOROKB152000@GMAIL.COM",phone:"+918473939126",image:null,added_by:4,image_path:null},{id:35,name:"Gaurav S. Soman.",designation:"Butterflies of Mulund",district:"mumbai_suburban",state:"maharashtra",coordinates:null,email:"gssoman85@gmail.com",phone:"+919158902155",image:null,added_by:4,image_path:null},{id:36,name:"Anand Pendharkar",designation:"Wildlife Biologist, CEO, SPROUTS",district:"mumbai_city",state:"maharashtra",coordinates:null,email:"sproutsonline@gmail.com",phone:"+919820140254",image:null,added_by:4,image_path:null},{id:37,name:"B. Divya",designation:"Zoo education officer, Indira Gandhi Zoological Park, Visakhapatnam",district:"vizianagaram",state:"andhra_pradesh",coordinates:null,email:"divyayadavbara@gmail.com",phone:"+917893632900",image:null,added_by:4,image_path:null},{id:38,name:"Shahsi Kumar",designation:"Green Hub Bhopal",district:"bhopal",state:"madhya_pradesh",coordinates:null,email:"shashi3604@gmail.com",phone:"+919507752581",image:null,added_by:4,image_path:null},{id:39,name:"Prerna",designation:"Tinsa Ecological Foundation",district:"raisen",state:"madhya_pradesh",coordinates:null,email:"tinsafoundation@gmail.com",phone:"+918209280218",image:null,added_by:4,image_path:null},{id:40,name:"Prerna",designation:"Tinsa Ecological Foundation",district:"bhopal",state:"madhya_pradesh",coordinates:null,email:"tinsafoundation@gmail.com",phone:"+918209280218",image:null,added_by:4,image_path:null},{id:41,name:"Karthick V S",designation:"Safety Manager",district:"saraikela-kharsawan",state:"jharkhand",coordinates:null,email:"vskarthick1980@gmail.com",phone:"+917999258314",image:null,added_by:4,image_path:null},{id:42,name:"Karthick V S",designation:"Safety Manager",district:"ranchi",state:"jharkhand",coordinates:null,email:"vskarthick1980@gmail.com",phone:"+917999258314",image:null,added_by:4,image_path:null},{id:43,name:"Deviprasad",designation:"Student",district:"dakshina_kannada",state:"karnataka",coordinates:null,email:"deviprasaddevi79@gmail.com",phone:"+917348856772",image:null,added_by:4,image_path:null},{id:44,name:"Ravindra Kumar Kanav",designation:"Wildlife Photographer",district:"jaipur",state:"rajasthan",coordinates:null,email:"kanavravindra@gmail.com",phone:"+917737116264",image:null,added_by:4,image_path:null},{id:45,name:"Gaurav Nigam",designation:"Block coordinator officer District Panchayat Indore",district:"barwani",state:"madhya_pradesh",coordinates:null,email:"gauravnigam9983@gmail.com",phone:"+919770768730",image:null,added_by:4,image_path:null},{id:46,name:"Gaurav Nigam",designation:"Block coordinator officer District Panchayat Indore",district:"indore",state:"madhya_pradesh",coordinates:null,email:"gauravnigam9983@gmail.com",phone:"+919770768730",image:null,added_by:4,image_path:null},{id:47,name:"Anuj Raina",designation:"Bird conservation society, Gujarat",district:"ahmadabad",state:"gujarat",coordinates:null,email:"anzraina@gmail.com",phone:"+919327025800",image:null,added_by:4,image_path:null},{id:48,name:"Anuj Raina",designation:"Bird conservation society, Gujarat",district:"gir_somnath",state:"gujarat",coordinates:null,email:"anzraina@gmail.com",phone:"+919327025800",image:null,added_by:4,image_path:null},{id:49,name:"Kiran Pardeshi",designation:"Teacher",district:"aurangabad",state:"maharashtra",coordinates:null,email:"kiranpardeshi13111979@gmail.com",phone:"+917058136055",image:null,added_by:4,image_path:null},{id:50,name:"Milind Sawdekar",designation:"Govt Service",district:"washim",state:"maharashtra",coordinates:null,email:"sawdekarmilind@gmail.com",phone:"+919860182282",image:null,added_by:4,image_path:null},{id:51,name:"Joseph M",designation:"Artist",district:"thiruvananthapuram",state:"kerala",coordinates:null,email:"chiefredearth@gmail.com",phone:"+919847538581",image:null,added_by:4,image_path:null},{id:52,name:"Yagnapathy Adari",designation:"Researcher for Andhra Pradesh Forest Department, Visakhapatnam division",district:"visakhapatnam",state:"andhra_pradesh",coordinates:null,email:"yagnapathy@gmail.com",phone:"+919515405972",image:null,added_by:4,image_path:null},{id:53,name:"Neha Shukla",designation:"Student",district:"neemuch",state:"madhya_pradesh",coordinates:null,email:"nehushukla108@gmail.com",phone:"+919713126962",image:null,added_by:4,image_path:null},{id:54,name:"Naaz Ghani",designation:"Independent journalist",district:"bangalore_rural",state:"karnataka",coordinates:null,email:"naazghani@gmail.com",phone:"+919741028602",image:null,added_by:4,image_path:null},{id:55,name:"Prem Kumar",designation:"Academic trainer in Pudiyador organization",district:"chennai",state:"tamil_nadu",coordinates:null,email:"premkumar.m31011994@gmail.com",phone:"+919600164805",image:null,added_by:4,image_path:null},{id:56,name:"Academic trainer in Pudiyador organization",designation:"Orugallu WildLife Society",district:"warangal_(u)",state:"telangana",coordinates:null,email:"ind_nag@yahoo.com",phone:"+919985549900",image:null,added_by:4,image_path:null},{id:57,name:"Rohidas Dagale",designation:"Owl Conservation Foundation",district:"ahmadnagar",state:"maharashtra",coordinates:null,email:"rohidasdagale2010@gmail.com",phone:"+99022168637",image:null,added_by:4,image_path:null},{id:58,name:"Rohidas Dagale",designation:"Owl Conservation Foundation",district:"palghar",state:"maharashtra",coordinates:null,email:"rohidasdagale2010@gmail.com",phone:"+919022168637",image:null,added_by:4,image_path:null},{id:59,name:"Rohidas Dagale",designation:"Owl Conservation Foundation",district:"thane",state:"maharashtra",coordinates:null,email:"rohidasdagale2010@gmail.com",phone:"+919022168637",image:null,added_by:4,image_path:null},{id:60,name:"Rohidas Dagale",designation:"Owl Conservation Foundation",district:"nashik",state:"maharashtra",coordinates:null,email:"rohidasdagale2010@gmail.com",phone:"+919022168637",image:null,added_by:4,image_path:null},{id:61,name:"Parul Daga",designation:"Ecological restoration practitioner",district:"south_west",state:"nct_of_delhi",coordinates:null,email:"parul27tiss@gmail.com",phone:"+919999861224",image:null,added_by:4,image_path:null},{id:62,name:"Balkrishna suresh devre",designation:"Vanyajeev sanrakshan sanstha, Jalgaon",district:"jalgaon",state:"maharashtra",coordinates:null,email:"balkrishnadevre1979@gmail.com",phone:"9028308365",image:null,added_by:6,image_path:null},{id:63,name:"Balkrishna suresh devre",designation:"Vanyajeev sanrakshan sanstha, Jalgaon",district:"nandurbar",state:"maharashtra",coordinates:null,email:"balkrishnadevre1979@gmail.com",phone:"9028308365",image:null,added_by:6,image_path:null},{id:64,name:"Balkrishna suresh devre",designation:"Vanyajeev sanrakshan sanstha, Jalgaon",district:"nashik",state:"maharashtra",coordinates:null,email:"balkrishnadevre1979@gmail.com",phone:"9028308365",image:null,added_by:6,image_path:null},{id:65,name:"GOKUL V",designation:"Salem Nature Club",district:"salem",state:"tamil_nadu",coordinates:null,email:"gokulthemarine@gmail.com",phone:"9486351524",image:null,added_by:6,image_path:null},{id:66,name:"Praveen Kumar",designation:"Rajasthan State Biodiversity Board",district:"jaipur",state:"rajasthan",coordinates:null,email:"nerdpraveen@gmail.com",phone:"7891808577",image:null,added_by:6,image_path:null},{id:67,name:"Lt Col Rohit Sharma",designation:"Govt of India",district:"buldana",state:"maharashtra",coordinates:null,email:"ronysasan75@gmail.com",phone:"9779170827",image:null,added_by:6,image_path:null},{id:68,name:"M.Rajesh",designation:"The American College",district:"madurai",state:"tamil_nadu",coordinates:null,email:"lillyrajesh@gmail.com",phone:"9443394233",image:null,added_by:6,image_path:null},{id:69,name:"Sandeep Kannan",designation:"Engineer naturalist",district:"south",state:"nct_of_delhi",coordinates:null,email:"sandeepkannan200@gmail.com",phone:"9990644056",image:null,added_by:6,image_path:null},{id:70,name:"Jayesh Janardan Patil",designation:"Vanyajeev sanrakshan bahuddeshiya sanstha , Nashik",district:"nashik",state:"maharashtra",coordinates:null,email:"patiljayesh025@gmail.com",phone:"8149330873",image:null,added_by:6,image_path:null},{id:71,name:"Surya Raghavendar",designation:"Kenneth Anderson Nature Society",district:"krishnagiri",state:"tamil_nadu",coordinates:null,email:"suryaraghavendar@gmail.com",phone:"9443882207",image:null,added_by:6,image_path:null},{id:72,name:"MAYANK PANDEY",designation:"Deshbandhu College",district:"east",state:"nct_of_delhi",coordinates:null,email:"mayankpandeyapsb@gmail.com",phone:"7002874129",image:null,added_by:6,image_path:null},{id:73,name:"Sudarshan p",designation:"IT",district:"bangalore",state:"karnataka",coordinates:null,email:"sudarshan.p6796@gmail.com",phone:"9632911984",image:null,added_by:6,image_path:null},{id:74,name:"Ankit Tiwari",designation:"Jourlism",district:"allahabad",state:"uttar_pradesh",coordinates:null,email:"ankit00212217@gmail.com",phone:"6306469689",image:null,added_by:6,image_path:null},{id:75,name:"Dr.Vijay Singh Yadav",designation:"Citizens for Nature and conservation society Jabalpur Madhya Pradesh India",district:"damoh",state:"madhya_pradesh",coordinates:null,email:"vsydon@gmail.com",phone:"9893684843",image:null,added_by:6,image_path:null},{id:76,name:"Dr.Vijay Singh Yadav",designation:"Citizens for Nature and conservation society Jabalpur Madhya Pradesh India",district:"jabalpur",state:"madhya_pradesh",coordinates:null,email:"vsydon@gmail.com",phone:"9893684843",image:null,added_by:6,image_path:null},{id:77,name:"Sanjay Kumar chhimwal",designation:"Self employed",district:"nainital",state:"uttarakhand",coordinates:null,email:"jungleesanju@gmail.com",phone:"+917017189044",image:null,added_by:6,image_path:null},{id:78,name:"Rajat Joshi",designation:"Corporate Employee",district:"pune",state:"maharashtra",coordinates:null,email:"blueoakleaf03@gmail.com",phone:"9307345231",image:null,added_by:6,image_path:null},{id:79,name:"Hemant Kataria",designation:"Civil Engineer, NTPC, retired",district:"new_delhi",state:"nct_of_delhi",coordinates:null,email:"hemant.kataria1960@gmail.com",phone:"7587479107",image:null,added_by:6,image_path:null},{id:80,name:"Hemant Kataria",designation:"Civil Engineer, NTPC, retired",district:"ghaziabad",state:"uttar_pradesh",coordinates:null,email:"hemant.kataria1960@gmail.com",phone:"7587479107",image:null,added_by:6,image_path:null},{id:81,name:"Akhand Dixit",designation:"Communication Officer (GIVE ME TREES)",district:"meerut",state:"uttar_pradesh",coordinates:null,email:"ankur.akhand@gmail.com",phone:"8630178483",image:null,added_by:6,image_path:null},{id:82,name:"Akhand Dixit",designation:"Communication Officer (GIVE ME TREES)",district:"dehradun",state:"uttarakhand",coordinates:null,email:"ankur.akhand@gmail.com",phone:"8630178483",image:null,added_by:6,image_path:null},{id:83,name:"Parveen Gahlot",designation:"Wildlife Packages",district:"south_west",state:"nct_of_delhi",coordinates:null,email:"wildlifepackages.in@gmail.com",phone:"8447560003",image:null,added_by:6,image_path:null},{id:84,name:"Sravanthi Ledalla",designation:"MNC",district:"ranga_reddy",state:"telangana",coordinates:null,email:"sravanthi.ledalla@gmail.com",phone:"9884874712",image:null,added_by:6,image_path:null},{id:85,name:"SHIVAM KUMAR",designation:"BIPSA BIHAR",district:"rohtas",state:"bihar",coordinates:null,email:"shivamkumarpooja@gmail.com",phone:"9572676761",image:null,added_by:6,image_path:null},{id:86,name:"Mahesh",designation:"Consultant",district:"bangalore_rural",state:"karnataka",coordinates:null,email:"ojmahesh@gmail.com",phone:"9845031485",image:null,added_by:6,image_path:null},{id:87,name:"Dr. Aamir Nasirabadi",designation:"Citizens For Nature and Conservation Society",district:"damoh",state:"madhya_pradesh",coordinates:null,email:"aamirshabnam@hotmail.com",phone:"+917869074230",image:null,added_by:6,image_path:null},{id:88,name:"Dr. Aamir Nasirabadi",designation:"Citizens For Nature and Conservation Society",district:"jabalpur",state:"madhya_pradesh",coordinates:null,email:"aamirshabnam@hotmail.com",phone:"+917869074230",image:null,added_by:6,image_path:null},{id:89,name:"Shaik Akbar",designation:"WWF-India",district:"hyderabad",state:"telangana",coordinates:null,email:"sakbar@wwfindia.net",phone:"8074419076",image:null,added_by:6,image_path:null},{id:90,name:"Shaik Akbar",designation:"WWF-India",district:"ranga_reddy",state:"telangana",coordinates:null,email:"sakbar@wwfindia.net",phone:"8074419076",image:null,added_by:6,image_path:null},{id:91,name:"Poornima",designation:"Landscape architect",district:"bangalore",state:"karnataka",coordinates:null,email:"Scalearchitects.info@gmail.com",phone:"+919886020929",image:null,added_by:6,image_path:null},{id:92,name:"Parithi R",designation:"6th standard School student",district:"tiruchirappalli",state:"tamil_nadu",coordinates:null,email:"artheerajendran@gmail.com",phone:"'09626662444",image:null,added_by:6,image_path:null},{id:93,name:"Dr. Rajib Biswas",designation:"Assistant Professor",district:"barddhaman",state:"west_bengal",coordinates:null,email:"ready.rajib@gmail.com",phone:"7478713520",image:null,added_by:6,image_path:null},{id:94,name:"Rahul M. Sonawane",designation:"Vanyajeev Sanrakshan Sanstha, Jalgaon.",district:"jalgaon",state:"maharashtra",coordinates:null,email:"rahulsonawane1727@gmail.com",phone:"8999516578",image:null,added_by:6,image_path:null},{id:95,name:"Mukesh kumar choudhary",designation:"Srishti ganga prahari environment and welfare society",district:"lakhisarai",state:"bihar",coordinates:null,email:"mkc9931@gmail.com",phone:"9931204511",image:null,added_by:6,image_path:null},{id:96,name:"Dr. Santhosh S",designation:"Faculty, Department of Studies in Zoology, University of Mysore",district:"mysore",state:"karnataka",coordinates:null,email:"santhoshacharr@gmail.com",phone:"+91 9449338247",image:null,added_by:6,image_path:null},{id:97,name:"Ada Riyaz",designation:"Science teacher at Smt GS RS Adarsh inter College Shahzad Nagar district Budaun",district:"budaun",state:"uttar_pradesh",coordinates:null,email:"adariyaz4@gmail.com",phone:"9084686703",image:null,added_by:6,image_path:null},{id:98,name:"Dr Neha Yadav",designation:"Assistant Professor, Deshbandhu College",district:"gurgaon",state:"haryana",coordinates:null,email:"nyadav@db.du.ac.in",phone:"9911848958",image:null,added_by:6,image_path:null},{id:99,name:"Dr Neha Yadav",designation:"Assistant Professor, Deshbandhu College",district:"north_east",state:"nct_of_delhi",coordinates:null,email:"nyadav@db.du.ac.in",phone:"9911848958",image:null,added_by:6,image_path:null},{id:100,name:"Taukeer Alam",designation:"Naturalist, group name Mae",district:"hardwar",state:"uttarakhand",coordinates:null,email:"taukeeralamlodha@gmail.com",phone:"7500987892",image:null,added_by:6,image_path:null},{id:101,name:"Dr. Vinod Kumari",designation:"Associate Professor, Department of Zoology, University of Rajasthan, Jaipur",district:"jaipur",state:"rajasthan",coordinates:null,email:"vins.khangarot@yahoo.com",phone:"9829392063",image:null,added_by:6,image_path:null},{id:102,name:"Sunil Hanmant Bhoite",designation:"Conservationist. Founder President of Satara based NGO Mahadare Ecological Research Institute, Satara.",district:"satara",state:"maharashtra",coordinates:null,email:"bhoitesunil50@gmail.com",phone:"9421997301",image:null,added_by:6,image_path:null},{id:103,name:"Anirudh Vasava",designation:"Voluntary Nature Conservancy",district:"anand",state:"gujarat",coordinates:null,email:"aniruddh.vasava@gmail.com",phone:"8980253399",image:null,added_by:6,image_path:null},{id:104,name:"Anirudh Vasava",designation:"Voluntary Nature Conservancy",district:"kheda",state:"gujarat",coordinates:null,email:"aniruddh.vasava@gmail.com",phone:"8980253399",image:null,added_by:6,image_path:null},{id:105,name:"Raja Bose",designation:"Self Employed",district:"bhagalpur",state:"bihar",coordinates:null,email:"aveekbgp@rediffmail.com",phone:"9934054780",image:null,added_by:6,image_path:null},{id:106,name:"Sumit Tyagi",designation:"Business",district:"ghaziabad",state:"uttar_pradesh",coordinates:null,email:"braynadams7@gmail.com",phone:"9958127124",image:null,added_by:6,image_path:null},{id:107,name:"Bijay bharat",designation:"Research scholar",district:"bhagalpur",state:"bihar",coordinates:null,email:"bijaybharat72@gmail.com",phone:"9572273670",image:null,added_by:6,image_path:null},{id:108,name:"Dr.V.ABARNA",designation:"Bharath Institute of higher education and research, Chennai",district:"thiruvallur",state:"tamil_nadu",coordinates:null,email:"abarnavenkat22@gmail.com",phone:"9865457477",image:null,added_by:6,image_path:null},{id:109,name:"Shethong",designation:null,district:"kiphire",state:"nagaland",coordinates:null,email:"shethong59@gmail.com",phone:"87328 45659",image:null,added_by:6,image_path:null},{id:110,name:"Paresh",designation:"BreathingRoots Pvt ltd",district:"mumbai_city",state:"maharashtra",coordinates:null,email:"pareshchuri@gmail.com",phone:"8108432211",image:null,added_by:6,image_path:null},{id:111,name:"Mayurika Leuva-Banker",designation:"An engineer in water supply department",district:"bharuch",state:"gujarat",coordinates:null,email:"mayurikabanker@gmail.com",phone:"9978408820",image:null,added_by:6,image_path:null},{id:112,name:"Sohail Madan",designation:"Naturalist",district:"south",state:"nct_of_delhi",coordinates:null,email:"madan.sohail97@gmail.com",phone:"9717838299",image:null,added_by:6,image_path:null},{id:114,name:"Seema Bassi",designation:null,district:"south",state:"nct_of_delhi",coordinates:null,email:"bassiseema@gmail.com",phone:"7259716716",image:null,added_by:6,image_path:null},{id:115,name:"Arvindkumar Naicker",designation:"Software Development",district:"ahmadabad",state:"gujarat",coordinates:null,email:"arvind_rn@yahoo.com",phone:"9898082776",image:null,added_by:6,image_path:null},{id:116,name:"Jyoti",designation:"Research Scholar",district:"gorakhpur",state:"uttar_pradesh",coordinates:null,email:"jyotiantil5794@gmail.com",phone:"8882600125",image:null,added_by:6,image_path:null},{id:117,name:"Jyoti",designation:"Research Scholar",district:"lucknow",state:"uttar_pradesh",coordinates:null,email:"jyotiantil5794@gmail.com",phone:"8882600125",image:null,added_by:6,image_path:null},{id:118,name:"Jyoti",designation:"Research Scholar",district:"shrawasti",state:"uttar_pradesh",coordinates:null,email:"jyotiantil5794@gmail.com",phone:"8882600125",image:null,added_by:6,image_path:null},{id:119,name:"Jyoti",designation:"Research Scholar",district:"mahrajganj",state:"uttar_pradesh",coordinates:null,email:"jyotiantil5794@gmail.com",phone:"8882600125",image:null,added_by:6,image_path:null},{id:120,name:"Pratiksha Kothule",designation:"Wildlife Biologist",district:"nashik",state:"maharashtra",coordinates:null,email:"pratikshak4892@gmail.com",phone:"9011034892",image:null,added_by:6,image_path:null},{id:121,name:"Rajib Rudra Tariang",designation:"Department of Zoology, Digboi College",district:"tinsukia",state:"assam",coordinates:null,email:"rajibrudratariang@gmail.com",phone:"'07002115446",image:null,added_by:6,image_path:null},{id:122,name:"Bharatkumar Patel",designation:"Business",district:"ahmadabad",state:"gujarat",coordinates:null,email:"raju_jeel@yahoo.co.in",phone:"9825654221",image:null,added_by:6,image_path:null},{id:123,name:"Dr Trupti K.Vyas",designation:"Job, Navsari Agricultural University",district:"navsari",state:"gujarat",coordinates:null,email:"vyastrupti@hotmail.com",phone:"9662030836",image:null,added_by:6,image_path:null},{id:124,name:"Dr Santosh Umarane",designation:"Doctor",district:"kolhapur",state:"maharashtra",coordinates:null,email:"umaranesantosh@gmail.com",phone:"8308759515",image:null,added_by:6,image_path:null},{id:125,name:"Deeksha Chopra Bhatia",designation:"Environment Consultant",district:"central",state:"nct_of_delhi",coordinates:null,email:"deekshaachops@gmail.com",phone:"8130106019",image:null,added_by:6,image_path:null},{id:126,name:"Varshini S",designation:"Student",district:"chennai",state:"tamil_nadu",coordinates:null,email:"vvarsh0311@gmail.com",phone:"8778547577",image:null,added_by:6,image_path:null},{id:127,name:"Sandhiya B",designation:"Student - Queen Mary's College",district:"chennai",state:"tamil_nadu",coordinates:null,email:"sandhiya16032@gmail.com",phone:"7305517184",image:null,added_by:6,image_path:null},{id:128,name:"Aman Singh",designation:"Indian Biodiversity Conservation Society",district:"lucknow",state:"uttar_pradesh",coordinates:null,email:"Legendsince1994@gmail.com",phone:"+919453643817",image:null,added_by:6,image_path:null},{id:129,name:"Nilesh Chavan",designation:"Outdoor instructors",district:"pune",state:"maharashtra",coordinates:null,email:"nileshkchavan@gmail.com",phone:"+919922698941",image:null,added_by:6,image_path:null},{id:130,name:"Vivek",designation:"Forest department",district:"bidar",state:"karnataka",coordinates:null,email:"deviceo803@gmail.com",phone:"9148886357",image:null,added_by:6,image_path:null},{id:131,name:"Sameera Mansuri",designation:"Research Scholar/ Govt Holkar Science College Indore",district:"indore",state:"madhya_pradesh",coordinates:null,email:"msameera510@gmail.com",phone:"7261927028",image:null,added_by:6,image_path:null},{id:132,name:"Jay Kumar Jay",designation:"Research Scholar /T.M.B.U. Bhagalpur",district:"bhagalpur",state:"bihar",coordinates:null,email:"jaykrjay2505@gmail.com",phone:"7479572180",image:null,added_by:6,image_path:null},{id:133,name:"Sarla Sharma",designation:"Research scholar",district:"sikar",state:"rajasthan",coordinates:null,email:"12sarlasharma@gmail.com",phone:"7734908676",image:null,added_by:6,image_path:null},{id:134,name:"Venus Joshi",designation:"COCOON - Community for Conservation of Nature",district:"panch_mahals",state:"gujarat",coordinates:null,email:"thecocooncommunity@gmail.com",phone:"9727752817",image:null,added_by:6,image_path:null},{id:135,name:"Venus Joshi",designation:"COCOON - Community for Conservation of Nature",district:"dohad",state:"gujarat",coordinates:null,email:"thecocooncommunity@gmail.com",phone:"9727752817",image:null,added_by:6,image_path:null},{id:136,name:"Venus Joshi",designation:"COCOON - Community for Conservation of Nature",district:"chhota_udaipur",state:"gujarat",coordinates:null,email:"thecocooncommunity@gmail.com",phone:"9727752817",image:null,added_by:6,image_path:null},{id:137,name:"Venus Joshi",designation:"COCOON - Community for Conservation of Nature",district:"vadodara",state:"gujarat",coordinates:null,email:"thecocooncommunity@gmail.com",phone:"9727752817",image:null,added_by:6,image_path:null},{id:138,name:"Prabhjeet S",designation:"nature enthusiast",district:"darbhanga",state:"bihar",coordinates:null,email:"439.prabh@gmail.com",phone:null,image:null,added_by:6,image_path:null},{id:139,name:"Prabhjeet S",designation:"nature enthusiast",district:"sitamarhi",state:"bihar",coordinates:null,email:"439.prabh@gmail.com",phone:null,image:null,added_by:6,image_path:null},{id:140,name:"DrVirendra",designation:"Assistant professor",district:"bhandara",state:"maharashtra",coordinates:null,email:"virendrasangode03@gmail.com",phone:"7773955945",image:null,added_by:6,image_path:null},{id:141,name:"DrVirendra",designation:"Assistant professor",district:"gondiya",state:"maharashtra",coordinates:null,email:"virendrasangode03@gmail.com",phone:"7773955945",image:null,added_by:6,image_path:null},{id:142,name:"Dr. Sudhir Bhandarkar",designation:"M.B. Patel College, Deori, Dist. Gondia",district:"gondiya",state:"maharashtra",coordinates:null,email:"sudhirsense@gmail.com",phone:"+918788183660",image:null,added_by:6,image_path:null},{id:143,name:"Zankar Amitbhai Shah",designation:"Student",district:"bhavnagar",state:"gujarat",coordinates:null,email:"zankarshah301@gmail.com",phone:"9898339477",image:null,added_by:6,image_path:null},{id:144,name:"Irshad Theba",designation:"Govt Job, Indroda Nature Park, GEER Foundation, Gandhinagar",district:"gandhinagar",state:"gujarat",coordinates:null,email:"irshadtheba@gmail.com",phone:"9033364610",image:null,added_by:6,image_path:null},{id:145,name:"Purvi Trivedi",designation:"GSFC University",district:"vadodara",state:"gujarat",coordinates:null,email:"trivedipurvi@gmail.com",phone:"9727709225",image:null,added_by:6,image_path:null},{id:146,name:"Amit Karan",designation:"Digboi college",district:"dibrugarh",state:"assam",coordinates:null,email:"neoamitkaran@gmail.com",phone:"8638925404",image:null,added_by:6,image_path:null},{id:147,name:"Bhitali Barkakati",designation:"Post-graduated Student",district:"kamrup_metropolitan",state:"assam",coordinates:null,email:"bhitalibarkakati246@gmail.com",phone:"8638062274",image:null,added_by:6,image_path:null},{id:149,name:"Ishtiyak Ahamad",designation:"Give Me Trees Trust",district:"gautam_buddha_nagar",state:"uttar_pradesh",coordinates:null,email:"ahamadishtiyak973@gmail.com",phone:"8800623154",image:null,added_by:6,image_path:null},{id:150,name:"Shan Tanu",designation:null,district:"mumbai_suburban",state:"maharashtra",coordinates:null,email:"theworldofshan@gmail.com",phone:"9990303331",image:null,added_by:6,image_path:null},{id:151,name:"Sohail Madan",designation:null,district:"gurgaon",state:"haryana",coordinates:null,email:"madan.sohail97@gmail.com",phone:null,image:null,added_by:6,image_path:null},{id:152,name:"Akhter Hussain Najar",designation:"SEED",district:"bandipore",state:"jammu_&_kashmir",coordinates:null,email:"najariakhter@gmail.com",phone:"9906690665",image:null,added_by:6,image_path:null},{id:153,name:"Akhter Hussain Najar",designation:"SEED",district:"ganderbal",state:"jammu_&_kashmir",coordinates:null,email:"najariakhter@gmail.com",phone:"9906690665",image:null,added_by:6,image_path:null},{id:154,name:"Durgasi Chandra sekhar",designation:"Research Scholar",district:"vizianagaram",state:"andhra_pradesh",coordinates:null,email:"manoharchandu4@gmail.com",phone:"9666886990",image:null,added_by:6,image_path:null},{id:155,name:"Sarika Baidya",designation:"Nature Mates - Nature Club",district:"west_kameng",state:"arunachal_pradesh",coordinates:null,email:"bukun.nm@gmail.com",phone:"9831322648",image:null,added_by:6,image_path:null},{id:156,name:"Anisha Mazumdar",designation:"Nature Mates-Nature Club",district:"kolkata",state:"west_bengal",coordinates:null,email:"anisha.naturemates@gmail.com",phone:"9748110961",image:null,added_by:6,image_path:null},{id:157,name:"Shakha Sharma",designation:"Assistant Professor in Zoology",district:"jammu",state:"jammu_&_kashmir",coordinates:null,email:"shakhasharma24@gmail.com",phone:"9419117006",image:null,added_by:6,image_path:null},{id:158,name:"Shakha Sharma",designation:"Assistant Professor in Zoology",district:"samba",state:"jammu_&_kashmir",coordinates:null,email:"shakhasharma24@gmail.com",phone:"9419117006",image:null,added_by:6,image_path:null},{id:159,name:"Shakha Sharma",designation:"Assistant Professor in Zoology",district:"kathua",state:"jammu_&_kashmir",coordinates:null,email:"shakhasharma24@gmail.com",phone:"9419117006",image:null,added_by:6,image_path:null},{id:160,name:"Shakha Sharma",designation:"Assistant Professor in Zoology",district:"rajouri",state:"jammu_&_kashmir",coordinates:null,email:"shakhasharma24@gmail.com",phone:"9419117006",image:null,added_by:6,image_path:null},{id:161,name:"Neeraj Sharma",designation:"Research / University of Jammu",district:"doda",state:"jammu_&_kashmir",coordinates:null,email:"nirazsharma@gmail.com",phone:"9419213893",image:null,added_by:6,image_path:null},{id:162,name:"Neeraj Sharma",designation:"Research / University of Jammu",district:"kishtwar",state:"jammu_&_kashmir",coordinates:null,email:"nirazsharma@gmail.com",phone:"9419213893",image:null,added_by:6,image_path:null},{id:163,name:"Neeraj Sharma",designation:"Research / University of Jammu",district:"ramban",state:"jammu_&_kashmir",coordinates:null,email:"nirazsharma@gmail.com",phone:"9419213893",image:null,added_by:6,image_path:null},{id:164,name:"Neeraj Sharma",designation:"Research / University of Jammu",district:"udhampur",state:"jammu_&_kashmir",coordinates:null,email:"nirazsharma@gmail.com",phone:"9419213893",image:null,added_by:6,image_path:null},{id:165,name:"Savitha Rajesh",designation:"Housewife",district:"bangalore",state:"karnataka",coordinates:null,email:"savi.tulips@gmail.com",phone:"8105921125",image:null,added_by:6,image_path:null},{id:166,name:"Sayali Soundankar",designation:"LMS consultant",district:"pune",state:"maharashtra",coordinates:null,email:"saayalis@outlook.com",phone:"9921926723",image:null,added_by:6,image_path:null},{id:167,name:"Joel J Mathew",designation:"Student",district:"khordha",state:"odisha",coordinates:null,email:"joeljohnm6@gmail.com",phone:"7907031215",image:null,added_by:6,image_path:null},{id:168,name:"Dr Kaleem Ahmed",designation:"Assistant  Professor Department if Wildlife Sciences AMU Aligarh",district:"aligarh",state:"uttar_pradesh",coordinates:null,email:"kaleemdar@gmail.com",phone:"9419172499",image:null,added_by:6,image_path:null},{id:169,name:"Ankit Rajotia",designation:"EPFO",district:"chennai",state:"tamil_nadu",coordinates:null,email:"ankitrajotia@gmail.com",phone:"8802542996",image:null,added_by:6,image_path:null},{id:170,name:"Vasudeesha H",designation:"Independent Consultant",district:"bangalore",state:"karnataka",coordinates:null,email:"vasudeesha@gmail.com",phone:"9980087738",image:null,added_by:6,image_path:null},{id:171,name:"SREESANTHI C",designation:"Kasaragod birders",district:"kasaragod",state:"kerala",coordinates:null,email:"sreesanthi98chattanchal@gmail.com",phone:"8590627281",image:null,added_by:6,image_path:null},{id:172,name:"Subhishna ES",designation:"KVASU",district:"wayanad",state:"kerala",coordinates:null,email:"subhisubhishna1@gmail.com",phone:"8075187169",image:null,added_by:6,image_path:null},{id:173,name:"Mukesh Kumar choudhary",designation:"Srishti ganga prahari environment and welfare society",district:"bhagalpur",state:"bihar",coordinates:null,email:"mkc9931@gmail.com",phone:"9931204511",image:null,added_by:6,image_path:null},{id:174,name:"Watsagulma Biodiversity Conservation Society",designation:null,district:"washim",state:"maharashtra",coordinates:null,email:"puruingle5@gmail.com",phone:"8983793774",image:null,added_by:6,image_path:null},{id:175,name:"Parag Ajit Rangnekar",designation:"Mrugaya Xpeditions",district:"north_goa",state:"goa",coordinates:null,email:"info@mrugayaxpeditions.com",phone:"9822129811",image:null,added_by:6,image_path:null},{id:176,name:"Parag Ajit Rangnekar",designation:"Mrugaya Xpeditions",district:"south_goa",state:"goa",coordinates:null,email:"info@mrugayaxpeditions.com",phone:"9822129811",image:null,added_by:6,image_path:null},{id:177,name:"Nikhil Vilas Jambhale",designation:"Centre for Wildlife Studies",district:"ratnagiri",state:"maharashtra",coordinates:null,email:"jambhalenikhil@gmail.com",phone:"9960068006",image:null,added_by:6,image_path:null},{id:178,name:"Nikhil Vilas Jambhale",designation:"Centre for Wildlife Studies",district:"kolhapur",state:"maharashtra",coordinates:null,email:"jambhalenikhil@gmail.com",phone:"9960068006",image:null,added_by:6,image_path:null},{id:179,name:"Nikhil Vilas Jambhale",designation:"Centre for Wildlife Studies",district:"pune",state:"maharashtra",coordinates:null,email:"jambhalenikhil@gmail.com",phone:"9960068006",image:null,added_by:6,image_path:null},{id:180,name:"NITHYA PANICKER",designation:"COLLEGE OF VETERINARY AND ANIMAL SCIENCES POOKODE",district:"wayanad",state:"kerala",coordinates:null,email:"nithyapanicker42@gmail.com",phone:"6235079394",image:null,added_by:6,image_path:null},{id:181,name:"NAZRIN",designation:"KVASU",district:"wayanad",state:"kerala",coordinates:null,email:"kakkadathnazrin@gmail.com",phone:"6238272600",image:null,added_by:6,image_path:null},{id:182,name:"B. Divya",designation:"Zoo education officer, Indira Gandhi Zoological Park, Visakhapatnam",district:"visakhapatnam",state:"andhra_pradesh",coordinates:null,email:"divyayadavbara@gmail.com",phone:"7893632900",image:null,added_by:6,image_path:null},{id:183,name:"Sri Chakra Pranav",designation:"East Coast Conservation Team",district:"visakhapatnam",state:"andhra_pradesh",coordinates:null,email:"pranav.cherry@gmail.com",phone:"9901328731",image:null,added_by:6,image_path:null},{id:184,name:"Mohit",designation:"Student",district:"north_west",state:"nct_of_delhi",coordinates:null,email:"keeninterestinwild@gmail.com",phone:"9306286687",image:null,added_by:6,image_path:null},{id:185,name:"Sham chavhan",designation:"Wildlife photographer",district:"ahmadnagar",state:"maharashtra",coordinates:null,email:"shamchavan61@gmail.com",phone:"9370873879",image:null,added_by:6,image_path:null},{id:186,name:"HUNNY KUMAR",designation:"Student",district:"west",state:"nct_of_delhi",coordinates:null,email:"hunny.kumar0413@gmail.com",phone:"8178185157",image:null,added_by:6,image_path:null},{id:187,name:"Vandana Thakur",designation:"Educator",district:"ahmadabad",state:"gujarat",coordinates:null,email:"vandana2ut@gmail.com",phone:"9924541203",image:null,added_by:6,image_path:null},{id:188,name:"Santosh  Dalvi",designation:"Pisaware Madhyamik Vidyalaya",district:"pune",state:"maharashtra",coordinates:null,email:"padhmanabha@gmail.com",phone:"9922382385",image:null,added_by:6,image_path:null},{id:189,name:"Swabha Soni",designation:"Student",district:"bilaspur",state:"chhattisgarh",coordinates:null,email:"swabha.forestry@gmail.com",phone:"7617282375",image:null,added_by:6,image_path:null},{id:190,name:"Swabha Soni",designation:"Student",district:"mungeli",state:"chhattisgarh",coordinates:null,email:"swabha.forestry@gmail.com",phone:"7617282375",image:null,added_by:6,image_path:null},{id:191,name:"HITESH SHRIMAL",designation:"Sr.Teacher",district:"udaipur",state:"rajasthan",coordinates:null,email:"hiteshshrimal82@gmail.com",phone:"9828100749",image:null,added_by:6,image_path:null},{id:192,name:"Rijo Baby",designation:"Profession",district:"idukki",state:"kerala",coordinates:null,email:"rijobaby1998@gmail.com",phone:"9061142290",image:null,added_by:6,image_path:null},{id:193,name:"Rijo Baby",designation:"Profession",district:"kottayam",state:"kerala",coordinates:null,email:"rijobaby1998@gmail.com",phone:"9061142290",image:null,added_by:6,image_path:null},{id:194,name:"Mayank Bagchi",designation:"Government employee",district:"sukma",state:"chhattisgarh",coordinates:null,email:"mayankbagchi91@gmail.com",phone:"9340461036",image:null,added_by:6,image_path:null},{id:195,name:"Vishvajeet Jaroli",designation:"Assistant Professor and Head, PG Department of Zoology, Shri Ratanlal Kanwarlal Patni Girls College, Kishangarh",district:"ajmer",state:"rajasthan",coordinates:null,email:"vishvajeet1979@gmail.com",phone:"9413108214",image:null,added_by:6,image_path:null},{id:196,name:"Abhishek Maitry",designation:"Research Scholar/Founder of Nature Welfare Foundation (NGO for Nature Conservation)",district:"bilaspur",state:"chhattisgarh",coordinates:null,email:"abhimaitry@gmail.com",phone:"8109508650",image:null,added_by:6,image_path:null},{id:197,name:"Shweta Rajendra Sutar",designation:"Mahadare Ecological Research Institute",district:"satara",state:"maharashtra",coordinates:null,email:"shwetasutar2818@gmail.com",phone:"9146565182",image:null,added_by:6,image_path:null},{id:198,name:"Chandrasen Kori",designation:"Student",district:"bilaspur",state:"chhattisgarh",coordinates:null,email:"korialoneboy@gmail.com",phone:"9691661161",image:null,added_by:6,image_path:null},{id:199,name:"Rashi tiwari",designation:"Student",district:"bilaspur",state:"chhattisgarh",coordinates:null,email:"tiwarirashi646@gmail.com",phone:"'08827744933",image:null,added_by:6,image_path:null},{id:200,name:"Debasmita Roy Chowdhury",designation:"Student (Guru Ghasidas Vishwavidyalaya)",district:"north_24_parganas",state:"west_bengal",coordinates:null,email:"minibaba2000@gmail.com",phone:"7980329151",image:null,added_by:6,image_path:null},{id:201,name:"Hareesh R. Iyer",designation:"Engineer",district:"thiruvananthapuram",state:"kerala",coordinates:null,email:"hareeshiyer@hotmail.com",phone:"9846519139",image:null,added_by:6,image_path:null},{id:202,name:"Hareesh R. Iyer",designation:"Engineer",district:"kollam",state:"kerala",coordinates:null,email:"hareeshiyer@hotmail.com",phone:"9846519139",image:null,added_by:6,image_path:null},{id:203,name:"Vaghela Harshit Bavchandbhai",designation:"Project Manager at Nature Club Surat",district:"surat",state:"gujarat",coordinates:null,email:"harshitvaghela1111@gmail.com",phone:"8153810964",image:null,added_by:6,image_path:null},{id:204,name:"Siddhant jain",designation:"Field researcher",district:"bastar",state:"chhattisgarh",coordinates:null,email:"jsid0314@gmail.com",phone:"7400710761",image:null,added_by:6,image_path:null},{id:205,name:"Anisha Joy",designation:"Centre for wildlife studies, Kerala Veterinary and Animal Sciences University, Wayanad, Kerala",district:"thrissur",state:"kerala",coordinates:null,email:"anishajoy1999@gmail.com",phone:"8078247387",image:null,added_by:6,image_path:null},{id:206,name:"Dipanshu Rajak",designation:"Forestry wildlife and environmental science student",district:"bilaspur",state:"chhattisgarh",coordinates:null,email:"rajakdipanshu62@gmail.com",phone:"8109890939",image:null,added_by:6,image_path:null},{id:207,name:"Dipanshu Rajak",designation:"Forestry wildlife and environmental science student",district:"kabeerdham",state:"chhattisgarh",coordinates:null,email:"rajakdipanshu62@gmail.com",phone:"8109890939",image:null,added_by:6,image_path:null},{id:208,name:"Dipanshu Rajak",designation:"Forestry wildlife and environmental science student",district:"janjgir-champa",state:"chhattisgarh",coordinates:null,email:"rajakdipanshu62@gmail.com",phone:"8109890939",image:null,added_by:6,image_path:null},{id:209,name:"Dipanshu Rajak",designation:null,district:"mungeli",state:"chhattisgarh",coordinates:null,email:"rajakdipanshu62@gmail.com",phone:"8109890939",image:null,added_by:6,image_path:null},{id:210,name:"Dipanshu Rajak",designation:null,district:"durg",state:"chhattisgarh",coordinates:null,email:null,phone:null,image:null,added_by:6,image_path:null},{id:211,name:"Ashutosh Pandit",designation:"Giving services to NGO regarding water conservation",district:"ujjain",state:"madhya_pradesh",coordinates:null,email:"ashupt123@gmail.com",phone:"9165288526",image:null,added_by:6,image_path:null},{id:212,name:"Ashutosh Pandit",designation:"Giving services to NGO regarding water conservation",district:"dewas",state:"madhya_pradesh",coordinates:null,email:"ashupt123@gmail.com",phone:"9165288526",image:null,added_by:6,image_path:null},{id:213,name:"Sohail Madan",designation:null,district:"nainital",state:"uttarakhand",coordinates:null,email:"madan.sohail97@gmail.com",phone:"9717838299",image:null,added_by:6,image_path:null},{id:214,name:"Naveen Kumar",designation:"TVS Motor Company",district:"krishnagiri",state:"tamil_nadu",coordinates:null,email:"naveen1142465@gmail.com",phone:"9445618373",image:null,added_by:6,image_path:null},{id:215,name:"Jitendra kumar",designation:"Butterfly lab assistant bodh gaya bihar",district:"gaya",state:"bihar",coordinates:null,email:"jitendrakydv512@gmail.com",phone:"9113721508",image:null,added_by:6,image_path:null},{id:216,name:"Muhammed faiz",designation:"Radiographer",district:"malappuram",state:"kerala",coordinates:null,email:"Faizkarayil@gmail.com",phone:"9746174564",image:null,added_by:6,image_path:null},{id:217,name:"Sujit biswal",designation:"Real estate sales",district:"raipur",state:"chhattisgarh",coordinates:null,email:"sujitbiswal8181@gmail.com",phone:"8819922766",image:null,added_by:6,image_path:null},{id:218,name:"Dr. Sanjeeda Iqbal",designation:"Head of Department and Professor of Botany , Govt. Holkar Science College , Indoreb",district:"indore",state:"madhya_pradesh",coordinates:null,email:"sanjeedaiqbal.si@gmail.com",phone:"9406667854",image:null,added_by:6,image_path:null},{id:219,name:"Pema Yangden",designation:"ATREE",district:"north_sikkim",state:"sikkim",coordinates:null,email:"pema.yangden@atree.org",phone:"9641040662",image:null,added_by:1,image_path:null}],is={namespaced:!0,state:{all_data:[],shouldPersist:!1},getters:{all_data(a){return a.all_data}},mutations:{SET_ALL_DATA(a,e){a.all_data=e},ADD_DATA(a,e){let{created_at:t,updated_at:i,...n}=e.data;a.all_data.push(n)},REMOVE_DATA(a,e){let t=a.all_data.findIndex(i=>i.id===e);a.all_data.splice(t,1)}},actions:{async getAllData({commit:a}){try{const{data:e}=await b.get("/api/district_coordinators");a("SET_ALL_DATA",e)}catch({response:{data:e}}){console.error("error retreiving District Coordinators")}},async importDC({dispatch:a},e){for(const i of ts)if(i.id>=165&&i.id<=173){await new Promise(r=>setTimeout(r,666));let n={...i,user:e};await a("store",n),console.log("After 666 milli seconds")}},async store({commit:a},e){try{const{data:t}=await b.post("/api/store_district_coordinator",e);a("ADD_DATA",t)}catch({response:{data:t}}){console.error("error storing District Coordinator")}},async delete({commit:a},e){try{await b.delete(`/api/delete_district_coordinator/${e}`),a("REMOVE_DATA",e)}catch({response:{data:t}}){console.error("error deleting District Coordinator")}}}},ns={namespaced:!0,state:{regions:{},states:{},districts:{},shouldPersist:!1},getters:{regions(a){return a.regions},states(a){return a.states},districts(a){}},mutations:{SET_REGIONS(a,e){a.regions=JSON.parse(e)},SET_STATES(a,e){a.states=JSON.parse(e)},SET_DISTRICTS(a,e){a.districts=JSON.parse(e)}},actions:{async getAllData({commit:a,dispatch:e}){localStorage.clear(),sessionStorage.clear(),await e("getRegions"),await e("getStates"),await e("getDistricts")},async getRegions({commit:a}){try{const{data:e}=await b.get("/api/maps/regions");a("SET_REGIONS",e)}catch(e){console.error("error retreiving Regions",e)}},async getStates({commit:a}){try{const{data:e}=await b.get("/api/maps/states");a("SET_STATES",e)}catch(e){console.error("error retreiving States",e)}},async getDistricts({commit:a}){try{const{data:e}=await b.get("/api/maps/districts");a("SET_DISTRICTS",e)}catch(e){console.error("error retreiving Districts",e)}}}};class rs extends Map{constructor(e,t=ls){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:t}}),e!=null)for(const[i,n]of e)this.set(i,n)}get(e){return super.get(ot(this,e))}has(e){return super.has(ot(this,e))}set(e,t){return super.set(ss(this,e),t)}delete(e){return super.delete(os(this,e))}}function ot({_intern:a,_key:e},t){const i=e(t);return a.has(i)?a.get(i):t}function ss({_intern:a,_key:e},t){const i=e(t);return a.has(i)?a.get(i):(a.set(i,t),t)}function os({_intern:a,_key:e},t){const i=e(t);return a.has(i)&&(t=a.get(i),a.delete(i)),t}function ls(a){return a!==null&&typeof a=="object"?a.valueOf():a}function ge(a){return a}function us(a,...e){return ii(a,ge,ge,e)}function ua(a,...e){return ii(a,Array.from,ge,e)}function ii(a,e,t,i){return function n(r,s){if(s>=i.length)return t(r);const o=new rs,u=i[s++];let d=-1;for(const l of r){const c=u(l,++d,r),h=o.get(c);h?h.push(l):o.set(c,[l])}for(const[l,c]of o)o.set(l,n(c,s));return e(o)}(a,0)}var ds={value:()=>{}};function ni(){for(var a=0,e=arguments.length,t={},i;a<e;++a){if(!(i=arguments[a]+"")||i in t||/[\s.]/.test(i))throw new Error("illegal type: "+i);t[i]=[]}return new Oa(t)}function Oa(a){this._=a}function cs(a,e){return a.trim().split(/^|\s+/).map(function(t){var i="",n=t.indexOf(".");if(n>=0&&(i=t.slice(n+1),t=t.slice(0,n)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:i}})}Oa.prototype=ni.prototype={constructor:Oa,on:function(a,e){var t=this._,i=cs(a+"",t),n,r=-1,s=i.length;if(arguments.length<2){for(;++r<s;)if((n=(a=i[r]).type)&&(n=hs(t[n],a.name)))return n;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++r<s;)if(n=(a=i[r]).type)t[n]=lt(t[n],a.name,e);else if(e==null)for(n in t)t[n]=lt(t[n],a.name,null);return this},copy:function(){var a={},e=this._;for(var t in e)a[t]=e[t].slice();return new Oa(a)},call:function(a,e){if((n=arguments.length-2)>0)for(var t=new Array(n),i=0,n,r;i<n;++i)t[i]=arguments[i+2];if(!this._.hasOwnProperty(a))throw new Error("unknown type: "+a);for(r=this._[a],i=0,n=r.length;i<n;++i)r[i].value.apply(e,t)},apply:function(a,e,t){if(!this._.hasOwnProperty(a))throw new Error("unknown type: "+a);for(var i=this._[a],n=0,r=i.length;n<r;++n)i[n].value.apply(e,t)}};function hs(a,e){for(var t=0,i=a.length,n;t<i;++t)if((n=a[t]).name===e)return n.value}function lt(a,e,t){for(var i=0,n=a.length;i<n;++i)if(a[i].name===e){a[i]=ds,a=a.slice(0,i).concat(a.slice(i+1));break}return t!=null&&a.push({name:e,value:t}),a}var fe="http://www.w3.org/1999/xhtml";const ut={svg:"http://www.w3.org/2000/svg",xhtml:fe,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function Za(a){var e=a+="",t=e.indexOf(":");return t>=0&&(e=a.slice(0,t))!=="xmlns"&&(a=a.slice(t+1)),ut.hasOwnProperty(e)?{space:ut[e],local:a}:a}function ms(a){return function(){var e=this.ownerDocument,t=this.namespaceURI;return t===fe&&e.documentElement.namespaceURI===fe?e.createElement(a):e.createElementNS(t,a)}}function ps(a){return function(){return this.ownerDocument.createElementNS(a.space,a.local)}}function ri(a){var e=Za(a);return(e.local?ps:ms)(e)}function gs(){}function Ge(a){return a==null?gs:function(){return this.querySelector(a)}}function fs(a){typeof a!="function"&&(a=Ge(a));for(var e=this._groups,t=e.length,i=new Array(t),n=0;n<t;++n)for(var r=e[n],s=r.length,o=i[n]=new Array(s),u,d,l=0;l<s;++l)(u=r[l])&&(d=a.call(u,u.__data__,l,r))&&("__data__"in u&&(d.__data__=u.__data__),o[l]=d);return new R(i,this._parents)}function ys(a){return a==null?[]:Array.isArray(a)?a:Array.from(a)}function bs(){return[]}function si(a){return a==null?bs:function(){return this.querySelectorAll(a)}}function _s(a){return function(){return ys(a.apply(this,arguments))}}function Ss(a){typeof a=="function"?a=_s(a):a=si(a);for(var e=this._groups,t=e.length,i=[],n=[],r=0;r<t;++r)for(var s=e[r],o=s.length,u,d=0;d<o;++d)(u=s[d])&&(i.push(a.call(u,u.__data__,d,s)),n.push(u));return new R(i,n)}function oi(a){return function(){return this.matches(a)}}function li(a){return function(e){return e.matches(a)}}var ws=Array.prototype.find;function As(a){return function(){return ws.call(this.children,a)}}function vs(){return this.firstElementChild}function Cs(a){return this.select(a==null?vs:As(typeof a=="function"?a:li(a)))}var ks=Array.prototype.filter;function Ps(){return Array.from(this.children)}function Bs(a){return function(){return ks.call(this.children,a)}}function Ts(a){return this.selectAll(a==null?Ps:Bs(typeof a=="function"?a:li(a)))}function Es(a){typeof a!="function"&&(a=oi(a));for(var e=this._groups,t=e.length,i=new Array(t),n=0;n<t;++n)for(var r=e[n],s=r.length,o=i[n]=[],u,d=0;d<s;++d)(u=r[d])&&a.call(u,u.__data__,d,r)&&o.push(u);return new R(i,this._parents)}function ui(a){return new Array(a.length)}function Ds(){return new R(this._enter||this._groups.map(ui),this._parents)}function Ga(a,e){this.ownerDocument=a.ownerDocument,this.namespaceURI=a.namespaceURI,this._next=null,this._parent=a,this.__data__=e}Ga.prototype={constructor:Ga,appendChild:function(a){return this._parent.insertBefore(a,this._next)},insertBefore:function(a,e){return this._parent.insertBefore(a,e)},querySelector:function(a){return this._parent.querySelector(a)},querySelectorAll:function(a){return this._parent.querySelectorAll(a)}};function xs(a){return function(){return a}}function Rs(a,e,t,i,n,r){for(var s=0,o,u=e.length,d=r.length;s<d;++s)(o=e[s])?(o.__data__=r[s],i[s]=o):t[s]=new Ga(a,r[s]);for(;s<u;++s)(o=e[s])&&(n[s]=o)}function Os(a,e,t,i,n,r,s){var o,u,d=new Map,l=e.length,c=r.length,h=new Array(l),p;for(o=0;o<l;++o)(u=e[o])&&(h[o]=p=s.call(u,u.__data__,o,e)+"",d.has(p)?n[o]=u:d.set(p,u));for(o=0;o<c;++o)p=s.call(a,r[o],o,r)+"",(u=d.get(p))?(i[o]=u,u.__data__=r[o],d.delete(p)):t[o]=new Ga(a,r[o]);for(o=0;o<l;++o)(u=e[o])&&d.get(h[o])===u&&(n[o]=u)}function Ls(a){return a.__data__}function Ns(a,e){if(!arguments.length)return Array.from(this,Ls);var t=e?Os:Rs,i=this._parents,n=this._groups;typeof a!="function"&&(a=xs(a));for(var r=n.length,s=new Array(r),o=new Array(r),u=new Array(r),d=0;d<r;++d){var l=i[d],c=n[d],h=c.length,p=Ms(a.call(l,l&&l.__data__,d,i)),g=p.length,f=o[d]=new Array(g),y=s[d]=new Array(g),_=u[d]=new Array(h);t(l,c,f,y,_,p,e);for(var w=0,N=0,U,oa;w<g;++w)if(U=f[w]){for(w>=N&&(N=w+1);!(oa=y[N])&&++N<g;);U._next=oa||null}}return s=new R(s,i),s._enter=o,s._exit=u,s}function Ms(a){return typeof a=="object"&&"length"in a?a:Array.from(a)}function Fs(){return new R(this._exit||this._groups.map(ui),this._parents)}function Gs(a,e,t){var i=this.enter(),n=this,r=this.exit();return typeof a=="function"?(i=a(i),i&&(i=i.selection())):i=i.append(a+""),e!=null&&(n=e(n),n&&(n=n.selection())),t==null?r.remove():t(r),i&&n?i.merge(n).order():n}function Hs(a){for(var e=a.selection?a.selection():a,t=this._groups,i=e._groups,n=t.length,r=i.length,s=Math.min(n,r),o=new Array(n),u=0;u<s;++u)for(var d=t[u],l=i[u],c=d.length,h=o[u]=new Array(c),p,g=0;g<c;++g)(p=d[g]||l[g])&&(h[g]=p);for(;u<n;++u)o[u]=t[u];return new R(o,this._parents)}function js(){for(var a=this._groups,e=-1,t=a.length;++e<t;)for(var i=a[e],n=i.length-1,r=i[n],s;--n>=0;)(s=i[n])&&(r&&s.compareDocumentPosition(r)^4&&r.parentNode.insertBefore(s,r),r=s);return this}function Is(a){a||(a=Ws);function e(c,h){return c&&h?a(c.__data__,h.__data__):!c-!h}for(var t=this._groups,i=t.length,n=new Array(i),r=0;r<i;++r){for(var s=t[r],o=s.length,u=n[r]=new Array(o),d,l=0;l<o;++l)(d=s[l])&&(u[l]=d);u.sort(e)}return new R(n,this._parents).order()}function Ws(a,e){return a<e?-1:a>e?1:a>=e?0:NaN}function zs(){var a=arguments[0];return arguments[0]=this,a.apply(null,arguments),this}function Ys(){return Array.from(this)}function Us(){for(var a=this._groups,e=0,t=a.length;e<t;++e)for(var i=a[e],n=0,r=i.length;n<r;++n){var s=i[n];if(s)return s}return null}function Js(){let a=0;for(const e of this)++a;return a}function $s(){return!this.node()}function Vs(a){for(var e=this._groups,t=0,i=e.length;t<i;++t)for(var n=e[t],r=0,s=n.length,o;r<s;++r)(o=n[r])&&a.call(o,o.__data__,r,n);return this}function Ks(a){return function(){this.removeAttribute(a)}}function qs(a){return function(){this.removeAttributeNS(a.space,a.local)}}function Zs(a,e){return function(){this.setAttribute(a,e)}}function Xs(a,e){return function(){this.setAttributeNS(a.space,a.local,e)}}function Qs(a,e){return function(){var t=e.apply(this,arguments);t==null?this.removeAttribute(a):this.setAttribute(a,t)}}function ao(a,e){return function(){var t=e.apply(this,arguments);t==null?this.removeAttributeNS(a.space,a.local):this.setAttributeNS(a.space,a.local,t)}}function eo(a,e){var t=Za(a);if(arguments.length<2){var i=this.node();return t.local?i.getAttributeNS(t.space,t.local):i.getAttribute(t)}return this.each((e==null?t.local?qs:Ks:typeof e=="function"?t.local?ao:Qs:t.local?Xs:Zs)(t,e))}function di(a){return a.ownerDocument&&a.ownerDocument.defaultView||a.document&&a||a.defaultView}function to(a){return function(){this.style.removeProperty(a)}}function io(a,e,t){return function(){this.style.setProperty(a,e,t)}}function no(a,e,t){return function(){var i=e.apply(this,arguments);i==null?this.style.removeProperty(a):this.style.setProperty(a,i,t)}}function ro(a,e,t){return arguments.length>1?this.each((e==null?to:typeof e=="function"?no:io)(a,e,t??"")):ia(this.node(),a)}function ia(a,e){return a.style.getPropertyValue(e)||di(a).getComputedStyle(a,null).getPropertyValue(e)}function so(a){return function(){delete this[a]}}function oo(a,e){return function(){this[a]=e}}function lo(a,e){return function(){var t=e.apply(this,arguments);t==null?delete this[a]:this[a]=t}}function uo(a,e){return arguments.length>1?this.each((e==null?so:typeof e=="function"?lo:oo)(a,e)):this.node()[a]}function ci(a){return a.trim().split(/^|\s+/)}function He(a){return a.classList||new hi(a)}function hi(a){this._node=a,this._names=ci(a.getAttribute("class")||"")}hi.prototype={add:function(a){var e=this._names.indexOf(a);e<0&&(this._names.push(a),this._node.setAttribute("class",this._names.join(" ")))},remove:function(a){var e=this._names.indexOf(a);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(a){return this._names.indexOf(a)>=0}};function mi(a,e){for(var t=He(a),i=-1,n=e.length;++i<n;)t.add(e[i])}function pi(a,e){for(var t=He(a),i=-1,n=e.length;++i<n;)t.remove(e[i])}function co(a){return function(){mi(this,a)}}function ho(a){return function(){pi(this,a)}}function mo(a,e){return function(){(e.apply(this,arguments)?mi:pi)(this,a)}}function po(a,e){var t=ci(a+"");if(arguments.length<2){for(var i=He(this.node()),n=-1,r=t.length;++n<r;)if(!i.contains(t[n]))return!1;return!0}return this.each((typeof e=="function"?mo:e?co:ho)(t,e))}function go(){this.textContent=""}function fo(a){return function(){this.textContent=a}}function yo(a){return function(){var e=a.apply(this,arguments);this.textContent=e??""}}function bo(a){return arguments.length?this.each(a==null?go:(typeof a=="function"?yo:fo)(a)):this.node().textContent}function _o(){this.innerHTML=""}function So(a){return function(){this.innerHTML=a}}function wo(a){return function(){var e=a.apply(this,arguments);this.innerHTML=e??""}}function Ao(a){return arguments.length?this.each(a==null?_o:(typeof a=="function"?wo:So)(a)):this.node().innerHTML}function vo(){this.nextSibling&&this.parentNode.appendChild(this)}function Co(){return this.each(vo)}function ko(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Po(){return this.each(ko)}function Bo(a){var e=typeof a=="function"?a:ri(a);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function To(){return null}function Eo(a,e){var t=typeof a=="function"?a:ri(a),i=e==null?To:typeof e=="function"?e:Ge(e);return this.select(function(){return this.insertBefore(t.apply(this,arguments),i.apply(this,arguments)||null)})}function Do(){var a=this.parentNode;a&&a.removeChild(this)}function xo(){return this.each(Do)}function Ro(){var a=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(a,this.nextSibling):a}function Oo(){var a=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(a,this.nextSibling):a}function Lo(a){return this.select(a?Oo:Ro)}function No(a){return arguments.length?this.property("__data__",a):this.node().__data__}function Mo(a){return function(e){a.call(this,e,this.__data__)}}function Fo(a){return a.trim().split(/^|\s+/).map(function(e){var t="",i=e.indexOf(".");return i>=0&&(t=e.slice(i+1),e=e.slice(0,i)),{type:e,name:t}})}function Go(a){return function(){var e=this.__on;if(e){for(var t=0,i=-1,n=e.length,r;t<n;++t)r=e[t],(!a.type||r.type===a.type)&&r.name===a.name?this.removeEventListener(r.type,r.listener,r.options):e[++i]=r;++i?e.length=i:delete this.__on}}}function Ho(a,e,t){return function(){var i=this.__on,n,r=Mo(e);if(i){for(var s=0,o=i.length;s<o;++s)if((n=i[s]).type===a.type&&n.name===a.name){this.removeEventListener(n.type,n.listener,n.options),this.addEventListener(n.type,n.listener=r,n.options=t),n.value=e;return}}this.addEventListener(a.type,r,t),n={type:a.type,name:a.name,value:e,listener:r,options:t},i?i.push(n):this.__on=[n]}}function jo(a,e,t){var i=Fo(a+""),n,r=i.length,s;if(arguments.length<2){var o=this.node().__on;if(o){for(var u=0,d=o.length,l;u<d;++u)for(n=0,l=o[u];n<r;++n)if((s=i[n]).type===l.type&&s.name===l.name)return l.value}return}for(o=e?Ho:Go,n=0;n<r;++n)this.each(o(i[n],e,t));return this}function gi(a,e,t){var i=di(a),n=i.CustomEvent;typeof n=="function"?n=new n(e,t):(n=i.document.createEvent("Event"),t?(n.initEvent(e,t.bubbles,t.cancelable),n.detail=t.detail):n.initEvent(e,!1,!1)),a.dispatchEvent(n)}function Io(a,e){return function(){return gi(this,a,e)}}function Wo(a,e){return function(){return gi(this,a,e.apply(this,arguments))}}function zo(a,e){return this.each((typeof e=="function"?Wo:Io)(a,e))}function*Yo(){for(var a=this._groups,e=0,t=a.length;e<t;++e)for(var i=a[e],n=0,r=i.length,s;n<r;++n)(s=i[n])&&(yield s)}var Uo=[null];function R(a,e){this._groups=a,this._parents=e}function va(){return new R([[document.documentElement]],Uo)}function Jo(){return this}R.prototype=va.prototype={constructor:R,select:fs,selectAll:Ss,selectChild:Cs,selectChildren:Ts,filter:Es,data:Ns,enter:Ds,exit:Fs,join:Gs,merge:Hs,selection:Jo,order:js,sort:Is,call:zs,nodes:Ys,node:Us,size:Js,empty:$s,each:Vs,attr:eo,style:ro,property:uo,classed:po,text:bo,html:Ao,raise:Co,lower:Po,append:Bo,insert:Eo,remove:xo,clone:Lo,datum:No,on:jo,dispatch:zo,[Symbol.iterator]:Yo};function je(a,e,t){a.prototype=e.prototype=t,t.constructor=a}function fi(a,e){var t=Object.create(a.prototype);for(var i in e)t[i]=e[i];return t}function Ca(){}var ya=.7,Ha=1/ya,aa="\\s*([+-]?\\d+)\\s*",ba="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",F="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",$o=/^#([0-9a-f]{3,8})$/,Vo=new RegExp(`^rgb\\(${aa},${aa},${aa}\\)$`),Ko=new RegExp(`^rgb\\(${F},${F},${F}\\)$`),qo=new RegExp(`^rgba\\(${aa},${aa},${aa},${ba}\\)$`),Zo=new RegExp(`^rgba\\(${F},${F},${F},${ba}\\)$`),Xo=new RegExp(`^hsl\\(${ba},${F},${F}\\)$`),Qo=new RegExp(`^hsla\\(${ba},${F},${F},${ba}\\)$`),dt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};je(Ca,_a,{copy(a){return Object.assign(new this.constructor,this,a)},displayable(){return this.rgb().displayable()},hex:ct,formatHex:ct,formatHex8:al,formatHsl:el,formatRgb:ht,toString:ht});function ct(){return this.rgb().formatHex()}function al(){return this.rgb().formatHex8()}function el(){return yi(this).formatHsl()}function ht(){return this.rgb().formatRgb()}function _a(a){var e,t;return a=(a+"").trim().toLowerCase(),(e=$o.exec(a))?(t=e[1].length,e=parseInt(e[1],16),t===6?mt(e):t===3?new C(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):t===8?Pa(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):t===4?Pa(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=Vo.exec(a))?new C(e[1],e[2],e[3],1):(e=Ko.exec(a))?new C(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=qo.exec(a))?Pa(e[1],e[2],e[3],e[4]):(e=Zo.exec(a))?Pa(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=Xo.exec(a))?ft(e[1],e[2]/100,e[3]/100,1):(e=Qo.exec(a))?ft(e[1],e[2]/100,e[3]/100,e[4]):dt.hasOwnProperty(a)?mt(dt[a]):a==="transparent"?new C(NaN,NaN,NaN,0):null}function mt(a){return new C(a>>16&255,a>>8&255,a&255,1)}function Pa(a,e,t,i){return i<=0&&(a=e=t=NaN),new C(a,e,t,i)}function tl(a){return a instanceof Ca||(a=_a(a)),a?(a=a.rgb(),new C(a.r,a.g,a.b,a.opacity)):new C}function ye(a,e,t,i){return arguments.length===1?tl(a):new C(a,e,t,i??1)}function C(a,e,t,i){this.r=+a,this.g=+e,this.b=+t,this.opacity=+i}je(C,ye,fi(Ca,{brighter(a){return a=a==null?Ha:Math.pow(Ha,a),new C(this.r*a,this.g*a,this.b*a,this.opacity)},darker(a){return a=a==null?ya:Math.pow(ya,a),new C(this.r*a,this.g*a,this.b*a,this.opacity)},rgb(){return this},clamp(){return new C($(this.r),$(this.g),$(this.b),ja(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:pt,formatHex:pt,formatHex8:il,formatRgb:gt,toString:gt}));function pt(){return`#${J(this.r)}${J(this.g)}${J(this.b)}`}function il(){return`#${J(this.r)}${J(this.g)}${J(this.b)}${J((isNaN(this.opacity)?1:this.opacity)*255)}`}function gt(){const a=ja(this.opacity);return`${a===1?"rgb(":"rgba("}${$(this.r)}, ${$(this.g)}, ${$(this.b)}${a===1?")":`, ${a})`}`}function ja(a){return isNaN(a)?1:Math.max(0,Math.min(1,a))}function $(a){return Math.max(0,Math.min(255,Math.round(a)||0))}function J(a){return a=$(a),(a<16?"0":"")+a.toString(16)}function ft(a,e,t,i){return i<=0?a=e=t=NaN:t<=0||t>=1?a=e=NaN:e<=0&&(a=NaN),new x(a,e,t,i)}function yi(a){if(a instanceof x)return new x(a.h,a.s,a.l,a.opacity);if(a instanceof Ca||(a=_a(a)),!a)return new x;if(a instanceof x)return a;a=a.rgb();var e=a.r/255,t=a.g/255,i=a.b/255,n=Math.min(e,t,i),r=Math.max(e,t,i),s=NaN,o=r-n,u=(r+n)/2;return o?(e===r?s=(t-i)/o+(t<i)*6:t===r?s=(i-e)/o+2:s=(e-t)/o+4,o/=u<.5?r+n:2-r-n,s*=60):o=u>0&&u<1?0:s,new x(s,o,u,a.opacity)}function nl(a,e,t,i){return arguments.length===1?yi(a):new x(a,e,t,i??1)}function x(a,e,t,i){this.h=+a,this.s=+e,this.l=+t,this.opacity=+i}je(x,nl,fi(Ca,{brighter(a){return a=a==null?Ha:Math.pow(Ha,a),new x(this.h,this.s,this.l*a,this.opacity)},darker(a){return a=a==null?ya:Math.pow(ya,a),new x(this.h,this.s,this.l*a,this.opacity)},rgb(){var a=this.h%360+(this.h<0)*360,e=isNaN(a)||isNaN(this.s)?0:this.s,t=this.l,i=t+(t<.5?t:1-t)*e,n=2*t-i;return new C(se(a>=240?a-240:a+120,n,i),se(a,n,i),se(a<120?a+240:a-120,n,i),this.opacity)},clamp(){return new x(yt(this.h),Ba(this.s),Ba(this.l),ja(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const a=ja(this.opacity);return`${a===1?"hsl(":"hsla("}${yt(this.h)}, ${Ba(this.s)*100}%, ${Ba(this.l)*100}%${a===1?")":`, ${a})`}`}}));function yt(a){return a=(a||0)%360,a<0?a+360:a}function Ba(a){return Math.max(0,Math.min(1,a||0))}function se(a,e,t){return(a<60?e+(t-e)*a/60:a<180?t:a<240?e+(t-e)*(240-a)/60:e)*255}const bi=a=>()=>a;function rl(a,e){return function(t){return a+t*e}}function sl(a,e,t){return a=Math.pow(a,t),e=Math.pow(e,t)-a,t=1/t,function(i){return Math.pow(a+i*e,t)}}function ol(a){return(a=+a)==1?_i:function(e,t){return t-e?sl(e,t,a):bi(isNaN(e)?t:e)}}function _i(a,e){var t=e-a;return t?rl(a,t):bi(isNaN(a)?e:a)}const bt=function a(e){var t=ol(e);function i(n,r){var s=t((n=ye(n)).r,(r=ye(r)).r),o=t(n.g,r.g),u=t(n.b,r.b),d=_i(n.opacity,r.opacity);return function(l){return n.r=s(l),n.g=o(l),n.b=u(l),n.opacity=d(l),n+""}}return i.gamma=a,i}(1);function Y(a,e){return a=+a,e=+e,function(t){return a*(1-t)+e*t}}var be=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,oe=new RegExp(be.source,"g");function ll(a){return function(){return a}}function ul(a){return function(e){return a(e)+""}}function dl(a,e){var t=be.lastIndex=oe.lastIndex=0,i,n,r,s=-1,o=[],u=[];for(a=a+"",e=e+"";(i=be.exec(a))&&(n=oe.exec(e));)(r=n.index)>t&&(r=e.slice(t,r),o[s]?o[s]+=r:o[++s]=r),(i=i[0])===(n=n[0])?o[s]?o[s]+=n:o[++s]=n:(o[++s]=null,u.push({i:s,x:Y(i,n)})),t=oe.lastIndex;return t<e.length&&(r=e.slice(t),o[s]?o[s]+=r:o[++s]=r),o.length<2?u[0]?ul(u[0].x):ll(e):(e=u.length,function(d){for(var l=0,c;l<e;++l)o[(c=u[l]).i]=c.x(d);return o.join("")})}var _t=180/Math.PI,_e={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Si(a,e,t,i,n,r){var s,o,u;return(s=Math.sqrt(a*a+e*e))&&(a/=s,e/=s),(u=a*t+e*i)&&(t-=a*u,i-=e*u),(o=Math.sqrt(t*t+i*i))&&(t/=o,i/=o,u/=o),a*i<e*t&&(a=-a,e=-e,u=-u,s=-s),{translateX:n,translateY:r,rotate:Math.atan2(e,a)*_t,skewX:Math.atan(u)*_t,scaleX:s,scaleY:o}}var Ta;function cl(a){const e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(a+"");return e.isIdentity?_e:Si(e.a,e.b,e.c,e.d,e.e,e.f)}function hl(a){return a==null||(Ta||(Ta=document.createElementNS("http://www.w3.org/2000/svg","g")),Ta.setAttribute("transform",a),!(a=Ta.transform.baseVal.consolidate()))?_e:(a=a.matrix,Si(a.a,a.b,a.c,a.d,a.e,a.f))}function wi(a,e,t,i){function n(d){return d.length?d.pop()+" ":""}function r(d,l,c,h,p,g){if(d!==c||l!==h){var f=p.push("translate(",null,e,null,t);g.push({i:f-4,x:Y(d,c)},{i:f-2,x:Y(l,h)})}else(c||h)&&p.push("translate("+c+e+h+t)}function s(d,l,c,h){d!==l?(d-l>180?l+=360:l-d>180&&(d+=360),h.push({i:c.push(n(c)+"rotate(",null,i)-2,x:Y(d,l)})):l&&c.push(n(c)+"rotate("+l+i)}function o(d,l,c,h){d!==l?h.push({i:c.push(n(c)+"skewX(",null,i)-2,x:Y(d,l)}):l&&c.push(n(c)+"skewX("+l+i)}function u(d,l,c,h,p,g){if(d!==c||l!==h){var f=p.push(n(p)+"scale(",null,",",null,")");g.push({i:f-4,x:Y(d,c)},{i:f-2,x:Y(l,h)})}else(c!==1||h!==1)&&p.push(n(p)+"scale("+c+","+h+")")}return function(d,l){var c=[],h=[];return d=a(d),l=a(l),r(d.translateX,d.translateY,l.translateX,l.translateY,c,h),s(d.rotate,l.rotate,c,h),o(d.skewX,l.skewX,c,h),u(d.scaleX,d.scaleY,l.scaleX,l.scaleY,c,h),d=l=null,function(p){for(var g=-1,f=h.length,y;++g<f;)c[(y=h[g]).i]=y.x(p);return c.join("")}}}var ml=wi(cl,"px, ","px)","deg)"),pl=wi(hl,", ",")",")"),na=0,ma=0,da=0,Ai=1e3,Ia,pa,Wa=0,V=0,Xa=0,Sa=typeof performance=="object"&&performance.now?performance:Date,vi=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(a){setTimeout(a,17)};function Ie(){return V||(vi(gl),V=Sa.now()+Xa)}function gl(){V=0}function za(){this._call=this._time=this._next=null}za.prototype=Ci.prototype={constructor:za,restart:function(a,e,t){if(typeof a!="function")throw new TypeError("callback is not a function");t=(t==null?Ie():+t)+(e==null?0:+e),!this._next&&pa!==this&&(pa?pa._next=this:Ia=this,pa=this),this._call=a,this._time=t,Se()},stop:function(){this._call&&(this._call=null,this._time=1/0,Se())}};function Ci(a,e,t){var i=new za;return i.restart(a,e,t),i}function fl(){Ie(),++na;for(var a=Ia,e;a;)(e=V-a._time)>=0&&a._call.call(void 0,e),a=a._next;--na}function St(){V=(Wa=Sa.now())+Xa,na=ma=0;try{fl()}finally{na=0,bl(),V=0}}function yl(){var a=Sa.now(),e=a-Wa;e>Ai&&(Xa-=e,Wa=a)}function bl(){for(var a,e=Ia,t,i=1/0;e;)e._call?(i>e._time&&(i=e._time),a=e,e=e._next):(t=e._next,e._next=null,e=a?a._next=t:Ia=t);pa=a,Se(i)}function Se(a){if(!na){ma&&(ma=clearTimeout(ma));var e=a-V;e>24?(a<1/0&&(ma=setTimeout(St,a-Sa.now()-Xa)),da&&(da=clearInterval(da))):(da||(Wa=Sa.now(),da=setInterval(yl,Ai)),na=1,vi(St))}}function wt(a,e,t){var i=new za;return e=e==null?0:+e,i.restart(n=>{i.stop(),a(n+e)},e,t),i}var _l=ni("start","end","cancel","interrupt"),Sl=[],ki=0,At=1,we=2,La=3,vt=4,Ae=5,Na=6;function Qa(a,e,t,i,n,r){var s=a.__transition;if(!s)a.__transition={};else if(t in s)return;wl(a,t,{name:e,index:i,group:n,on:_l,tween:Sl,time:r.time,delay:r.delay,duration:r.duration,ease:r.ease,timer:null,state:ki})}function We(a,e){var t=L(a,e);if(t.state>ki)throw new Error("too late; already scheduled");return t}function H(a,e){var t=L(a,e);if(t.state>La)throw new Error("too late; already running");return t}function L(a,e){var t=a.__transition;if(!t||!(t=t[e]))throw new Error("transition not found");return t}function wl(a,e,t){var i=a.__transition,n;i[e]=t,t.timer=Ci(r,0,t.time);function r(d){t.state=At,t.timer.restart(s,t.delay,t.time),t.delay<=d&&s(d-t.delay)}function s(d){var l,c,h,p;if(t.state!==At)return u();for(l in i)if(p=i[l],p.name===t.name){if(p.state===La)return wt(s);p.state===vt?(p.state=Na,p.timer.stop(),p.on.call("interrupt",a,a.__data__,p.index,p.group),delete i[l]):+l<e&&(p.state=Na,p.timer.stop(),p.on.call("cancel",a,a.__data__,p.index,p.group),delete i[l])}if(wt(function(){t.state===La&&(t.state=vt,t.timer.restart(o,t.delay,t.time),o(d))}),t.state=we,t.on.call("start",a,a.__data__,t.index,t.group),t.state===we){for(t.state=La,n=new Array(h=t.tween.length),l=0,c=-1;l<h;++l)(p=t.tween[l].value.call(a,a.__data__,t.index,t.group))&&(n[++c]=p);n.length=c+1}}function o(d){for(var l=d<t.duration?t.ease.call(null,d/t.duration):(t.timer.restart(u),t.state=Ae,1),c=-1,h=n.length;++c<h;)n[c].call(a,l);t.state===Ae&&(t.on.call("end",a,a.__data__,t.index,t.group),u())}function u(){t.state=Na,t.timer.stop(),delete i[e];for(var d in i)return;delete a.__transition}}function Al(a,e){var t=a.__transition,i,n,r=!0,s;if(t){e=e==null?null:e+"";for(s in t){if((i=t[s]).name!==e){r=!1;continue}n=i.state>we&&i.state<Ae,i.state=Na,i.timer.stop(),i.on.call(n?"interrupt":"cancel",a,a.__data__,i.index,i.group),delete t[s]}r&&delete a.__transition}}function vl(a){return this.each(function(){Al(this,a)})}function Cl(a,e){var t,i;return function(){var n=H(this,a),r=n.tween;if(r!==t){i=t=r;for(var s=0,o=i.length;s<o;++s)if(i[s].name===e){i=i.slice(),i.splice(s,1);break}}n.tween=i}}function kl(a,e,t){var i,n;if(typeof t!="function")throw new Error;return function(){var r=H(this,a),s=r.tween;if(s!==i){n=(i=s).slice();for(var o={name:e,value:t},u=0,d=n.length;u<d;++u)if(n[u].name===e){n[u]=o;break}u===d&&n.push(o)}r.tween=n}}function Pl(a,e){var t=this._id;if(a+="",arguments.length<2){for(var i=L(this.node(),t).tween,n=0,r=i.length,s;n<r;++n)if((s=i[n]).name===a)return s.value;return null}return this.each((e==null?Cl:kl)(t,a,e))}function ze(a,e,t){var i=a._id;return a.each(function(){var n=H(this,i);(n.value||(n.value={}))[e]=t.apply(this,arguments)}),function(n){return L(n,i).value[e]}}function Pi(a,e){var t;return(typeof e=="number"?Y:e instanceof _a?bt:(t=_a(e))?(e=t,bt):dl)(a,e)}function Bl(a){return function(){this.removeAttribute(a)}}function Tl(a){return function(){this.removeAttributeNS(a.space,a.local)}}function El(a,e,t){var i,n=t+"",r;return function(){var s=this.getAttribute(a);return s===n?null:s===i?r:r=e(i=s,t)}}function Dl(a,e,t){var i,n=t+"",r;return function(){var s=this.getAttributeNS(a.space,a.local);return s===n?null:s===i?r:r=e(i=s,t)}}function xl(a,e,t){var i,n,r;return function(){var s,o=t(this),u;return o==null?void this.removeAttribute(a):(s=this.getAttribute(a),u=o+"",s===u?null:s===i&&u===n?r:(n=u,r=e(i=s,o)))}}function Rl(a,e,t){var i,n,r;return function(){var s,o=t(this),u;return o==null?void this.removeAttributeNS(a.space,a.local):(s=this.getAttributeNS(a.space,a.local),u=o+"",s===u?null:s===i&&u===n?r:(n=u,r=e(i=s,o)))}}function Ol(a,e){var t=Za(a),i=t==="transform"?pl:Pi;return this.attrTween(a,typeof e=="function"?(t.local?Rl:xl)(t,i,ze(this,"attr."+a,e)):e==null?(t.local?Tl:Bl)(t):(t.local?Dl:El)(t,i,e))}function Ll(a,e){return function(t){this.setAttribute(a,e.call(this,t))}}function Nl(a,e){return function(t){this.setAttributeNS(a.space,a.local,e.call(this,t))}}function Ml(a,e){var t,i;function n(){var r=e.apply(this,arguments);return r!==i&&(t=(i=r)&&Nl(a,r)),t}return n._value=e,n}function Fl(a,e){var t,i;function n(){var r=e.apply(this,arguments);return r!==i&&(t=(i=r)&&Ll(a,r)),t}return n._value=e,n}function Gl(a,e){var t="attr."+a;if(arguments.length<2)return(t=this.tween(t))&&t._value;if(e==null)return this.tween(t,null);if(typeof e!="function")throw new Error;var i=Za(a);return this.tween(t,(i.local?Ml:Fl)(i,e))}function Hl(a,e){return function(){We(this,a).delay=+e.apply(this,arguments)}}function jl(a,e){return e=+e,function(){We(this,a).delay=e}}function Il(a){var e=this._id;return arguments.length?this.each((typeof a=="function"?Hl:jl)(e,a)):L(this.node(),e).delay}function Wl(a,e){return function(){H(this,a).duration=+e.apply(this,arguments)}}function zl(a,e){return e=+e,function(){H(this,a).duration=e}}function Yl(a){var e=this._id;return arguments.length?this.each((typeof a=="function"?Wl:zl)(e,a)):L(this.node(),e).duration}function Ul(a,e){if(typeof e!="function")throw new Error;return function(){H(this,a).ease=e}}function Jl(a){var e=this._id;return arguments.length?this.each(Ul(e,a)):L(this.node(),e).ease}function $l(a,e){return function(){var t=e.apply(this,arguments);if(typeof t!="function")throw new Error;H(this,a).ease=t}}function Vl(a){if(typeof a!="function")throw new Error;return this.each($l(this._id,a))}function Kl(a){typeof a!="function"&&(a=oi(a));for(var e=this._groups,t=e.length,i=new Array(t),n=0;n<t;++n)for(var r=e[n],s=r.length,o=i[n]=[],u,d=0;d<s;++d)(u=r[d])&&a.call(u,u.__data__,d,r)&&o.push(u);return new W(i,this._parents,this._name,this._id)}function ql(a){if(a._id!==this._id)throw new Error;for(var e=this._groups,t=a._groups,i=e.length,n=t.length,r=Math.min(i,n),s=new Array(i),o=0;o<r;++o)for(var u=e[o],d=t[o],l=u.length,c=s[o]=new Array(l),h,p=0;p<l;++p)(h=u[p]||d[p])&&(c[p]=h);for(;o<i;++o)s[o]=e[o];return new W(s,this._parents,this._name,this._id)}function Zl(a){return(a+"").trim().split(/^|\s+/).every(function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||e==="start"})}function Xl(a,e,t){var i,n,r=Zl(e)?We:H;return function(){var s=r(this,a),o=s.on;o!==i&&(n=(i=o).copy()).on(e,t),s.on=n}}function Ql(a,e){var t=this._id;return arguments.length<2?L(this.node(),t).on.on(a):this.each(Xl(t,a,e))}function au(a){return function(){var e=this.parentNode;for(var t in this.__transition)if(+t!==a)return;e&&e.removeChild(this)}}function eu(){return this.on("end.remove",au(this._id))}function tu(a){var e=this._name,t=this._id;typeof a!="function"&&(a=Ge(a));for(var i=this._groups,n=i.length,r=new Array(n),s=0;s<n;++s)for(var o=i[s],u=o.length,d=r[s]=new Array(u),l,c,h=0;h<u;++h)(l=o[h])&&(c=a.call(l,l.__data__,h,o))&&("__data__"in l&&(c.__data__=l.__data__),d[h]=c,Qa(d[h],e,t,h,d,L(l,t)));return new W(r,this._parents,e,t)}function iu(a){var e=this._name,t=this._id;typeof a!="function"&&(a=si(a));for(var i=this._groups,n=i.length,r=[],s=[],o=0;o<n;++o)for(var u=i[o],d=u.length,l,c=0;c<d;++c)if(l=u[c]){for(var h=a.call(l,l.__data__,c,u),p,g=L(l,t),f=0,y=h.length;f<y;++f)(p=h[f])&&Qa(p,e,t,f,h,g);r.push(h),s.push(l)}return new W(r,s,e,t)}var nu=va.prototype.constructor;function ru(){return new nu(this._groups,this._parents)}function su(a,e){var t,i,n;return function(){var r=ia(this,a),s=(this.style.removeProperty(a),ia(this,a));return r===s?null:r===t&&s===i?n:n=e(t=r,i=s)}}function Bi(a){return function(){this.style.removeProperty(a)}}function ou(a,e,t){var i,n=t+"",r;return function(){var s=ia(this,a);return s===n?null:s===i?r:r=e(i=s,t)}}function lu(a,e,t){var i,n,r;return function(){var s=ia(this,a),o=t(this),u=o+"";return o==null&&(u=o=(this.style.removeProperty(a),ia(this,a))),s===u?null:s===i&&u===n?r:(n=u,r=e(i=s,o))}}function uu(a,e){var t,i,n,r="style."+e,s="end."+r,o;return function(){var u=H(this,a),d=u.on,l=u.value[r]==null?o||(o=Bi(e)):void 0;(d!==t||n!==l)&&(i=(t=d).copy()).on(s,n=l),u.on=i}}function du(a,e,t){var i=(a+="")=="transform"?ml:Pi;return e==null?this.styleTween(a,su(a,i)).on("end.style."+a,Bi(a)):typeof e=="function"?this.styleTween(a,lu(a,i,ze(this,"style."+a,e))).each(uu(this._id,a)):this.styleTween(a,ou(a,i,e),t).on("end.style."+a,null)}function cu(a,e,t){return function(i){this.style.setProperty(a,e.call(this,i),t)}}function hu(a,e,t){var i,n;function r(){var s=e.apply(this,arguments);return s!==n&&(i=(n=s)&&cu(a,s,t)),i}return r._value=e,r}function mu(a,e,t){var i="style."+(a+="");if(arguments.length<2)return(i=this.tween(i))&&i._value;if(e==null)return this.tween(i,null);if(typeof e!="function")throw new Error;return this.tween(i,hu(a,e,t??""))}function pu(a){return function(){this.textContent=a}}function gu(a){return function(){var e=a(this);this.textContent=e??""}}function fu(a){return this.tween("text",typeof a=="function"?gu(ze(this,"text",a)):pu(a==null?"":a+""))}function yu(a){return function(e){this.textContent=a.call(this,e)}}function bu(a){var e,t;function i(){var n=a.apply(this,arguments);return n!==t&&(e=(t=n)&&yu(n)),e}return i._value=a,i}function _u(a){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(a==null)return this.tween(e,null);if(typeof a!="function")throw new Error;return this.tween(e,bu(a))}function Su(){for(var a=this._name,e=this._id,t=Ti(),i=this._groups,n=i.length,r=0;r<n;++r)for(var s=i[r],o=s.length,u,d=0;d<o;++d)if(u=s[d]){var l=L(u,e);Qa(u,a,t,d,s,{time:l.time+l.delay+l.duration,delay:0,duration:l.duration,ease:l.ease})}return new W(i,this._parents,a,t)}function wu(){var a,e,t=this,i=t._id,n=t.size();return new Promise(function(r,s){var o={value:s},u={value:function(){--n===0&&r()}};t.each(function(){var d=H(this,i),l=d.on;l!==a&&(e=(a=l).copy(),e._.cancel.push(o),e._.interrupt.push(o),e._.end.push(u)),d.on=e}),n===0&&r()})}var Au=0;function W(a,e,t,i){this._groups=a,this._parents=e,this._name=t,this._id=i}function Ti(){return++Au}var j=va.prototype;W.prototype={constructor:W,select:tu,selectAll:iu,selectChild:j.selectChild,selectChildren:j.selectChildren,filter:Kl,merge:ql,selection:ru,transition:Su,call:j.call,nodes:j.nodes,node:j.node,size:j.size,empty:j.empty,each:j.each,on:Ql,attr:Ol,attrTween:Gl,style:du,styleTween:mu,text:fu,textTween:_u,remove:eu,tween:Pl,delay:Il,duration:Yl,ease:Jl,easeVarying:Vl,end:wu,[Symbol.iterator]:j[Symbol.iterator]};function vu(a){return((a*=2)<=1?a*a*a:(a-=2)*a*a+2)/2}var Cu={time:null,delay:0,duration:250,ease:vu};function ku(a,e){for(var t;!(t=a.__transition)||!(t=t[e]);)if(!(a=a.parentNode))throw new Error(`transition ${e} not found`);return t}function Pu(a){var e,t;a instanceof W?(e=a._id,a=a._name):(e=Ti(),(t=Cu).time=Ie(),a=a==null?null:a+"");for(var i=this._groups,n=i.length,r=0;r<n;++r)for(var s=i[r],o=s.length,u,d=0;d<o;++d)(u=s[d])&&Qa(u,a,e,d,s,t||ku(u,e));return new W(i,this._parents,a,e)}va.prototype.interrupt=vl;va.prototype.transition=Pu;function Q(a,e,t){this.k=a,this.x=e,this.y=t}Q.prototype={constructor:Q,scale:function(a){return a===1?this:new Q(this.k*a,this.x,this.y)},translate:function(a,e){return a===0&e===0?this:new Q(this.k,this.x+this.k*a,this.y+this.k*e)},apply:function(a){return[a[0]*this.k+this.x,a[1]*this.k+this.y]},applyX:function(a){return a*this.k+this.x},applyY:function(a){return a*this.k+this.y},invert:function(a){return[(a[0]-this.x)/this.k,(a[1]-this.y)/this.k]},invertX:function(a){return(a-this.x)/this.k},invertY:function(a){return(a-this.y)/this.k},rescaleX:function(a){return a.copy().domain(a.range().map(this.invertX,this).map(a.invert,a))},rescaleY:function(a){return a.copy().domain(a.range().map(this.invertY,this).map(a.invert,a))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var Bu=new Q(1,0,0);Tu.prototype=Q.prototype;function Tu(a){for(;!a.__zoom;)if(!(a=a.parentNode))return Bu;return a.__zoom}const Eu=[];function Ei(a){const e="BBMCountsDBGeojson";let t=5;return new Promise((i,n)=>{const r=indexedDB.open(e,t);r.onerror=s=>{n(`Error opening database for store ${a}: ${s.target.error}`)},r.onsuccess=s=>{const o=s.target.result;i(o)},r.onupgradeneeded=s=>{const o=s.target.result;o.objectStoreNames.contains(a)||o.createObjectStore(a,{keyPath:"id",autoIncrement:!0})}})}async function Du(a,e){try{const{id:t,...i}=e,o=(await Ei(a)).transaction([a],"readwrite").objectStore(a).put(i);return new Promise((u,d)=>{o.onsuccess=l=>{u()},o.onerror=l=>{d(`Error storing data in ${a}`)}})}catch(t){throw new Error(`Error opening database: ${t}`)}}async function xu(a){try{const i=(await Ei(a)).transaction([a],"readonly").objectStore(a),n=i.get(1),r=i.openCursor(null,"prev");return new Promise((s,o)=>{r.onsuccess=u=>{const d=u.target.result;if(d){const l=d.value;s(l)}else s(null)},r.onerror=u=>{o(`Error retrieving data from ${a}`)}})}catch{return null}}const Ru="BBMCountsDBObservations",ve="ObservationsStore";function Ou(){return new Promise((a,e)=>{const t=indexedDB.open(Ru,1);t.onerror=i=>{e("Error opening database")},t.onsuccess=i=>{const n=i.target.result;a(n)},t.onupgradeneeded=i=>{i.target.result.createObjectStore(ve,{keyPath:"id",autoIncrement:!0})}})}function Lu(a){return Ou().then(e=>{const{id:t,...i}=a,n=e.transaction([ve],"readwrite");return n.objectStore(ve).put(i),n.complete})}const Nu={namespaced:!0,state:{headers:[],observations:[],users:[],taxa:[],districts:[],loading:null,geojson:{countries:{},states:{},districts:{}},filters:{year:2023,portal:null,state:null,district:null},shouldPersist:!1,last_update_time:{counts:null,inat:null,ibp:null,ifb:null},total_results:{counts:null,inat:null,ibp:null,ifb:null},inat_total_results:0,inat_bbm_total:0},getters:{inat_new_total(a){return a.inat_total_results-a.inat_bbm_total},filtered_observations(a){console.time("filtered_observations");let e={};if(a.filters.year)for(const t in a.observations){const i=a.observations[t],n=us(i,r=>parseInt(r[2].substring(0,4)));e[t]=n.get(a.filters.year)||[]}else e={...a.observations};if(a.filters.state)for(const t in e)e[t]=e[t].filter(i=>i[4]==a.filters.state);return a.filters.portal&&e[a.filters.portal]&&Object.keys(e).forEach(t=>{t!=a.filters.portal&&(e[t]=[])}),console.timeEnd("filtered_observations"),e},observation_stats(a,e){if(console.time("observations_stats"),Object.keys(e.filtered_observations).length===0)return console.timeEnd("observations_stats"),{};const t={counts:ca(e.filtered_observations.counts),inat:ca(e.filtered_observations.inat),ibp:ca(e.filtered_observations.ibp),ifb:ca(e.filtered_observations.ifb),total:ca([].concat(...Object.values(e.filtered_observations)))};return console.timeEnd("observations_stats"),t},map_data(a,e){const i=Object.values(e.filtered_observations).flat().reduce((n,r)=>{const s=r[4],o=r[3];return n.states[s]||(n.states[s]=0),n.states[s]++,n.districts[o]||(n.districts[o]=0),n.districts[o]++,n},{states:{},districts:{}});return{states:Object.entries(i.states).map(([n,r])=>({name:n,value:r})),districts:Object.entries(i.districts).map(([n,r])=>({name:n,value:r}))}},table_data(a,e){console.group("table_data getter Execution Time"),console.time("total"),console.time("init");const{filters:t,geojson:i}=a,{filtered_observations:n,observation_stats:r}=e;let s=[];const o={portals:{headers:[{name:"portal",label:"Portals",sortable:!1,class:"nowrap"},{name:"observations",label:"Observations",sortable:!0},{name:"users",label:"Users",sortable:!0},{name:"states",label:"States",sortable:!0},{name:"districts",label:"Districts",sortable:!0}],rows:[],total_row:!0,hue:"danger",click:"portal",sort_col:1},locations:{headers:[{name:"state",label:"State",sortable:!1,class:"nowrap"},{name:"observations",label:"Observations",sortable:!0},{name:"users",label:"Users",sortable:!0},{name:"taxa",label:"Taxa",sortable:!0},{name:"portals",label:"Portals",sortable:!1}],rows:[],total_row:!1,hue:"info",click:"state",sort_col:1},taxa:{headers:[{name:"common_name",label:"Name",sortable:!0,class:"nowrap"},{name:"scientific_name",label:"Scientific Name",sortable:!0,class:"nowrap"},{name:"rank",label:"Rank",sortable:!0,class:"nowrap"},{name:"observations",label:"Observations",sortable:!0},{name:"users",label:"Users",sortable:!0},{name:"states",label:"States",sortable:!0},{name:"districts",label:"Districts",sortable:!0}],rows:[],total_row:!1,hue:"primary",click:null,sort_col:3},date:{headers:[{name:"year",label:"Year",sortable:!0,class:"nowrap"},{name:"observations",label:"Observations",sortable:!0},{name:"taxa",label:"Taxa",sortable:!0},{name:"users",label:"Users",sortable:!0},{name:"states",label:"States",sortable:!0},{name:"districts",label:"Districts",sortable:!0}],rows:[],total_row:!1,hue:"danger",click:null,sort_col:0},users:{headers:[{name:"user",label:"User",sortable:!0,class:"nowrap"},{name:"portals",label:"Portals",sortable:!0},{name:"observations",label:"Observations",sortable:!0},{name:"taxa",label:"Taxa",sortable:!0},{name:"years",label:"Years",sortable:!0},{name:"states",label:"States",sortable:!0},{name:"districts",label:"Districts",sortable:!0}],rows:[],total_row:!1,hue:"warning",click:null,sort_col:2}},u=Object.values(n).flat();if(console.timeEnd("init"),u.length===0)return console.timeEnd("total"),console.groupEnd(),o;console.time("portal"),o.portals.rows=Object.entries(r).map(([l,c])=>({portal:l,...c})),console.timeEnd("portal"),console.time("locations"),s=[],t.state==null?i.states.features&&(s=ua(u,c=>c[4]).reduce((c,[h,p])=>{const g=Object.keys(n).filter(_=>p.some(w=>w[4]===h)),f=new Set,y=new Set;return p.forEach(_=>{f.add(_[0]),y.add(_[1])}),c.push({state:h,observations:p.length,users:f.size,taxa:y.size,portals:g.map(le).join(", ")}),c},[])):i.districts.features&&(o.locations.headers[0].name="district",o.locations.headers[0].label="District",o.locations.click="district",i.districts.features.filter(c=>c.properties.state===t.state).map(c=>c.properties.district).map(c=>{let h={};for(const y of Object.keys(n))h[y]=n[y].filter(_=>_[3]===c);const p=Object.values(h).flat(),g=v(p.map(y=>y[2])),f=v(p.map(y=>y[1]));s.push({district:c,observations:p.length,users:g,taxa:f,portals:Object.entries(h).filter(y=>y[1].length>0).map(y=>le(y[0])).join(", ")})})),o.locations.rows=s,console.timeEnd("locations"),console.time("taxa"),s=ua(u,l=>l[1]).map(l=>{let c=a.taxa.find(y=>y.id===l[0]);if(!c)return{};const h=l[1].length,p=h===1?1:v(l[1].map(y=>y[0])),g=h===1?1:v(l[1].map(y=>y[4])),f=h===1?1:v(l[1].map(y=>y[3]));return{common_name:c.common_name,scientific_name:c.name,rank:c.rank,observations:h,users:p,states:g,districts:f}}),o.taxa.rows=s,console.timeEnd("taxa"),console.time("date"),t.year==null?s=ua(u,l=>l[2].slice(0,4)).map(l=>({year:l[0],observations:l[1].length,taxa:v(l[1].map(c=>c[1])),users:v(l[1].map(c=>c[0])),states:v(l[1].map(c=>c[4])),districts:v(l[1].map(c=>c[3]))})):(o.date.headers[0].name="date",o.date.headers[0].label="Date",s=ua(u,l=>l[2]).map(l=>({date_raw:l[0],date:Mu(l[0]),observations:l[1].length,taxa:v(l[1].map(c=>c[1])),users:v(l[1].map(c=>c[0])),states:v(l[1].map(c=>c[4])),districts:v(l[1].map(c=>c[3]))}))),o.date.rows=s,console.timeEnd("date"),console.time("user");const d={};for(const l in n)for(const c of n[l]){const h=c[0];d[h]=d[h]||new Set,d[h].add(l)}return o.users.rows=ua(u,l=>l[0]).map(l=>{const c=l[0],h=d[c]?[...d[c]].join(", "):"",p=v(l[1].map(f=>f[1])),g=[...new Set(l[1].map(f=>f[2].slice(0,4)))].join(", ");return{user:c,portals:le(h),observations:l[1].length,taxa:p,years:g,states:v(l[1].map(f=>f[4])),districts:v(l[1].map(f=>f[3]))}}),console.timeEnd("user"),console.timeEnd("total"),console.groupEnd(),o},filtered_map_data(a,e){let t=JSON.parse(JSON.stringify(e.map_data));if(a.filters.state!=null){const i=a.geojson.districts.features.filter(n=>n.properties.state===a.filters.state).map(n=>n.properties.district);t.states=t.states.filter(n=>n.name===a.filters.state),t.districts=t.districts.filter(n=>i.includes(n.name))}return a.filters.district!=null&&(t.districts=t.districts.filter(i=>i.name===a.filters.district)),t}},mutations:{SET_LOADING(a,e){e!=null&&console.info("Loading:",e),a.loading=e},SET_TAXA(a,e){a.taxa=e},SET_HEADERS(a,e){a.headers=e},SET_USERS(a,e){a.users=e},SET_DISTRICTS_LIST(a,e){a.districts=e},SET_LAST_UPDATE_TIME(a,e){a.last_update_time=e},SET_TOTAL_RESULTS(a,e){a.total_results=e},SET_INAT_TOTAL_RESULTS(a,e){a.inat_total_results=e},SET_INAT_BBM_TOTAL(a,e){a.inat_bbm_total=e},SET_OBSERVATIONS(a,e){const t=new Map(a.geojson.districts.features.map(n=>[n.properties.district,n.properties.state]));let i=[];Object.entries(e).map(([n,r])=>{i[n]=r.map(s=>{const o=a.districts[s[4]];return[a.users[n][s[2]],s[1],s[3],o,t.get(o)]})}),a.observations=i},SET_GEOJSON(a,e){a.geojson=e},SET_FILTER(a,e){a.filters[e.field]=a.filters[e.field]==e.value?null:e.value}},actions:{async getAllData({commit:a,dispatch:e}){await e("getTaxa"),await e("getMaps"),await e("getObservations")},async getObservations({commit:a}){console.groupCollapsed("Loading Data"),a("SET_LOADING","Getting Observations"),await X();let t=(await b.get("/api/data/observations")).data;Lu(t),a("SET_LOADING","Setting Headers"),a("SET_HEADERS",t.headers),a("SET_LOADING","Setting Users"),await X(),a("SET_USERS",t.users),a("SET_LOADING","Setting Districts"),await X(),a("SET_DISTRICTS_LIST",t.districts),a("SET_LOADING","Setting Observations"),await X(),a("SET_OBSERVATIONS",t.observations),console.groupEnd(),a("SET_LOADING",null),await X()},async getTaxa({commit:a}){a("SET_LOADING","Getting Taxa Details");try{const{data:e}=await b.get("/api/data/taxa");a("SET_TAXA",e)}catch(e){console.error("error retreiving Taxa",e)}},async getMaps({commit:a}){a("SET_LOADING","Getting Map Data");let e=await xu("geojson");e||(e=(await b.get("/api/maps/geojson")).data,console.log("getMaps",e),Du("geojson",e)),a("SET_GEOJSON",e)},setLoading({commit:a},e){a("SET_LOADING",e)},async setFilter({commit:a},e){a("SET_LOADING","Setting Filter"),a("SET_FILTER",e),a("SET_LOADING",null)},async addStoredData({dispatch:a,state:e}){const t=Eu;console.log(t);const i={taxa:await b.post("/api/data/store_taxa",{data:t.taxa}),observations:await b.post("/api/data/store_inat_observations",{data:t.observations})};console.log(i)},async initInatPull({dispatch:a}){await a("getTotalResultsInternal"),await a("getInatNewTotal"),await a("getInatTotalResults")},async pullInat({commit:a,dispatch:e,state:t,getters:i},n){a("SET_LOADING","iNatPull "+n),a("SET_LOADING","getMaps"),await e("getMaps"),a("SET_LOADING","getTaxa"),await e("getTaxa");let r="https://api.inaturalist.org/v1/observations?place_id=any&project_id=big-butterfly-month-2023&verifiable=any&order=desc&order_by=updated";const s=await e("getLastUpdateTimes");s&&(n||(r+="&updated_since="+s.inat));const o=200;let u="";const d=await b.get(r+"&per_page=0");if(d){const l=Math.ceil(d.data.total_results/o)+1;let c=[];for(let h=1;h<=l;h++){await X();let p={taxa:[],observations:[]};u=Hu(r,h,o);const g=await b.get(u);let f=`Pulling data from: Page ${h} of ${l}`;console.groupCollapsed(f),a("SET_LOADING",`${f}<br>Pull Url: ${u}`),g&&(a("SET_LOADING",`${f}<br>Observations: ${g.data.results.length}`),g.data.results.forEach(_=>{let w=Gu(t.taxa,_.taxon,p.taxa);w&&p.taxa.push(w),p.observations.push(Fu(_,t.geojson.districts.features))}));const y=Object.entries(p).map(([_,w])=>[_,w.length]);a("SET_LOADING",`${f}<br>New Data<br> Taxa: ${y[0][1]}<br> Observations: ${y[1][1]}`),c.push({taxa:await b.post("/api/data/store_taxa",{data:p.taxa}),observations:await b.post("/api/data/store_inat_observations",{data:p.observations})}),console.groupEnd()}}a("SET_LOADING",null)},async getLastUpdateTimes({commit:a}){let e=await b.get("/api/data/last_updated");if(e){const t=e.data;return a("SET_LAST_UPDATE_TIME",t),t}},async getTotalResultsInternal({commit:a}){let e=await b.get("/api/data/total_results");if(e){console.log("total_results",e.data);const t=e.data;a("SET_TOTAL_RESULTS",t)}},async getInatTotalResults({commit:a}){let e=await b.get("https://api.inaturalist.org/v1/observations?project_id=big-butterfly-month-2023&verifiable=any&per_page=0");if(e)return a("SET_INAT_TOTAL_RESULTS",e.data.total_results),e.data},async getInatNewTotal({commit:a,state:e}){let t=await b.get("/api/data/inat_new_total_2023");t&&a("SET_INAT_BBM_TOTAL",t.data)}}};function le(a){return a.replace("inats","iNat").replace("ibps","IBP").replace("ifbs","IFB")}function Mu(a){const e=new Date(a),t=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],i=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],n=t[e.getUTCDay()],r=e.getUTCDate(),s=i[e.getUTCMonth()],o=e.getUTCFullYear().toString().substring(2);return`${r<10?"0"+r:r}-${s}, ${o} (${n})`}function ca(a){const e={users:new Set,states:new Set,districts:new Set};for(const t of a)e.users.add(t[0]),e.states.add(t[4]),e.districts.add(t[3]);return{observations:a.length,users:e.users.size,states:e.states.size,districts:e.districts.size}}function v(a){const e={};let t=0;for(const i of a)e[i]||(e[i]=!0,t++);return t}function Fu(a){let e=a.location.split(",").map(n=>parseFloat(n));const t=a.user.name&&a.user.name.length>3?a.user.name:a.user.login;return{id:a.id,user_id:a.user.id,user:t,observed_on:a.observed_on,place:a.place_guess,latitude:e[0],longitude:e[1],taxa_id:a.taxon.id,img_url:a.photos[0].url,inat_created_at:a.created_at,inat_updated_at:a.updated_at}}function Gu(a,e,t){return a.filter(i=>i.id==e.id).length>0||t.filter(i=>i.id==e.id).length>0?!1:{id:e.id,name:e.name||"",common_name:e.preferred_common_name||"",rank:e.rank,ancestry:e.ancestry}}function Hu(a,e,t){return a+"&page="+e+"&per_page="+t}async function X(){await new Promise(a=>setTimeout(a,500))}const ju={namespaced:!0,state:{all_data:[],shouldPersist:!1},getters:{all_data(a){return a.all_data}},mutations:{SET_ALL_DATA(a,e){a.all_data=e},REMOVE_DATA(a,e){let t=a.all_data.findIndex(i=>i.id===e);a.all_data.splice(t,1)}},actions:{async getAllData({commit:a}){try{const{data:e}=await b.get("/api/get_all_users");a("SET_ALL_DATA",e)}catch({response:{data:e}}){console.error("error retreiving Users")}},async update({dispatch:a},e){try{const{data:t}=await b.post("/api/update_user",e);await a("getAllData"),console.log("update_user",t)}catch({response:{data:t}}){console.error("error updating User")}},async delete({commit:a},e){try{await b.delete(`/api/delete_user/${e}`),a("REMOVE_DATA",e)}catch({response:{data:t}}){console.error("error deleting User")}}}},Iu={namespaced:!0,state:{all_data:[],shouldPersist:!1},mutations:{SET_ALL_DATA(a,e){a.all_data=e}},actions:{async getAllData({commit:a}){try{const{data:e}=await b.get("/api/get_all_logs");a("SET_ALL_DATA",e)}catch({response:{data:e}}){console.error("error retreiving Logs")}}}},Wu={namespaced:!0,state:{all_data:[],loading:null},mutations:{SET_ALL_DATA(a,e){a.all_data=e},REMOVE_DATA(a,e){a.all_data=a.all_data.filter(t=>t.id!=e.id)},SET_LOADING(a,e){e!=null&&console.info("Loading:",e),a.loading=e},SET_FORM_STATUS(a,e){let t=a.all_data.find(i=>i.id==e.id);t.status=e.status},SET_SPECIES_STATUS(a,e){let i=a.all_data.find(n=>n.id==e.form_id).species_list.find(n=>n.id==e.id);i.status=e.status}},actions:{async getAllData({commit:a}){try{const{data:e}=await b.get("/api/count_forms");a("SET_ALL_DATA",e)}catch({response:{data:e}}){console.error("error retreiving partners")}},async approveForm({commit:a,dispatch:e},t){console.groupCollapsed(`Approving Form #${t.id} ( ${t.species_list.length} species )`),a("SET_LOADING","Approving Form"),t.species_list.filter(i=>i.status=="pending").forEach(async i=>{await e("setSpeciesStatus",{species_id:i.id,status:"approved"})}),await e("setFormStatus",{form_id:t.id,status:"approved"}),a("SET_LOADING",null),console.groupEnd()},async deleteForm({commit:a},e){await b.delete("/api/count_forms/delete_form",{data:e}),a("REMOVE_DATA",e)},async setFormStatus({commit:a,dispatch:e},t){a("SET_LOADING",`Setting Form (#${t.form_id}) Status to `+t.status);const{data:i}=await b.post("/api/count_forms/set_form_status",t);if(i){let n={id:i.form.id,status:i.form.status};a("SET_FORM_STATUS",n)}a("SET_LOADING",null)},async setSpeciesStatus({commit:a,dispatch:e},t){a("SET_LOADING",`Setting Species (#${t.species_id}) Status to `+t.status);const{data:i}=await b.post("/api/count_forms/set_species_status",t);if(i){let n={id:i.species.id,form_id:i.species.count_form_id,status:i.species.status};a("SET_SPECIES_STATUS",n)}a("SET_LOADING",null)}}},zu={namespaced:!0,state:{data:[],total_records:0},getters:{data_with_classes(a){let e=[];return a.data&&a.data.length&&(e=a.data.map(t=>{let i={date:Yu(t.observed_on),user:Uu(t.user),location:Ju(t),taxon:$u(t),all:!1};return i.all=Vu(i),{...t,classes:i}})),e}},mutations:{SET_TOTAL_RECORDS(a,e){a.total_records=e},SET_DATA(a,e){a.data=e},UPDATE_DATA(a,e){a.data=a.data.map(t=>t.id===e.id?e:t)}},actions:{async getData({commit:a},e){const{portal:t,per_page:i,page_no:n}=e;let r=await b.get(`/api/data/portal_observations/${t}?per_page=${i}&page=${n}`);r&&(t=="counts"?(a("SET_TOTAL_RECORDS",r.data.length),a("SET_DATA",r.data)):(console.log(r),a("SET_TOTAL_RECORDS",r.data.total),a("SET_DATA",r.data.data)))},async updateData({commit:a},e){const{classes:t,...i}=e;let n=await b.post("/api/data/portal_observations/update",i);if(n){let r=n.data;return e.portal=="inat"&&(console.log(r[1]),r=r[0]),a("UPDATE_DATA",r),!0}}}},Yu=a=>!a||/^(202[0-3])-09-\d{2}$/.test(a),Uu=a=>a&&a.length>0,Ju=a=>{const e=a.country==="India",t={country:!!a.country,state:e?!!a.state:!0,district:e?!!a.district:!0,latitude:!isNaN(a.latitude)&&!!a.latitude,longitude:!isNaN(a.longitude)&&!!a.longitude,all:!1};return t.all=Di(t),t},$u=a=>{let e={taxa_id:!!a.taxa_id,species:!!a.species,all:!1};return e.all=Di(e),e},Di=a=>{for(const e in a)if(e!=="all"&&a[e]!==!0)return!1;return!0},Vu=a=>a.date&&a.user&&a.location.all&&a.taxon.all,ad=rn({plugins:[cn({paths:["auth"]})],modules:{auth:Tr,butterfly_counts:Xr,count_forms:Wu,data:Nu,district_coordinators:is,locations:as,logs:Iu,manage_users:ju,maps:ns,partners:Er,press_links:xr,resources:es,testimonials:Dr,clean_data:zu}});export{R as S,Q as T,b as a,Qu as b,Xu as c,bi as d,Y as e,_a as f,ua as g,bt as h,Bu as i,dl as j,ni as k,Al as l,Zu as m,Uo as r,ad as s,Tu as t,qu as u};
